Search.setIndex({"docnames": ["README", "catalogs/index", "catalogs/slicing-function-catalog/index", "catalogs/test-catalog/classification/index", "catalogs/test-catalog/index", "catalogs/test-catalog/regression/index", "catalogs/transformation-function-catalog/index", "cli/index", "cli/ngrok/index", "contribute/dev-environment", "contribute/index", "getting-started/index", "getting-started/key_vulnerabilities/data_leakage/index", "getting-started/key_vulnerabilities/ethics/index", "getting-started/key_vulnerabilities/index", "getting-started/key_vulnerabilities/overconfidence/index", "getting-started/key_vulnerabilities/performance_bias/index", "getting-started/key_vulnerabilities/robustness/index", "getting-started/key_vulnerabilities/spurious/index", "getting-started/key_vulnerabilities/stochasticity/index", "getting-started/key_vulnerabilities/underconfidence/index", "getting-started/quickstart", "guides/FAQ/index", "guides/cicd/index", "guides/cicd/pipeline", "guides/compare/index", "guides/debug/index", "guides/feedback/index", "guides/index", "guides/installation_app/index", "guides/installation_app/install_aws/index", "guides/installation_app/install_azure/index", "guides/installation_app/install_gcp/index", "guides/installation_library/index", "guides/scan/index", "guides/slice/index", "guides/test-suite/index", "guides/transformation/index", "guides/upload/index", "guides/wrap_dataset/index", "guides/wrap_model/index", "index", "integrations/index", "integrations/mlflow/index", "integrations/mlflow/mlflow-llm-example", "integrations/mlflow/mlflow-tabular-example", "integrations/wandb/index", "integrations/wandb/wandb-tabular-example", "reference/datasets/index", "reference/index", "reference/models/index", "reference/models/integrations/base_classes", "reference/models/integrations/catboost", "reference/models/integrations/function", "reference/models/integrations/huggingface", "reference/models/integrations/langchain", "reference/models/integrations/pytorch", "reference/models/integrations/sklearn", "reference/models/integrations/tensorflow", "reference/notebooks/airline_tweets_sentiment_analysis", "reference/notebooks/amazon_review_classification_sklearn", "reference/notebooks/api_model", "reference/notebooks/cancer_detection_xgboost", "reference/notebooks/churn_prediction_lgbm", "reference/notebooks/credit_scoring", "reference/notebooks/drug_classification_sklearn", "reference/notebooks/enron_email_classification_sklearn", "reference/notebooks/example_notebook", "reference/notebooks/fake_real_news_classification", "reference/notebooks/hotel_text_regression", "reference/notebooks/ieee_fraud_detection_adversarial_validation", "reference/notebooks/insurance_prediction_lgbm", "reference/notebooks/llm_comment_generation", "reference/notebooks/m5_sales_prediction_lgbm", "reference/notebooks/medical_transcript_classification_sklearn", "reference/notebooks/movie_review_sentiment_classification_pytorch_sklearn", "reference/notebooks/newspaper_classification_pytorch", "reference/notebooks/tripadvisor_sentiment_classification", "reference/notebooks/wage_classification", "reference/push/index", "reference/slicing-functions/index", "reference/suite/index", "reference/tests/drift", "reference/tests/index", "reference/tests/metamorphic", "reference/tests/performance", "reference/tests/statistic", "reference/transformation-functions/index", "tutorials/data-types/index", "tutorials/data-types/tabular/index", "tutorials/data-types/text/index", "tutorials/index", "tutorials/libraries/api/index", "tutorials/libraries/huggingface/index", "tutorials/libraries/huggingface/pytorch", "tutorials/libraries/index", "tutorials/libraries/langchain/index", "tutorials/libraries/lightgbm/index", "tutorials/libraries/pytorch/custom_model", "tutorials/libraries/pytorch/index", "tutorials/libraries/pytorch/linear_regression", "tutorials/libraries/pytorch/sst2_iterable", "tutorials/libraries/scikit-learn/index", "tutorials/libraries/tensorflow/classification_1d", "tutorials/libraries/tensorflow/classification_tfhub", "tutorials/libraries/tensorflow/index", "tutorials/libraries/xgboost/index", "tutorials/tasks/classification/index", "tutorials/tasks/index", "tutorials/tasks/regression/index", "tutorials/tasks/text-generation/index"], "filenames": ["README.md", "catalogs/index.md", "catalogs/slicing-function-catalog/index.rst", "catalogs/test-catalog/classification/index.rst", "catalogs/test-catalog/index.rst", "catalogs/test-catalog/regression/index.rst", "catalogs/transformation-function-catalog/index.rst", "cli/index.rst", "cli/ngrok/index.rst", "contribute/dev-environment.md", "contribute/index.rst", "getting-started/index.md", "getting-started/key_vulnerabilities/data_leakage/index.md", "getting-started/key_vulnerabilities/ethics/index.md", "getting-started/key_vulnerabilities/index.rst", "getting-started/key_vulnerabilities/overconfidence/index.md", "getting-started/key_vulnerabilities/performance_bias/index.md", "getting-started/key_vulnerabilities/robustness/index.md", "getting-started/key_vulnerabilities/spurious/index.md", "getting-started/key_vulnerabilities/stochasticity/index.md", "getting-started/key_vulnerabilities/underconfidence/index.md", "getting-started/quickstart.ipynb", "guides/FAQ/index.md", "guides/cicd/index.md", "guides/cicd/pipeline.ipynb", "guides/compare/index.md", "guides/debug/index.md", "guides/feedback/index.md", "guides/index.md", "guides/installation_app/index.rst", "guides/installation_app/install_aws/index.md", "guides/installation_app/install_azure/index.md", "guides/installation_app/install_gcp/index.md", "guides/installation_library/index.md", "guides/scan/index.rst", "guides/slice/index.md", "guides/test-suite/index.md", "guides/transformation/index.md", "guides/upload/index.md", "guides/wrap_dataset/index.md", "guides/wrap_model/index.md", "index.md", "integrations/index.md", "integrations/mlflow/index.md", "integrations/mlflow/mlflow-llm-example.ipynb", "integrations/mlflow/mlflow-tabular-example.ipynb", "integrations/wandb/index.md", "integrations/wandb/wandb-tabular-example.ipynb", "reference/datasets/index.rst", "reference/index.rst", "reference/models/index.rst", "reference/models/integrations/base_classes.rst", "reference/models/integrations/catboost.rst", "reference/models/integrations/function.rst", "reference/models/integrations/huggingface.rst", "reference/models/integrations/langchain.rst", "reference/models/integrations/pytorch.rst", "reference/models/integrations/sklearn.rst", "reference/models/integrations/tensorflow.rst", "reference/notebooks/airline_tweets_sentiment_analysis.ipynb", "reference/notebooks/amazon_review_classification_sklearn.ipynb", "reference/notebooks/api_model.ipynb", "reference/notebooks/cancer_detection_xgboost.ipynb", "reference/notebooks/churn_prediction_lgbm.ipynb", "reference/notebooks/credit_scoring.ipynb", "reference/notebooks/drug_classification_sklearn.ipynb", "reference/notebooks/enron_email_classification_sklearn.ipynb", "reference/notebooks/example_notebook.ipynb", "reference/notebooks/fake_real_news_classification.ipynb", "reference/notebooks/hotel_text_regression.ipynb", "reference/notebooks/ieee_fraud_detection_adversarial_validation.ipynb", "reference/notebooks/insurance_prediction_lgbm.ipynb", "reference/notebooks/llm_comment_generation.ipynb", "reference/notebooks/m5_sales_prediction_lgbm.ipynb", "reference/notebooks/medical_transcript_classification_sklearn.ipynb", "reference/notebooks/movie_review_sentiment_classification_pytorch_sklearn.ipynb", "reference/notebooks/newspaper_classification_pytorch.ipynb", "reference/notebooks/tripadvisor_sentiment_classification.ipynb", "reference/notebooks/wage_classification.ipynb", "reference/push/index.rst", "reference/slicing-functions/index.rst", "reference/suite/index.rst", "reference/tests/drift.rst", "reference/tests/index.rst", "reference/tests/metamorphic.rst", "reference/tests/performance.rst", "reference/tests/statistic.rst", "reference/transformation-functions/index.rst", "tutorials/data-types/index.md", "tutorials/data-types/tabular/index.md", "tutorials/data-types/text/index.md", "tutorials/index.md", "tutorials/libraries/api/index.md", "tutorials/libraries/huggingface/index.md", "tutorials/libraries/huggingface/pytorch.md", "tutorials/libraries/index.md", "tutorials/libraries/langchain/index.md", "tutorials/libraries/lightgbm/index.md", "tutorials/libraries/pytorch/custom_model.md", "tutorials/libraries/pytorch/index.md", "tutorials/libraries/pytorch/linear_regression.md", "tutorials/libraries/pytorch/sst2_iterable.md", "tutorials/libraries/scikit-learn/index.md", "tutorials/libraries/tensorflow/classification_1d.md", "tutorials/libraries/tensorflow/classification_tfhub.md", "tutorials/libraries/tensorflow/index.md", "tutorials/libraries/xgboost/index.md", "tutorials/tasks/classification/index.md", "tutorials/tasks/index.md", "tutorials/tasks/regression/index.md", "tutorials/tasks/text-generation/index.md"], "titles": ["Building the docs locally (continuously)", "Catalog", "\ud83d\udd2a Slicing function catalog", "Classification tests", "\ud83d\udcd6 Test catalog", "Regression tests", "\ud83e\ude84 Transformation function catalog", "Command-line interface", "Setup a <code class=\"code docutils literal notranslate\"><span class=\"pre\">ngrok</span></code> account", "How to configure local development environment", "\ud83e\uddd1\u200d\ud83d\udcbbContribute to Giskard", "Why Giskard?", "Data Leakage", "Unethical behaviour", "Key vulnerabilities", "Overconfidence", "Performance Bias", "Unrobustness", "Spurious correlation", "Stochasticity", "Underconfidence", "Quickstart", "FAQ", "\ud83d\ude80 Execute your test suite in your CI/CD pipeline", "\ud83d\ude80 Execute your test suite in your CI/CD pipeline", "Compare your models using test suite", "Debug", "Provide feedback of your model", "Guides", "\ud83c\udf10 Run the Giskard Server", "Installation in AWS", "Installation in Azure", "Installation in GCP", "\ud83d\udce5 Install the Giskard Python Library", "\ud83d\udd0d Scan your ML model", "\ud83d\udd2a Identify data slices", "\ud83e\uddea Test your ML model", "\ud83d\udd04 Define data transformations", "\u2b06\ufe0f Upload an object to the Giskard server", "\ud83d\udce6 Wrap your dataset", "\ud83c\udf81 Wrap your ML model", "&lt;no title&gt;", "Integrations", "MLflow", "Notebook Example - Text", "Notebook Example - Tabular", "Weights and Biases", "Notebook Example - Tabular", "Dataset", "API reference", "Models", "Base model classes", "Catboost models", "Prediction function", "HuggingFace models", "Langchain models", "Pytorch models", "Sklearn models", "Tensorflow models", "Airline tweets sentiment analysis [HuggingFace]", "Amazon reviews classification [sklearn]", "Connecting Giskard to an AI model hosted by API", "Breast cancer detection [XGBoost]", "Customer churn prediction [LGBM]", "German credit scoring [sklearn]", "Drug classification [sklearn]", "ENRON email classification [sklearn]", "Quickstart", "Fake/real news classification [tensorflow (keras)]", "Regression on the hotel reviews [sklearn]", "IEEE Fraud detection adversarial validation [lightgbm]", "Insurance charges prediction [LightGBM]", "Newspaper comments generation [LangChain, OpenAI]", "M5 Sales prediction [lgbm]", "Medical transcript classification [sklearn]", "Movie Review Sentiment Classification with DISTILL-BERT [sklearn + torch preprocessing]", "Newspaper classification [PyTorch]", "Tripadvisor reviews sentiment classification [HuggingFace]", "Wage classification [sklearn]", "Push feature", "Slicing functions", "Test suite", "Drift tests", "Tests", "Metamorphic tests", "Performance tests", "Statistical tests", "Transformation functions", "By data types", "Tabular", "Text", "Tutorials", "API", "HuggingFace", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AutoModelForSequenceClassification</span></code>", "By ML libraries", "LangChain", "LightGBM", "Newspaper classification with <code class=\"docutils literal notranslate\"><span class=\"pre\">torchtext</span></code>", "PyTorch", "Linear regression with neural networks", "SST-2 Binary text classification with XLM-ROBERTA", "Scikit-learn", "Sentiment analysis model", "Bert model from <code class=\"docutils literal notranslate\"><span class=\"pre\">tensorflow_hub</span></code>", "TensorFlow", "XGBoost", "Classification", "By ML tasks", "Regression", "Text generation"], "terms": {"cd": [0, 28, 34], "giskard": [0, 14, 22, 23, 24, 28, 48, 51, 52, 53, 54, 55, 56, 57, 58, 79, 80, 81, 82, 84, 85, 86, 87, 94, 98, 100, 101, 103, 104], "gradlew": [0, 10], "python": [0, 10, 11, 21, 22, 24, 28, 29, 34, 35, 36, 37, 38, 40, 46, 50, 62, 64, 66, 67, 77, 104], "client": [0, 7, 8, 21, 34, 43, 48, 50, 51, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 87, 104], "sphinx": 0, "autobuild": 0, "test": [1, 11, 12, 14, 28, 29, 31, 32, 35, 37, 38, 39, 40, 41, 43, 46, 48, 49, 50, 54, 72, 80, 87, 94, 98, 100, 101, 103, 104], "slice": [1, 11, 16, 21, 28, 29, 34, 36, 38, 48, 49, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87], "function": [1, 10, 11, 14, 21, 23, 24, 29, 34, 36, 38, 39, 40, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 98, 100, 101], "transform": [1, 11, 12, 21, 28, 29, 34, 35, 36, 38, 46, 48, 49, 54, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 94, 101], "textual": [2, 39], "short_comment_slicing_fn": [2, 80], "keyword_lookup_slicing_fn": [2, 80], "positive_sentiment_analysi": [2, 35, 80], "offensive_sentiment_analysi": [2, 80], "irony_sentiment_analysi": [2, 80], "hate_sentiment_analysi": [2, 80], "emotion_sentiment_analysi": [2, 35, 80], "numer": [2, 35, 36, 37, 39, 40, 48, 50, 62, 63, 64, 65, 71, 79, 82], "outlier_filt": [2, 80], "metamorph": [3, 5, 21, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 83], "test_metamorphic_invari": [3, 5, 36, 83, 84], "test_metamorphic_increas": [3, 5, 83, 84], "test_metamorphic_decreas": [3, 5, 83, 84], "test_metamorphic_invariance_t_test": [3, 83, 84], "test_metamorphic_increasing_t_test": [3, 83, 84], "test_metamorphic_decreasing_t_test": [3, 83, 84], "test_metamorphic_invariance_wilcoxon": [3, 83, 84], "test_metamorphic_increasing_wilcoxon": [3, 83, 84], "test_metamorphic_decreasing_wilcoxon": [3, 83, 84], "statist": [3, 5, 18, 21, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 83, 84], "test_right_label": [3, 36, 62, 66, 67, 77, 83, 86], "test_output_in_rang": [3, 5, 83, 86], "test_disparate_impact": [3, 83, 86], "test_nominal_associ": [3, 83, 86], "test_cramer_v": [3, 83, 86], "test_mutual_inform": [3, 83, 86], "test_theil_u": [3, 83, 86], "perform": [3, 5, 8, 9, 11, 12, 14, 15, 17, 18, 19, 21, 34, 35, 37, 43, 46, 50, 51, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 83, 84], "test_recal": [3, 83, 85], "test_auc": [3, 36, 83, 85], "test_accuraci": [3, 36, 38, 63, 76, 83, 85], "test_precis": [3, 10, 83, 85], "test_f1": [3, 21, 36, 38, 59, 60, 63, 64, 65, 68, 70, 74, 75, 76, 78, 83, 85], "test_diff_recal": [3, 83, 85], "test_diff_accuraci": [3, 83, 85], "test_diff_precis": [3, 83, 85], "test_diff_f1": [3, 83, 85], "test_diff_reference_actual_accuraci": 3, "test_diff_reference_actual_f1": 3, "drift": [3, 5, 21, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 83], "test_drift_psi": [3, 82, 83], "test_drift_chi_squar": [3, 82, 83], "test_drift_k": [3, 82, 83], "test_drift_earth_movers_dist": [3, 82, 83], "test_drift_prediction_psi": [3, 5, 82, 83], "test_drift_prediction_chi_squar": [3, 5, 82, 83], "test_drift_prediction_k": [3, 5, 36, 82, 83], "test_drift_prediction_earth_movers_dist": [3, 5, 82, 83], "classif": [4, 15, 20, 21, 24, 34, 36, 38, 40, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 67, 69, 70, 71, 73, 79, 82, 84, 86, 89, 90, 91, 93, 94, 99, 102, 103, 104, 105, 108], "regress": [4, 18, 21, 34, 38, 40, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 82, 84, 86, 91, 99, 102, 108], "test_ma": [5, 83, 85], "test_rms": [5, 71, 83, 85], "test_diff_rms": [5, 83, 85], "test_diff_reference_actual_rms": 5, "test_r2": [5, 69, 71, 73, 83, 85], "text": [6, 21, 33, 34, 35, 37, 38, 39, 40, 43, 48, 50, 51, 54, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 87, 88, 91, 94, 98, 103, 104, 108], "keyboard_typo_transform": [6, 37, 87], "uppercase_transform": [6, 87], "lowercase_transform": [6, 87], "strip_punctu": [6, 87], "option": [7, 21, 34, 38, 39, 40, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87], "arg": [7, 59], "version": [7, 9, 19, 24, 33, 36, 64, 72, 86, 96, 110], "show": [7, 62, 66, 67, 77, 79, 84], "exit": [7, 23, 24], "ui": [7, 10, 21, 29, 32, 44, 45, 54, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "manag": 7, "delet": [7, 50, 51, 60], "docker": [7, 29, 30, 31, 32, 33, 46], "contain": [7, 12, 13, 15, 16, 20, 21, 24, 29, 31, 34, 36, 38, 39, 40, 48, 50, 51, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86], "possibli": 7, "volum": 7, "associ": [7, 14, 20, 86], "current": [7, 9, 21, 34, 36, 47, 48, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81], "data": [7, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 28, 34, 36, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 67, 79, 80, 81, 85, 86, 87, 91, 98, 100, 103], "user": [7, 22, 24, 30, 31, 41, 47, 64, 84], "home": [7, 31, 60, 65, 68, 69, 70, 71, 73, 74, 75, 77, 78], "v": [7, 70, 86], "verbos": [7, 68, 73, 81], "enabl": [7, 11, 13, 18, 20, 21, 22, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 48, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79], "save": [7, 21, 29, 30, 31, 32, 34, 35, 38, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81], "local": [7, 21, 29, 34, 37, 38, 48, 50, 51, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 87], "archiv": 7, "us": [7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 21, 23, 24, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 101], "support": [7, 34, 50, 51, 54, 64, 65, 72, 79, 81, 96, 110], "o": [7, 29, 30, 31, 32, 37, 60, 65, 68, 69, 70, 71, 73, 74, 75, 77, 78], "out_path": 7, "local_dir": [7, 50, 51, 52, 55, 56, 57], "destin": [7, 73], "directori": [7, 10, 44, 45, 50, 51], "your": [7, 8, 11, 14, 28, 29, 33, 44, 46, 48, 50, 54, 56, 61, 96, 110], "outsid": [7, 12, 80], "world": [7, 12, 13, 15, 16, 17, 18, 76, 98], "ngrok": [7, 29], "notebook": [7, 21, 29, 32, 34, 36, 40, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "like": [7, 20, 34, 54, 86], "googl": [7, 8, 21, 29, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78], "colab": [7, 8, 21, 29, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78], "token": [7, 8, 21, 29, 34, 38, 44, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 98, 101], "requir": [7, 15, 21, 24, 29, 30, 31, 32, 40, 43, 50, 51, 62, 66, 67, 77, 79], "In": [7, 8, 10, 15, 18, 20, 24, 30, 31, 32, 34, 36, 40, 46, 50, 51, 54, 84], "case": [7, 11, 15, 17, 18, 24, 34, 36, 37, 38, 40, 46, 50, 51, 72, 79, 81, 86, 103], "you": [7, 8, 9, 10, 11, 14, 16, 18, 21, 22, 23, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 86], "have": [7, 8, 12, 14, 15, 19, 20, 21, 29, 30, 32, 34, 35, 36, 37, 40, 48, 50, 51, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 86], "an": [7, 10, 11, 14, 18, 21, 23, 28, 29, 31, 32, 34, 35, 36, 37, 39, 40, 43, 46, 48, 50, 51, 53, 54, 55, 56, 57, 58, 62, 63, 66, 67, 68, 70, 77, 80, 81, 84, 86], "account": [7, 17, 18, 46, 48, 60, 86], "can": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 51, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 86, 87], "gener": [7, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 33, 36, 38, 40, 44, 45, 46, 50, 51, 54, 64, 79, 81, 86, 87, 90, 91, 96, 108], "from": [7, 10, 11, 12, 13, 16, 18, 19, 20, 24, 29, 31, 33, 34, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 79, 80, 81, 82, 84, 85, 86, 87, 94, 98, 100, 101, 103, 105], "http": [7, 9, 10, 21, 29, 30, 31, 32, 34, 38, 44, 45, 47, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 94, 101, 103, 104], "dashboard": [7, 34], "com": [7, 9, 10, 29, 30, 31, 32, 44, 59, 61, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 78, 104], "get": [7, 21, 29, 30, 31, 32, 41, 46, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81], "authtoken": 7, "print": [7, 23, 24, 36, 54, 59, 60, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 100], "servic": [7, 30], "backend": [7, 81], "frontend": [7, 10, 30], "db": 7, "l": 7, "nb_line": 7, "number": [7, 17, 18, 19, 24, 48, 60, 66, 74, 79, 86], "f": [7, 36, 54, 59, 60, 63, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 100, 101], "follow": [7, 8, 10, 23, 24, 29, 30, 31, 34, 35, 36, 37, 38, 43, 44, 46, 47, 50, 51, 84], "stream": 7, "argument": [7, 35, 36, 37, 40, 43, 46, 48, 50, 51, 54, 72, 80, 81, 87], "ani": [7, 11, 12, 13, 21, 24, 33, 34, 36, 38, 40, 44, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 67, 70, 71, 72, 79, 81, 86], "run": [7, 8, 10, 19, 21, 23, 24, 28, 34, 35, 36, 37, 43, 44, 45, 46, 47, 48, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81], "again": [7, 30, 31, 32], "hard": 7, "whole": [7, 21, 48, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80], "By": [7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 35, 40, 44, 45, 50, 51, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79], "default": [7, 21, 30, 31, 34, 35, 36, 37, 38, 40, 43, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 86, 87], "detach": [7, 59, 76, 77], "background": [7, 29], "attach": 7, "displai": [7, 21, 34, 36, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81], "consol": [7, 30], "check": [7, 9, 10, 21, 34, 36, 38, 40, 48, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 84, 94], "i": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 96, 101, 103, 110], "each": [7, 18, 19, 40, 44, 45, 48, 50, 51, 54, 68, 73, 79, 81, 86], "intern": [7, 29, 34, 48, 66, 104], "doe": [7, 10, 15, 17, 40, 48, 50, 51], "noth": 7, "updat": [7, 10, 19, 70, 72], "latest": [7, 21, 24, 34, 38, 70, 71], "avail": [7, 12, 18, 21, 29, 34, 38, 39, 43, 63, 64, 65, 70, 71, 73, 78, 80, 87], "specifi": [7, 32, 35, 36, 37, 48, 50, 51, 53, 54, 55, 56, 57, 58, 62, 66, 67, 77, 79, 80], "ml": [7, 10, 11, 14, 21, 23, 24, 28, 35, 37, 41, 43, 46, 50, 51, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 91], "n": [7, 30, 40, 50, 51, 65, 66, 69, 72, 74, 86], "output": [7, 19, 20, 21, 34, 36, 38, 40, 50, 51, 59, 60, 62, 63, 64, 65, 66, 68, 70, 74, 75, 76, 77, 78, 84, 86, 98, 104], "last": 7, "file": [7, 10, 24, 31, 34, 44, 45, 60, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78], "10": [7, 33, 36, 48, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 79, 82, 84, 85, 100], "ar": [7, 9, 10, 11, 12, 13, 15, 16, 18, 21, 23, 24, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 51, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 86, 87, 96, 110], "append": [7, 66, 76, 77, 100, 101, 103], "new": [7, 10, 12, 18, 23, 24, 31, 32, 35, 36, 40, 47, 48, 50, 51, 70, 72, 76, 80, 81, 87, 90, 105, 107], "being": [7, 18, 68, 86], "u": [7, 8, 10, 21, 29, 30, 33, 40, 50, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 86], "url": [7, 21, 34, 38, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "remot": 7, "": [7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 31, 32, 34, 35, 36, 37, 38, 40, 43, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 70, 74, 75, 76, 77, 78, 79, 82, 86], "mode": [7, 29, 60], "embed": [7, 75, 76, 98, 103], "k": [7, 29, 82, 86], "api": [7, 29, 32, 38, 39, 40, 41, 44, 46, 48, 70, 91, 95, 101], "kei": [7, 30, 31, 34, 35, 36, 43, 44, 46, 48, 50, 51, 59, 63, 64, 66, 80, 81, 87, 94, 98], "api_kei": [7, 44], "t": [7, 10, 24, 29, 30, 33, 36, 60, 70, 84, 100, 101], "hf": 7, "hf_token": 7, "access": [7, 12, 29, 30, 32, 43, 44, 45], "host": [7, 8, 92], "privat": [7, 31], "hug": [7, 11], "face": [7, 11, 17], "space": 7, "2": [7, 21, 33, 48, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 82, 84, 85, 86, 94, 98, 99, 100, 103, 104], "ship": 7, "act": 7, "connect": [7, 18, 21, 48, 50, 51, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 81, 92], "should": [7, 8, 10, 12, 13, 16, 23, 36, 37, 39, 40, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 79, 80], "instanc": [7, 12, 15, 16, 20, 21, 24, 29, 33, 34, 35, 36, 48, 50, 51, 54, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 87], "thi": [7, 9, 10, 12, 15, 16, 18, 20, 21, 24, 29, 30, 34, 35, 36, 37, 39, 40, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 94], "port": [7, 8, 29, 30, 31, 32], "d": [7, 8, 29, 70, 73], "daemon": [7, 33], "environ": [7, 22, 29, 31, 32, 37, 68, 70, 71], "variabl": [7, 12, 18, 19, 21, 22, 34, 38, 39, 40, 48, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 86], "gsk_api_kei": [7, 8, 29], "provid": [7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 29, 34, 35, 36, 37, 39, 40, 48, 50, 51, 54, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87], "gsk_hf_token": 7, "all": [7, 16, 21, 29, 32, 34, 36, 38, 39, 40, 46, 48, 50, 51, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 85, 87], "order": [8, 17, 21, 29, 34, 36, 38, 40, 46, 48, 50, 51, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78], "internet": 8, "would": [8, 12, 46, 86], "need": [8, 10, 11, 22, 23, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 46, 48, 50, 60, 62, 66, 67, 69, 74, 77, 79, 80, 87], "step": [8, 10, 12, 18, 21, 24, 29, 31, 32, 34, 38, 39, 40, 44, 45, 46, 48, 50, 59, 60, 62, 65, 66, 70, 71, 73, 76, 77, 78, 100], "prompt": [8, 37, 40, 44], "either": [8, 12, 21, 29, 34, 36, 38, 40, 51, 54, 56, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 87], "authent": 8, "1password": 8, "phone": 8, "code": [8, 9, 10, 21, 23, 29, 35, 36, 37, 38, 44, 45, 47, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "copi": [8, 21, 30, 31, 32, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78], "now": [8, 30, 31, 32, 34, 36, 54, 72], "ngrok_api_kei": 8, "which": [8, 9, 10, 11, 16, 17, 19, 21, 29, 34, 36, 38, 40, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 84, 86], "instruct": [8, 21, 29, 34, 43, 46, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78], "upload": [8, 28, 29, 37, 48, 50, 51, 78, 80, 81, 82, 87], "object": [8, 28, 29, 34, 35, 36, 37, 39, 40, 48, 50, 51, 52, 54, 55, 56, 57, 58, 81], "giskardcli": [8, 21, 34, 38, 48, 50, 51, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 87], "ngrok_external_server_link": 8, "To": [8, 9, 10, 12, 13, 15, 16, 17, 20, 21, 24, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 46, 48, 50, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "model": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 28, 29, 35, 37, 38, 39, 41, 43, 44, 46, 48, 49, 53, 79, 80, 81, 82, 84, 85, 86, 92, 93, 105], "execut": [8, 10, 19, 21, 28, 29, 31, 32, 34, 38, 39, 48, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 87], "three": [8, 46, 86, 94], "line": [8, 21, 29, 31, 32, 44, 45, 47, 49, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 101], "env": [8, 29], "gsk_external_ml_worker_host": [8, 29], "gsk_external_ml_worker_port": [8, 29], "worker": [8, 10, 32, 48], "start": [8, 10, 11, 21, 36, 41, 46, 47, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78], "after": [9, 10, 12, 29, 34, 36, 43, 44, 45, 47, 48, 50, 51, 59, 60, 63, 64, 65, 68, 69, 70, 71, 73, 74, 75, 76, 78, 84], "clone": [9, 10], "repositori": [9, 10, 23, 24], "here": [9, 10, 14, 15, 18, 21, 29, 31, 32, 34, 37, 43, 46, 48, 54, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81], "command": [9, 29, 31, 32, 49], "set": [9, 12, 19, 21, 22, 29, 30, 31, 34, 36, 38, 44, 48, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 86], "up": [9, 10, 44, 46, 54, 61, 86], "ensur": [9, 12, 13, 14, 15, 16, 18, 19, 23, 24, 34, 37, 51, 56], "basic": [9, 24], "qualiti": [9, 11, 29, 34, 35, 36, 44, 60], "befor": [9, 14, 21, 29, 34, 38, 39, 48, 50, 51, 56, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "The": [9, 11, 12, 15, 16, 17, 19, 20, 21, 22, 24, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87], "hool": 9, "defin": [9, 11, 22, 28, 35, 36, 40, 46, 48, 50, 51, 62, 77, 79, 80, 81, 85, 86], "config": [9, 77], "yaml": 9, "brew": 9, "probabl": [9, 15, 20, 36, 40, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 79, 82, 84, 86], "caus": [9, 84], "known": [9, 36, 86], "issu": [9, 11, 18, 21, 29, 34, 35, 36, 38, 46, 48, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "libomp": 9, "12": [9, 33, 66, 70, 76, 77], "lightgbm": [9, 40, 63, 73, 91, 95], "avoid": [9, 12, 18, 19, 20], "problem": [9, 15, 17, 18, 20, 40, 69, 74, 86], "downgrad": 9, "11": [9, 33, 44, 66, 72, 77, 78], "1": [9, 10, 23, 24, 33, 35, 36, 37, 40, 44, 45, 54, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 94, 98, 100, 101, 103, 104], "0": [9, 21, 23, 24, 32, 33, 34, 35, 36, 38, 40, 43, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 94, 98, 100, 101, 103, 104], "compat": [9, 36], "wget": [9, 66], "raw": [9, 21, 22, 34, 38, 39, 40, 44, 48, 50, 51, 54, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 101, 104], "githubusercont": [9, 44, 59, 63, 64, 72, 104], "homebrew": 9, "core": [9, 72, 81], "fb8323f2b170bd4ae97e1bac9bf3e2983af3fdb0": 9, "formula": [9, 48, 86], "rb": 9, "page": [10, 21, 29, 31, 34, 36, 38, 39, 43, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "isn": 10, "date": [10, 66, 68, 73], "shortli": 10, "how": [10, 11, 18, 21, 23, 24, 35, 37, 43, 44, 45, 47, 54, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 86], "add": [10, 30, 31, 36, 48, 68, 70, 72, 73, 79, 81], "custom": [10, 11, 24, 29, 35, 36, 37, 46, 54, 89, 97, 107], "open": [10, 11, 21, 29, 30, 32, 36, 46, 48, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "sourc": [10, 11, 21, 32, 36, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86], "project": [10, 21, 34, 48, 50, 51, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 87], "creat": [10, 11, 12, 18, 21, 29, 30, 34, 44, 45, 50, 54, 59, 60, 63, 64, 65, 67, 69, 70, 71, 73, 74, 75, 76, 78, 79, 81], "github": [10, 24, 60], "branch": [10, 24], "base": [10, 11, 12, 13, 18, 20, 24, 29, 38, 40, 44, 46, 48, 50, 54, 68, 69, 71, 75, 76, 77, 79, 81, 86, 87], "main": [10, 24, 32, 59, 63, 64, 75, 79], "name": [10, 21, 24, 33, 34, 35, 36, 37, 38, 39, 40, 43, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 94, 98, 100, 101, 103, 104], "root": 10, "generateproto": 10, "modul": [10, 33, 54, 59, 76, 77, 79, 81, 98, 100], "write": [10, 36, 37], "insid": [10, 12, 21, 34, 35, 36, 37, 38, 50, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 86], "one": [10, 15, 21, 29, 30, 34, 36, 38, 39, 40, 48, 50, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 86], "class": [10, 15, 16, 20, 40, 48, 52, 53, 54, 55, 56, 57, 58, 59, 76, 77, 79, 80, 81, 87, 98, 100], "metamorphictest": 10, "heuristictest": 10, "performancetest": 10, "drifttest": 10, "ai": [10, 11, 20, 21, 32, 34, 36, 38, 59, 60, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 103, 104], "tree": [10, 18], "ml_worker": [10, 35, 37, 80, 81, 87], "If": [10, 12, 13, 15, 16, 17, 18, 20, 21, 22, 29, 30, 32, 33, 34, 36, 38, 39, 40, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87], "fit": [10, 12, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 78], "also": [10, 12, 16, 18, 19, 24, 32, 35, 36, 40, 48, 50, 51, 54, 75, 103], "we": [10, 11, 21, 24, 30, 31, 32, 35, 36, 37, 40, 44, 47, 48, 50, 54, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 84, 96, 110], "recommend": [10, 30, 31, 32, 54, 79], "unit": [10, 19, 38, 39, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "wai": [10, 40, 50, 54, 80, 86, 87], "debug": [10, 21, 29, 34, 35, 36, 37, 38, 39, 40, 48, 50, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86], "place": [10, 29, 44], "fixtur": [10, 11, 21, 35, 36, 37, 38, 46, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "A": [10, 21, 29, 34, 38, 39, 40, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 84, 86], "For": [10, 12, 13, 17, 19, 21, 24, 29, 31, 33, 34, 35, 36, 37, 39, 44, 48, 50, 51, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 94], "exampl": [10, 12, 13, 15, 17, 18, 19, 20, 21, 24, 30, 31, 32, 34, 35, 36, 37, 38, 40, 50, 51, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86], "german_credit_data": 10, "german_credit_model": 10, "necessari": [10, 15, 20, 36, 43, 68, 73], "own": [10, 11, 21, 24, 34, 40, 50, 51, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78], "know": [10, 21, 23, 24, 36, 46, 62, 66, 67, 77, 86], "same": [10, 12, 19, 21, 29, 30, 31, 32, 36, 40, 50, 51, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 84], "our": [10, 21, 34, 35, 36, 37, 40, 50, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 76, 77, 78], "doc": [10, 21, 34, 38, 70, 71, 77, 94], "guid": [10, 21, 23, 24, 34, 38, 41, 46], "review": [10, 90, 93, 102, 103, 107, 109], "even": [10, 13, 15, 17, 18, 19, 20, 43], "work": [10, 18, 29, 33, 34, 40, 64, 86, 103], "won": 10, "appear": [10, 18, 38], "unless": [10, 64], "re": [10, 29, 31, 36, 46, 72, 77, 96, 110], "pull": [10, 24], "request": [10, 24, 33, 60, 61, 65, 68, 69, 70, 71, 73, 74, 75, 77, 78], "let": [10, 36, 54], "where": [10, 11, 15, 16, 17, 18, 19, 20, 29, 35, 37, 40, 44, 45, 50, 51, 60, 68, 73, 75, 80, 86, 87], "want": [10, 21, 22, 24, 29, 33, 34, 35, 36, 37, 38, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 86], "heurist": [10, 36, 48], "sinc": [10, 11, 29], "select": [10, 12, 16, 19, 20, 30, 31, 32, 60, 66, 72], "heuristic_test": 10, "py": [10, 24, 64, 72], "list": [10, 21, 33, 34, 35, 38, 39, 40, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 87, 94, 98, 103, 104], "under": [10, 17, 36], "abstracttestcollect": 10, "exist": [10, 35, 37, 48, 50, 51, 60, 65, 66, 68, 69, 70, 71, 73, 74, 75, 77, 78, 81, 86], "test_heurist": 10, "pattern": [10, 12, 15, 17, 18, 20, 79, 86], "parameter": 10, "input": [10, 13, 17, 19, 20, 35, 36, 37, 38, 39, 40, 46, 48, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 68, 69, 70, 73, 74, 77, 80, 81, 87, 104], "help": [10, 12, 13, 15, 16, 17, 18, 19, 20, 29, 34, 37, 38, 48, 60], "differ": [10, 13, 14, 16, 17, 19, 20, 31, 34, 35, 36, 37, 38, 40, 50, 79, 84, 85, 86], "read": [10, 21, 29, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78], "more": [10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 24, 29, 34, 36, 37, 38, 39, 48, 54, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 82, 84, 86], "about": [10, 12, 14, 21, 36, 39, 51, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 76, 77, 78, 79, 81, 86], "pytest": [10, 104], "org": [10, 101], "en": [10, 21, 34, 38, 70, 71], "7": [10, 21, 33, 36, 59, 60, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 78, 85, 86], "x": [10, 35, 37, 40, 60, 66, 69, 73, 74, 75, 77, 86, 98, 100, 101, 103, 104], "parametr": 10, "html": [10, 21, 34, 38, 46, 70, 71], "dataset": [10, 12, 15, 16, 18, 21, 23, 24, 28, 29, 30, 34, 35, 36, 37, 38, 40, 43, 44, 45, 46, 49, 50, 51, 54, 56, 61, 62, 67, 79, 80, 81, 82, 84, 85, 86, 87], "blob": [10, 75], "german_credit_scor": 10, "refer": [10, 12, 15, 16, 17, 18, 19, 20, 21, 23, 24, 36, 39, 41, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 82, 85], "make": [10, 13, 16, 17, 20, 24, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 44, 50, 51, 53, 54, 55, 56, 57, 58, 59, 62, 66, 67, 77, 78, 79, 103], "sure": [10, 29, 30, 31, 32, 35, 36, 37, 40, 44, 50, 51, 56], "return": [10, 21, 34, 35, 36, 37, 38, 40, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 94, 98, 100, 101, 103, 104], "target": [10, 12, 16, 20, 21, 24, 32, 34, 35, 36, 37, 38, 39, 40, 45, 47, 48, 50, 51, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 86, 94, 98, 100, 101, 103, 104], "test_data": [10, 76], "without": [10, 12, 17, 36, 103], "expect": [10, 48, 86], "format": [10, 37, 68, 70, 71, 73, 76, 77, 79], "asid": 10, "framework": [11, 21, 35, 37, 41, 47, 62, 66, 67, 77], "dedic": [11, 21, 34, 38, 41, 62, 66, 67, 77], "cover": [11, 40, 50], "tabular": [11, 21, 34, 38, 40, 41, 43, 46, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 88, 91], "llm": [11, 21, 34, 37, 38, 40, 41, 45, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 96, 110], "machin": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 29, 31, 34, 37, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78], "learn": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 33, 34, 36, 37, 40, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 91, 95], "applic": [11, 15, 30, 38, 86], "tediou": 11, "depend": [11, 24, 29, 30, 35, 36, 37, 46, 50, 51, 54, 63, 79, 86], "scenario": [11, 12, 15, 20, 36], "domain": [11, 13, 18, 21, 29, 34, 35, 36, 38, 40, 46, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "specif": [11, 12, 13, 16, 17, 18, 19, 21, 29, 34, 35, 36, 38, 46, 51, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 86, 87], "often": [11, 19, 35, 36, 44], "infinit": [11, 36], "implement": [11, 12, 15, 20, 36, 51], "what": [11, 21, 40, 62, 66, 67, 77, 86], "At": 11, "believ": [11, 72], "its": [11, 12, 15, 16, 17, 20, 29, 30, 37, 48, 64, 68, 76, 79, 80, 81, 87], "engin": [11, 12, 16, 32], "scan": [11, 14, 28, 33, 36, 38, 39, 40, 43, 44, 45, 46, 48, 50, 61], "find": [11, 18, 20, 34, 36, 44, 45, 46, 59, 63, 68, 75, 76, 79], "dozen": [11, 46], "hidden": [11, 44, 45, 46, 47], "vulner": [11, 23, 24, 36, 43, 46, 59, 63, 68, 75, 76], "automat": [11, 14, 21, 36, 38, 39, 40, 46, 48, 50, 52, 54, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 87], "detect": [11, 12, 14, 15, 16, 21, 22, 35, 36, 37, 40, 46, 50, 54, 59, 60, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 89, 96, 97, 106, 107, 110], "bia": [11, 13, 14, 15, 18, 34, 43, 46, 76, 86, 98], "leakag": [11, 14, 21, 34, 46, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 76, 77, 78], "unrobust": [11, 14, 21, 34, 46, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 76, 77, 78], "spuriou": [11, 14, 17, 34, 35, 36, 46, 62, 66, 67, 77, 79], "correl": [11, 12, 13, 14, 17, 34, 46, 62, 66, 67, 77, 79, 86], "overconfid": [11, 14, 34, 35, 46, 62, 66, 67, 77, 79], "underconfid": [11, 14, 21, 34, 35, 46, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 76, 77, 78, 79], "uneth": [11, 14, 46], "etc": [11, 20, 21, 29, 31, 32, 34, 35, 38, 39, 40, 46, 48, 50, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "instantan": [11, 46], "relev": [11, 12, 16, 18, 20, 34, 35, 46], "easili": [11, 17, 35, 36, 37, 38, 39, 46], "slicer": [11, 46], "suit": [11, 28, 29, 35, 37, 38, 40, 43, 46, 49, 79], "leverag": [11, 20], "assur": [11, 29], "best": [11, 36], "practic": 11, "commun": [11, 34, 38, 80, 87], "catalog": [11, 41], "contribut": [11, 12, 13, 15, 16, 17, 18, 19, 20, 41, 66, 70, 71, 79, 82], "load": [11, 44, 50, 51, 52, 54, 55, 56, 57, 58, 104], "detector": [11, 21, 35, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "toxic": [11, 21, 35, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "hate": [11, 21, 35, 54, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80], "typo": [11, 17, 21, 37, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87], "paraphras": [11, 21, 37, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "evalu": [11, 12, 13, 16, 17, 18, 37, 43, 44, 45, 63, 68], "inspir": 11, "philosophi": 11, "aim": [11, 13, 15, 16, 86], "becom": [11, 15, 17, 36], "hub": [11, 101, 104], "situat": [12, 16, 18, 19], "when": [12, 13, 15, 16, 17, 18, 19, 20, 30, 31, 32, 35, 36, 37, 79, 80, 82, 84, 85, 86, 87], "inform": [12, 16, 20, 21, 34, 36, 39, 54, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 76, 77, 78, 81, 86], "train": [12, 13, 15, 16, 17, 18, 19, 20, 35, 36, 37, 39, 40, 44, 45, 47, 48, 50, 51, 79, 80, 86, 98, 100, 103], "unintention": 12, "lead": [12, 13, 15, 16, 17, 18, 19, 20], "inflat": 12, "metric": [12, 15, 16, 17, 35, 36, 43, 44, 45, 59, 60, 63, 64, 65, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 81, 82, 84, 85, 86, 103], "inaccur": 12, "sever": [12, 13, 15, 16, 17, 18, 19, 20], "factor": [12, 13, 15, 16, 17, 18, 19, 20, 35], "occurr": [12, 15, 16, 17, 18, 19, 20, 86], "improp": 12, "preprocess": [12, 18, 50, 51, 54, 77, 104], "happen": [12, 18], "scale": [12, 39, 40, 48, 50], "miss": [12, 20, 36, 48, 64, 81], "valu": [12, 19, 35, 36, 37, 39, 48, 50, 51, 52, 53, 55, 57, 58, 59, 64, 68, 73, 75, 76, 77, 79, 80, 82, 84, 85, 86, 98], "imput": [12, 21, 34, 38, 40, 64], "outlier": [12, 79], "handl": [12, 54], "predict": [12, 13, 16, 17, 18, 19, 21, 34, 36, 38, 39, 40, 48, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 89, 97, 107, 109], "pipelin": [12, 21, 28, 34, 35, 38, 40, 54, 63, 64, 65, 66, 69, 74], "entir": [12, 43, 80, 87], "includ": [12, 16, 17, 18, 21, 24, 50, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 76, 77, 78], "valid": [12, 18, 24, 36, 48, 50, 51, 59, 60, 63, 64, 65, 69, 71, 73, 74, 75, 76, 78, 86, 100], "gain": [12, 18, 78, 86], "real": [12, 13, 15, 16, 17, 18, 90, 105, 107], "incorrect": [12, 15, 79], "split": [12, 62, 66, 76, 98, 101], "correctli": [12, 79], "occur": [12, 15, 16, 18, 61, 86], "done": [12, 32, 43, 46, 50, 51, 52, 53, 55, 57, 58], "featur": [12, 13, 16, 17, 18, 20, 21, 29, 35, 36, 37, 39, 40, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 76, 77, 78, 82, 84], "inadvert": [12, 13], "dure": [12, 13, 16, 17, 19, 36, 70, 71, 80, 87], "result": [12, 15, 16, 17, 18, 19, 20, 21, 23, 29, 35, 36, 37, 38, 43, 44, 45, 46, 50, 51, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84], "inclus": 12, "futur": 12, "incorpor": [12, 13, 16, 17, 18, 19, 38, 40], "deploy": [12, 13], "collect": [12, 16, 18, 21, 29, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81], "determin": [12, 24, 35, 48, 79, 80, 84, 86], "genuin": [12, 18], "reli": [12, 13, 17, 19, 79], "directli": [12, 29, 30, 34, 40, 43, 48, 50], "indirectli": 12, "introduc": [12, 15, 18, 19, 23, 24, 51], "deriv": 12, "highli": [12, 17, 20], "exploit": [12, 18], "measur": [12, 16, 18, 36, 54, 86], "taken": 12, "proper": [12, 17, 32], "onli": [12, 22, 45, 47, 48, 66, 72, 79, 86, 103], "appli": [12, 15, 16, 17, 20, 21, 35, 38, 40, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 67, 68, 69, 74, 75, 77, 79, 80, 81, 82, 84, 85, 86, 87, 98, 101], "prevent": [12, 15, 16, 17, 19, 20], "maintain": 12, "integr": [12, 21, 24, 34, 35, 36, 38, 41, 43, 46, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "process": [12, 13, 16, 19, 21, 34, 36, 38, 39, 40, 43, 48, 50, 59, 60, 62, 63, 64, 65, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "carefulli": [12, 16, 18], "leak": [12, 79], "chosen": 12, "signific": [12, 13, 15, 16, 17, 19, 20, 79, 84, 86], "knowledg": [12, 18, 35, 36, 38, 40, 86], "separ": [12, 44, 45], "consist": [12, 19, 44], "strict": 12, "procedur": [12, 86], "rigor": 12, "identifi": [12, 13, 14, 15, 16, 18, 28, 34, 48, 81], "mitig": [12, 13, 15, 16, 17, 18, 19, 20], "cross": [12, 36], "time": [12, 18, 36, 40, 44, 54, 72, 76], "seri": [12, 18, 35, 36, 37, 38, 44, 48, 66, 69, 74, 75, 80, 87, 98], "techniqu": [12, 13, 15, 16, 17, 19, 20], "assess": [12, 16, 17, 18, 20, 36, 86], "abil": [12, 20], "continu": [12, 15, 16, 68], "monitor": [12, 15, 16, 35, 36], "sign": [12, 46, 84], "regularli": [12, 15, 16], "behavior": [12, 13, 17, 19, 36, 54], "unseen": [12, 15, 18, 37], "appropri": [12, 15, 16, 17, 20, 54], "safeguard": 12, "against": 12, "unintent": 12, "accur": [12, 13, 15, 16, 20], "reliabl": [12, 14, 15, 16, 17, 19, 20, 34], "aris": [13, 16, 18, 19], "exhibit": [13, 15, 16, 17], "sensit": [13, 17, 19, 79], "gender": [13, 63, 72, 78, 82, 84, 86], "ethnic": [13, 86], "religion": [13, 72], "These": [13, 16, 17, 18, 20, 39], "involv": [13, 17, 18, 44, 86], "switch": [13, 37, 72, 79, 84], "certain": [13, 15, 16, 19, 35, 86], "word": [13, 17, 18, 37, 66, 68, 69, 74, 77, 84, 87], "femal": [13, 36, 38, 82, 84, 85, 86], "male": [13, 36, 84, 85, 86], "countri": [13, 72, 78], "nation": 13, "small": [13, 17, 19, 38, 54], "bias": [13, 15, 16, 18, 21, 35, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 76, 77, 78, 86], "reflect": [13, 16, 36, 86], "societ": [13, 16], "prejudic": [13, 16], "mai": [13, 15, 16, 17, 18, 19, 20, 24, 36, 54, 56, 62, 66, 67, 72, 77, 79, 96, 110], "reinforc": [13, 16], "those": [13, 16, 18, 86], "dispar": [13, 16, 35, 86], "perpetu": 13, "implicit": 13, "heavili": [13, 17, 79], "attribut": [13, 33, 51, 79], "assign": [13, 15, 17, 60, 79], "import": [13, 16, 17, 18, 19, 21, 23, 24, 29, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 54, 61, 67, 105], "minor": [13, 15, 16, 17, 20, 86], "relat": [13, 16, 18, 36, 68, 79, 84], "lack": [13, 15, 16, 17, 20], "consider": [13, 15, 16], "design": [13, 14, 34], "insuffici": [13, 15, 16, 17, 20, 79], "implic": [13, 15], "develop": [13, 15, 36, 38, 40], "fair": [13, 14, 16, 34], "divers": [13, 15, 16, 17, 20, 37], "explicitli": [13, 20, 54], "unfair": 13, "outcom": [13, 19, 86], "limit": [13, 15, 35, 72, 96, 110], "represent": [13, 15, 16, 66, 73], "underrepresent": 13, "demograph": [13, 16, 78], "group": [13, 16, 30, 35, 81, 86], "ha": [13, 18, 20, 23, 24, 33, 35, 36, 61, 62, 66, 67, 72, 73, 75, 77, 79, 80, 81, 85], "exposur": [13, 17, 20], "struggl": [13, 16, 20], "approach": [13, 15, 16, 17, 18, 19], "adopt": [13, 16], "repres": [13, 16, 20, 39, 48, 50, 51, 75, 81, 86], "crucial": [13, 14, 16, 18], "popul": [13, 16, 44], "robust": [13, 14, 17, 19, 34, 36, 37, 43], "less": [13, 17, 48, 79], "emploi": [13, 15, 16, 17, 19, 20], "debias": 13, "algorithm": [13, 16, 19, 20], "adversari": [13, 17], "present": [13, 18, 19, 40, 44, 45, 48, 51], "reduc": [13, 15, 16, 17, 19, 20], "resili": [13, 17, 37], "guidelin": 13, "standard": [13, 32, 50, 51, 54, 103], "establish": [13, 21, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78], "clear": 13, "essenti": [13, 16], "transpar": [13, 18], "stage": [13, 68], "minim": [13, 16, 19], "interdisciplinari": 13, "collabor": [13, 18, 29, 34], "between": [13, 18, 36, 79, 82, 84, 85, 86], "practition": [13, 19], "ethicist": 13, "expert": [13, 18], "engag": [13, 18], "discuss": [13, 18], "valuabl": 13, "insight": [13, 18, 38, 86], "perspect": [13, 20], "methodologi": 13, "explan": [13, 35, 38], "enhanc": [13, 15, 20, 24, 37], "interpret": [13, 18, 44, 45, 47, 86], "stakehold": [13, 18], "understand": [13, 14, 15, 18, 19, 46, 86], "decis": [13, 15, 16, 17, 18, 20, 24], "potenti": [13, 15, 17, 18, 20, 34], "concern": 13, "comprehens": [14, 17, 43], "critic": [14, 24, 84], "impact": [14, 16, 18, 19, 86], "varieti": [14, 20], "risk": 14, "behaviour": [14, 19, 35, 37], "stochast": [14, 21, 34, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 76, 77, 78], "conduct": 14, "proactiv": [14, 34], "address": [14, 30, 31, 32, 34], "phenomenon": [15, 17, 20], "produc": [15, 20, 21, 34, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "high": [15, 16, 72, 79, 86], "confid": [15, 20, 79], "score": [15, 21, 35, 59, 60, 63, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 82, 84, 85, 86, 89, 102, 107], "mean": [15, 36, 37, 48, 50, 51, 52, 53, 55, 57, 58, 62, 66, 67, 68, 77, 79, 82, 84, 85, 86, 100], "overli": [15, 17, 20], "Such": 15, "harm": 15, "consequ": 15, "inher": [15, 16, 19, 20], "expos": [15, 17, 20, 21, 29, 36, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78], "wide": 15, "rang": [15, 17, 20, 21, 32, 36, 44, 62, 66, 67, 70, 76, 77, 80, 86, 100, 103], "thei": [15, 18, 35, 37, 40, 46, 81], "overfit": [15, 16, 17, 18, 19, 20], "too": [15, 20], "complex": [15, 16, 17, 20, 35, 37], "adapt": [15, 69, 74, 103], "close": [15, 20, 36], "As": [15, 16, 18, 19, 36, 37, 43, 62, 66, 67, 72, 77], "well": [15, 17, 18, 36, 54, 86], "though": [15, 18], "imbalanc": [15, 16, 20, 60], "task": [15, 20, 37, 40, 44, 50, 51, 69, 70, 77, 91, 94], "distribut": [15, 16, 20, 36, 84, 86], "significantli": [15, 54, 79], "preval": 15, "than": [15, 18, 36, 39, 48, 79, 82, 84, 85, 86], "other": [15, 16, 18, 19, 35, 36, 38, 40, 44, 51, 84, 86], "major": [15, 16], "amount": 15, "enough": [15, 20, 35], "underli": [15, 18, 20, 51], "resort": 15, "overgener": 15, "care": [15, 19], "variou": [15, 16, 17, 35, 37, 43, 62, 65, 66, 67, 77, 79], "some": [15, 18, 19, 36, 40, 62, 66, 67, 77, 86], "calibr": 15, "align": [15, 18], "true": [15, 18, 20, 22, 35, 36, 37, 48, 50, 51, 54, 56, 59, 60, 62, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 98, 101, 103, 104], "event": [15, 79], "regular": [15, 16, 17, 19, 20], "l1": 15, "l2": 15, "penalti": 15, "encourag": [15, 17, 20], "better": [15, 19, 36, 79], "discourag": 15, "boundari": [15, 17], "augment": [15, 16, 17, 20, 37, 38], "balanc": [15, 16, 20, 60], "increas": [15, 18, 19, 20, 36, 38, 54, 79, 84], "addition": [15, 29], "resampl": [15, 65], "oversampl": [15, 16, 20], "undersampl": [15, 16, 20], "toward": [15, 86], "track": [15, 81], "accuraci": [15, 16, 17, 20, 36, 60, 63, 64, 65, 68, 75, 76, 78, 85, 103], "adjust": [15, 20, 48, 86], "made": [15, 79], "improv": [15, 16, 17, 19, 20, 36, 37, 54, 72, 96, 110], "conclus": [15, 20], "pose": 15, "challeng": [15, 18, 20], "ensembl": [15, 19, 20, 69, 74, 78], "method": [15, 16, 17, 19, 20, 39, 40, 48, 50, 51, 79, 81, 86], "possibl": [15, 19, 35, 36, 37, 43, 72, 80, 86], "overal": [15, 16], "trustworthi": [15, 20], "low": [16, 20, 35, 72, 79], "subset": [16, 20, 35, 79, 80, 103], "despit": 16, "satisfactori": 16, "manifest": 16, "discrep": 16, "precis": [16, 17, 64, 85], "recal": [16, 17, 64, 85], "across": [16, 19], "segment": [16, 70, 71], "imbal": [16, 20], "unequ": 16, "priorit": [16, 48], "domin": 16, "underrepres": 16, "lower": [16, 17, 66, 68, 74, 77, 79, 82, 85, 86], "label": [16, 20, 35, 36, 40, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 65, 66, 67, 74, 75, 76, 77, 79, 81, 82, 84, 86, 94, 98, 101, 103], "mislabel": 16, "human": 16, "sampl": [16, 19, 44, 48, 72, 73, 74, 79, 84, 85], "over": [16, 36, 48, 56, 78, 82, 84, 86], "poor": 16, "inadequ": 16, "suffici": [16, 20], "discrimin": [16, 86], "capac": [16, 20], "excess": 16, "indic": [16, 48, 79, 80, 81, 86], "strategi": [16, 19, 64, 66], "synthet": 16, "rebal": 16, "pariti": 16, "equal": [16, 48, 86], "odd": 16, "analysi": [16, 35, 44, 45, 54, 79, 80, 90, 93, 105, 107], "promot": [16, 19, 21, 29, 34, 38, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "board": 16, "hyperparamet": [16, 19, 36], "tune": [16, 19, 21, 36, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "plai": 16, "role": 16, "while": [16, 19, 33, 36, 66, 84, 86], "optim": [16, 19, 35, 59, 68, 76, 80, 100, 103], "investig": 16, "them": [16, 17, 18, 34, 35, 36, 37, 47, 48, 54, 56, 86], "take": [16, 35, 37, 40, 48, 50, 54, 75, 80, 86, 87, 103], "correct": [16, 37, 51, 54, 79, 86], "equit": 16, "ad": [17, 20, 23, 24, 36, 37, 62, 66, 67, 77, 79, 81], "convert": [17, 48, 56, 79], "uppercas": [17, 72, 87], "chang": [17, 33, 36, 37, 66, 79, 85], "variat": [17, 19, 78], "spell": 17, "mistak": [17, 18], "letter": 17, "upper": 17, "similar": [17, 18, 34, 79], "overreli": 17, "superfici": 17, "presenc": [17, 18], "combin": [17, 19, 20, 68], "drastic": 17, "dropout": [17, 19, 20, 68, 103, 104], "weight": [17, 19, 20, 64, 68, 76, 98], "decai": [17, 19, 20], "focu": [17, 36], "generaliz": 17, "deep": [17, 20], "neural": [17, 19, 20, 68, 76, 109], "network": [17, 19, 20, 30, 31, 32, 68, 76, 109], "prone": 17, "due": [17, 18, 79], "larg": [17, 18, 30], "paramet": [17, 19, 36, 39, 40, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 66, 67, 70, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 100], "non": [17, 68, 84, 86, 100, 101], "linear": [17, 18, 65, 69, 76, 98, 99, 109], "misspel": 17, "wider": [17, 20], "simul": 17, "both": [17, 18, 34, 54, 70, 82, 85, 86], "clean": [17, 68, 77], "capabl": [17, 20, 43, 44, 72, 96, 110], "captur": [17, 20], "consid": [17, 18, 20, 24, 79, 84, 86], "defens": 17, "relationship": [18, 78, 86], "coincident": 18, "extern": [18, 29, 32, 38], "rather": 18, "causal": 18, "meaning": 18, "effect": [18, 38, 40, 43], "confound": 18, "influenc": [18, 19, 66, 104], "illus": 18, "It": [18, 24, 36, 39, 43, 48, 54, 62, 66, 72, 77, 80, 82, 86, 87, 96, 110], "examin": 18, "nois": [18, 19, 20, 36, 37], "anomali": 18, "unrel": 18, "error": [18, 23, 40, 50, 54, 61, 63, 71, 81, 85], "mistakenli": 18, "random": [18, 19, 68, 74, 77, 87, 100], "chanc": [18, 86], "pure": 18, "likelihood": 18, "simpli": 18, "mislead": 18, "emerg": 18, "trend": 18, "season": 18, "rel": [18, 86], "fail": [18, 24, 38, 40, 50, 62, 66, 67, 72, 77, 79, 82, 84, 85, 86], "unreli": 18, "gather": [18, 29, 38, 40, 44], "busi": [18, 21, 29, 34, 36, 38, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 98], "feedback": [18, 21, 29, 34, 36, 38, 40, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 96, 110], "action": [18, 24, 29, 34, 79], "context": 18, "rule": [18, 31, 32, 48, 86], "constraint": 18, "share": [18, 21, 29, 34, 36, 38, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 86], "progress": [18, 66, 74], "expertis": 18, "through": [18, 20, 32, 43, 44, 45, 54, 81, 87], "plausibl": 18, "explain": [18, 35, 37], "allow": [18, 23, 32, 34, 40, 50, 54, 79, 81], "scrutin": 18, "common": [18, 39, 51, 70], "ground": [18, 21, 34, 36, 38, 39, 48, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "link": 18, "build": [18, 20, 76], "trust": 18, "solut": 18, "remain": [19, 66, 84], "reproduc": [19, 21, 34, 36, 62, 66, 67, 77], "obtain": [19, 77], "initi": [19, 44, 48, 51, 68, 74, 80], "mani": 19, "util": [19, 20, 59, 68, 72, 76, 77, 98, 100, 103], "subsequ": 19, "diverg": 19, "gradient": 19, "descent": 19, "sgd": [19, 76, 100], "mini": 19, "batch": [19, 36, 50, 51, 52, 53, 54, 55, 56, 57, 58, 76, 77, 101], "introduct": 19, "hardwar": [19, 54], "softwar": 19, "configur": [19, 31, 32, 43, 77], "parallel": 19, "oper": [19, 66, 72, 80], "multipl": [19, 20], "processor": [19, 21, 34, 38, 40, 48], "complet": [19, 29, 43, 44, 45, 50, 51, 72, 94], "elimin": 19, "alwai": 19, "desir": 19, "seed": [19, 70, 73, 77, 100, 103], "fix": 19, "begin": [19, 94, 101], "control": 19, "aggreg": 19, "averag": [19, 59, 86], "consensu": 19, "instead": [19, 54, 80, 87], "singl": [19, 68, 69, 73, 74], "bag": 19, "boost": 19, "stabl": 19, "perturb": [19, 72, 79, 84], "fine": [19, 36], "stabil": 19, "stem": [19, 66, 74], "setup": [19, 24, 29], "librari": [19, 28, 29, 40, 44, 46, 50, 54, 56, 91], "veri": [20, 35, 37, 44, 66, 73, 79], "next": [20, 44, 73], "highest": [20, 85], "cautiou": 20, "opportun": 20, "adequ": 20, "simpl": [20, 21, 22, 24, 36, 44, 45, 54, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "shallow": 20, "uncertain": 20, "intric": 20, "scarciti": 20, "estim": [20, 100], "characterist": 20, "ambigu": 20, "overlap": 20, "uncertainti": [20, 86], "propag": 20, "architectur": 20, "simplist": 20, "deeper": 20, "express": [20, 86], "quantiti": 20, "broader": 20, "rotat": 20, "translat": [20, 60, 68, 73, 74], "addit": [20, 38, 40, 50, 51, 70, 80], "relianc": 20, "individu": [20, 80, 86, 87], "neuron": 20, "prioriti": 20, "alloc": 20, "attent": 20, "final": [20, 44, 73], "probabilist": 20, "bayesian": 20, "level": [20, 35, 37, 66, 71, 80, 82, 84, 86, 87], "activ": [20, 68, 104], "iter": [20, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 74, 101], "queri": 20, "gradual": [20, 68], "hinder": 20, "solv": 20, "click": [21, 30, 31, 32, 33, 62, 66, 67, 77], "ll": [21, 23, 24, 29, 36, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "few": [21, 39, 44, 45, 47, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "titan": [21, 24, 34, 35, 36, 37, 38, 45, 47, 67, 89, 107], "feel": [21, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78], "free": [21, 29, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78], "compar": [21, 29, 34, 36, 38, 40, 43, 44, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 86], "decid": [21, 23, 29, 34, 36, 38, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "diagnos": [21, 29, 34, 36, 38, 46, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "team": [21, 22, 29, 34, 36, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "see": [21, 23, 24, 29, 33, 34, 36, 37, 39, 40, 46, 48, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "pleas": [21, 29, 33, 37, 38, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78], "document": [21, 30, 34, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "pip": [21, 24, 33, 46, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78], "0b": [21, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78], "With": [21, 34, 35, 36, 37, 43, 44, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 76, 77, 78], "ethic": [21, 34, 43, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 76, 77, 78], "detail": [21, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 76, 77, 78, 79], "replac": [21, 34, 60, 63, 66, 67], "creation": [21, 34, 67], "df": [21, 24, 34, 35, 36, 37, 38, 39, 40, 44, 45, 47, 48, 50, 51, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 94, 98, 100], "demo": [21, 24, 34, 35, 36, 37, 38, 39, 40, 45, 47, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "titanic_df": [21, 34, 38, 39], "data_preprocessor": [21, 34, 38, 40], "clf": [21, 34, 38, 40, 50, 51, 66], "titanic_pipelin": [21, 34, 38, 40], "wrap": [21, 23, 28, 34, 36, 38, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 67, 80, 87], "panda": [21, 33, 34, 35, 36, 37, 38, 39, 40, 44, 48, 50, 51, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 94, 98, 100, 101, 103, 104], "datafram": [21, 34, 35, 37, 38, 39, 40, 44, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 87, 94, 98, 100, 101, 103, 104], "golden": [21, 34, 36, 38, 39, 48, 67], "wrap_dataset": [21, 34, 38], "index": [21, 34, 37, 38, 76, 87, 94], "giskard_dataset": [21, 34, 38, 43, 46, 61, 67], "pre": [21, 34, 35, 38, 39, 40, 48, 50, 59, 60, 62, 63, 64, 65, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80], "actual": [21, 34, 38, 39, 48, 51, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 84, 85], "truth": [21, 34, 36, 38, 39, 48, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "surviv": [21, 24, 34, 35, 36, 37, 38, 39, 40, 45, 47, 67], "cat_column": [21, 24, 34, 35, 36, 37, 38, 39, 47, 48, 63, 64, 65, 70, 71, 73, 78], "pclass": [21, 24, 34, 35, 36, 37, 38, 39, 40, 47], "sex": [21, 24, 34, 35, 36, 37, 38, 39, 40, 47, 64, 71], "sibsp": [21, 24, 34, 35, 36, 37, 38, 39, 40, 47], "parch": [21, 24, 34, 35, 36, 37, 38, 39, 40, 47], "embark": [21, 24, 34, 35, 36, 37, 38, 39, 40, 47], "categor": [21, 34, 36, 38, 39, 40, 48, 50, 63, 64, 65, 70, 71, 73, 78, 79, 82, 86], "column": [21, 34, 35, 37, 38, 39, 40, 48, 50, 51, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 94, 98, 101, 104], "must": [21, 34, 36, 38, 39, 40, 50, 51, 52, 53, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78], "infer": [21, 34, 36, 38, 39, 40, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 69, 70, 71, 73, 77, 78], "wrap_model": [21, 34, 38], "pytorch": [21, 34, 38, 40, 50, 67, 91, 95, 101], "huggingfac": [21, 34, 38, 40, 50, 67, 75, 91, 94, 95], "langchain": [21, 34, 37, 38, 40, 44, 50, 67, 91, 95], "def": [21, 34, 35, 36, 37, 38, 40, 59, 60, 61, 63, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 94, 98, 100, 101, 103, 104], "prediction_funct": [21, 34, 38, 40, 50, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 74, 75, 76, 77, 78, 98], "hot": [21, 34, 38, 39, 40], "encod": [21, 34, 38, 39, 40, 48, 50, 59, 73, 75, 104], "scaler": [21, 34, 38, 40, 64, 71], "preprocessed_df": [21, 34, 38, 40], "predict_proba": [21, 34, 38, 40, 45, 47, 60, 65, 70, 74, 75, 98], "giskard_model": [21, 34, 38, 43, 46, 61, 67], "encapsul": [21, 34, 38, 40, 50, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "could": [21, 24, 34, 38, 40, 50, 51, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 86], "model_typ": [21, 24, 34, 36, 38, 40, 43, 44, 45, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 94, 98, 100, 101, 103, 104], "text_gener": [21, 34, 38, 40, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "classification_label": [21, 34, 36, 38, 40, 43, 45, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 74, 75, 76, 77, 78, 82, 84, 86, 94, 98, 101, 103, 104], "classes_": [21, 34, 38, 40, 47, 63, 64, 65, 66, 74, 75, 78], "Their": [21, 34, 38, 40, 59, 60, 62, 63, 64, 65, 66, 68, 70, 74, 75, 76, 77, 78], "ident": [21, 34, 38, 40, 47, 59, 60, 62, 63, 64, 65, 66, 68, 70, 74, 75, 76, 77, 78], "feature_nam": [21, 34, 38, 40, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 94, 98, 100, 101, 103, 104], "passengerid": [21, 34, 38, 40, 47], "ag": [21, 34, 35, 36, 37, 38, 40, 47, 64, 65, 71, 78, 81], "fare": [21, 34, 38, 40, 47], "classification_threshold": [21, 34, 38, 40, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 68, 70, 75], "5": [21, 33, 34, 36, 38, 40, 45, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 84, 86, 98], "Then": [21, 29, 32, 38, 61, 67, 79], "3": [21, 24, 33, 43, 44, 65, 66, 69, 70, 71, 74, 76, 77, 78, 85, 86, 98, 104], "test_suit": [21, 34, 35, 37, 47, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "generate_test_suit": [21, 34, 35, 37, 46, 47, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "my": [21, 34, 35, 36, 37, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 94], "first": [21, 23, 24, 29, 34, 35, 36, 37, 44, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 86], "verifi": [21, 34, 62, 66, 67, 77], "emot": [21, 35, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80], "style": [21, 37, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 87], "purpos": [21, 24, 35, 37, 38, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "f1": [21, 36, 59, 60, 63, 64, 65, 68, 70, 74, 75, 76, 78, 79, 85], "abov": [21, 24, 29, 33, 46, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 84, 86], "given": [21, 36, 37, 48, 50, 51, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 84, 85, 86], "threshold": [21, 35, 36, 40, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86], "add_test": [21, 36, 38, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81], "aftern": [21, 62, 66, 67, 77], "api_token": [21, 34, 38, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "localhost": [21, 29, 34, 38, 47, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "19000": [21, 29, 30, 31, 32, 34, 38, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "my_project": [21, 34, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "create_project": [21, 34, 38, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "project_nam": [21, 34, 38, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "descript": [21, 34, 38, 44, 45, 47, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 84, 86], "termin": [21, 29, 30, 31, 32, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78], "onc": [21, 46, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78], "ngrok_api_token": [21, 29, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78], "flow": [21, 29, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78], "snippet": [21, 36, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78], "past": [21, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78], "bug": 22, "plannifi": 22, "product": [22, 35, 36, 38, 39, 40, 48, 60, 73], "roadmap": 22, "never": 22, "sent": 22, "metadata": [22, 33, 39, 48, 51, 66, 80, 87], "just": [22, 29, 30, 31, 35, 36, 37, 44, 45, 47, 75], "On": [22, 31], "server": [22, 28, 30, 31, 32, 37, 46, 47, 50, 51, 61, 78, 80, 87], "go": [22, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40], "tab": [22, 29, 31, 38], "deactiv": 22, "usag": [22, 54, 56], "report": [22, 34, 43, 46, 66, 72], "section": [22, 32, 35, 36, 37, 40], "side": 22, "gsk_disable_analyt": 22, "everi": [23, 24], "commit": [23, 24], "scan_result": [23, 24, 34, 35, 37, 43, 46, 47], "wrapped_model": [23, 24, 36, 40, 47, 54, 59, 60, 63, 64, 65, 68, 69, 70, 71, 73, 74, 75, 76, 78, 94, 98, 100, 101, 103, 104], "wrapped_dataset": [23, 24, 36, 39, 54, 65, 70, 94, 98, 100, 101, 103, 104], "has_vulner": [23, 24], "els": [23, 24, 48, 76, 77, 98, 100, 101], "safe": [23, 24], "warn": [24, 35, 48, 60, 64, 71, 72, 96, 110], "don": [24, 29, 30, 33, 36, 60], "previou": [24, 44, 45], "shown": 24, "logic": [24, 48, 77], "safeti": 24, "job": [24, 64, 86], "workflow": 24, "tutori": [24, 41, 70, 71, 75, 94], "push": [24, 49], "automatic_scan": 24, "ubuntu": [24, 30, 31], "checkout": 24, "repo": 24, "content": [24, 66, 68, 76, 104], "v2": 24, "runner": 24, "8": [24, 33, 36, 54, 59, 63, 66, 67, 72, 74, 76, 85, 86, 103], "16": [24, 54, 59, 63, 65, 66, 68, 69, 70, 73, 74, 75, 100, 103], "instal": [24, 28, 29, 34, 38, 43, 46, 61, 75], "r": [24, 71, 77, 85, 86, 101], "txt": [24, 35, 66, 68], "id": [24, 30, 31, 48, 50, 51, 52, 53, 54, 56, 57, 58, 73, 81], "test_output": 24, "been": [24, 72, 80, 81, 86], "found": [24, 29, 34, 51, 72, 74, 80, 87], "modifi": 24, "ci": [28, 34], "app": [29, 38, 46], "cloud": [29, 32], "offer": 29, "bunch": 29, "effici": [29, 44, 45, 47, 79], "session": [29, 79], "compon": 29, "within": [29, 44, 45, 47, 84, 86], "abl": [29, 34, 39, 43, 47, 48], "linux": [29, 31, 33], "maco": [29, 70, 71], "wsl2": 29, "window": [29, 32, 33, 84], "ex": [29, 31, 36], "mac": [29, 33], "easi": 29, "sudo": [29, 30, 31, 32], "curl": [29, 30, 31, 32], "fssl": [29, 30, 31, 32], "sh": [29, 30, 31, 32], "right": [29, 30, 31, 32, 36, 40, 50, 62, 66, 67, 77, 86], "prefer": 29, "tcp": [29, 30, 32], "40051": [29, 30, 32], "two": [29, 36, 40, 43, 44, 45, 47, 50, 66, 84, 85, 86], "aw": 29, "gcp": 29, "azur": 29, "kernel": [29, 65, 75], "Or": 29, "deamon": 29, "via": [29, 47, 79], "cell": [29, 35, 37, 48, 63, 80, 87], "your_token": 29, "ec2": 29, "13": [29, 62, 66, 69, 71, 72, 77], "50": [29, 65, 84, 86], "xxxx": 29, "comput": [29, 30, 31, 32, 79, 82, 84, 85, 86], "amazonaw": 29, "try": [29, 34, 40], "below": [29, 33, 36, 79, 82, 84, 86], "4": [29, 33, 43, 54, 59, 63, 64, 66, 70, 72, 74, 76, 77, 78, 98, 104], "io": [29, 60], "10853": 29, "your_api_kei": 29, "e840": 29, "93": 29, "23": [29, 64, 65, 68], "184": 29, "ask": [29, 34, 40, 50], "zone": 30, "virginia": 30, "east": 30, "pari": 30, "eu": 30, "west": 30, "singapor": 30, "ap": 30, "southeast": 30, "imag": [30, 46, 66], "22": [30, 31, 33, 64, 68, 72, 73, 76], "04": [30, 31, 72], "lt": [30, 31], "64": [30, 54, 70, 76, 98], "bit": 30, "x86": 30, "type": [30, 32, 34, 36, 39, 40, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 68, 69, 70, 73, 74, 77, 79, 80, 81, 82, 84, 85, 86, 87, 91], "choos": [30, 31, 32, 36, 40, 50, 86], "least": [30, 31, 32, 80], "t2": 30, "2vcpu": [30, 31, 32], "8gb": [30, 31, 32], "memori": [30, 31, 32, 50, 51, 54], "pair": 30, "usual": [30, 44, 54], "amazon": [30, 90, 102, 107], "do": [30, 31, 32, 36, 38, 39, 44, 46, 86], "so": [30, 31, 32, 36, 38, 39, 86], "edit": 30, "secur": 30, "storag": 30, "minimum": [30, 86], "30": [30, 65, 66, 71, 72, 104], "gig": 30, "ssd": 30, "mainli": 30, "size": [30, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 76, 79], "ssh": [30, 31, 32], "platform": [30, 43], "ip": [30, 31, 32], "public": [30, 31], "ipv4": [30, 32], "dn": 30, "web": [30, 31, 32], "browser": [30, 31, 32], "admin": [30, 31], "password": [30, 31], "That": [30, 31, 32, 86], "readi": [30, 31, 32, 34, 44], "artifact": [30, 31, 32, 44, 45, 80, 87], "stop": [30, 31, 32, 68, 74], "restart": [30, 31, 32], "cost": [30, 31, 32, 44], "howev": [30, 31, 32, 54], "note": [30, 31, 32, 36, 48, 50, 51, 54, 74, 86], "necessarili": [30, 31, 32], "inspect": [31, 32, 38, 39], "microsoft": 31, "synaps": 31, "analyt": 31, "resourc": [31, 36, 62], "virtual": 31, "20": [31, 33, 35, 37, 44, 65, 66, 72, 73, 74, 75, 76, 82, 86, 100, 104], "standard_d2": 31, "inbound": 31, "download": [31, 46, 48, 50, 51, 60, 65, 66, 68, 69, 70, 71, 73, 75, 77, 78, 80, 87, 101], "certif": 31, "properti": [31, 51, 64], "path": [31, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 68, 69, 70, 71, 73, 74, 75, 77, 78, 103], "overview": 31, "bob": 31, "giskard2_kei": 31, "cer": 31, "azureus": 31, "52": 31, "142": 31, "236": 31, "215": 31, "git": [31, 32], "launch": [31, 32], "folder": [31, 32, 44, 45], "workbench": 32, "vertex": 32, "e2": 32, "full": [32, 35, 37, 50, 51, 52, 53, 55, 57, 58, 79, 80, 86, 87], "firewal": 32, "traffic": 32, "gcloud": 32, "contact": [32, 66], "administr": 32, "vpc": 32, "filter": [32, 35, 37, 60, 74, 79, 80], "protocol": 32, "repeat": 32, "9": [33, 35, 59, 63, 65, 66, 70, 72, 77, 80], "cloudpickl": [33, 40, 50, 51], "zstandard": 33, "mlflow": [33, 51], "skinni": 33, "numpi": [33, 40, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 65, 68, 70, 75, 76, 77, 98, 100, 103], "24": [33, 64, 73], "shap": [33, 46, 79], "doesn": 33, "int": [33, 35, 37, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 66, 73, 75, 76, 77, 80, 81, 82, 87, 103], "scikit": [33, 34, 40, 62, 66, 91, 95], "scipi": 33, "eli5": 33, "cannot": [33, 50, 80, 82, 84, 87], "itemfreq": 33, "stat": 33, "41": [33, 60], "ipython": 33, "show_predict": 33, "toolbelt": 33, "mixpanel": 33, "19": [33, 59, 62, 65, 75], "protobuf": [33, 79], "pydant": 33, "tenac": 33, "lockfil": 33, "psutil": 33, "6": [33, 59, 63, 66, 69, 70, 71, 72, 74, 77, 78, 85], "tqdm": 33, "42": [33, 60, 62, 69, 70, 100, 103], "setuptool": 33, "39": [33, 65, 70, 72], "68": [33, 64], "pycryptodom": 33, "xxhash": 33, "langdetect": 33, "chardet": 33, "jinja2": 33, "templat": [33, 37, 40, 44, 72], "temporari": [33, 50, 51], "conflict": 33, "uninstal": 33, "packag": [34, 46, 64, 72], "affect": [34, 37], "compos": [34, 63, 64, 66, 71, 78], "tensorflow": [34, 40, 50, 91, 95, 103, 104], "catboost": [34, 40, 50], "interact": 34, "keep": [34, 66, 79], "later": [34, 72], "to_html": 34, "model_scan_result": 34, "explor": 34, "turn": [34, 36], "previous": 34, "encount": [34, 54, 70, 71], "join": [34, 68, 70, 74], "discord": [34, 41], "question": [34, 74], "channel": 34, "gladli": 34, "global": [35, 62, 66, 67, 77, 80, 87], "analyz": [35, 86], "sub": [35, 66, 77], "propos": [35, 37], "sentiment": [35, 54, 80, 90, 93, 105, 107], "ironi": 35, "look": [35, 36, 37, 40, 48, 86], "nlp": [35, 37, 68], "decor": [35, 36, 37, 51, 80, 87], "slicing_funct": [35, 36, 38, 48, 79, 80, 82, 84, 85, 86], "row": [35, 36, 37, 38, 40, 48, 50, 51, 60, 62, 66, 67, 68, 73, 74, 77, 79, 80, 82, 84, 85, 86, 87], "row_level": [35, 37, 48, 80, 87], "boolean": [35, 36, 37, 81], "correspond": [35, 37, 39, 40, 48, 50, 51, 72, 81], "pd": [35, 36, 37, 38, 44, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 87, 94, 98, 100, 101, 103, 104], "_": [35, 36, 37, 68, 76, 98], "my_func2": [35, 37], "fals": [35, 36, 37, 48, 50, 51, 59, 63, 64, 66, 68, 71, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 101, 103], "my_func1": [35, 37], "cell_level": [35, 37, 48, 80, 87], "string": [35, 36, 37, 39, 48, 60, 66, 68, 74, 77, 81, 104], "second": [35, 36, 37, 50, 51, 54, 79], "my_func3": [35, 37], "train_df": [35, 36, 75], "column_nam": [35, 36, 37, 48, 79, 80, 82, 87], "power": [35, 37], "_sentiment_analysi": 35, "sentiment_pipelin": 35, "512": [35, 54], "charact": [35, 60, 87], "sentenc": [35, 68, 75, 77], "map": [35, 48, 59, 77, 81, 101, 103, 104], "lambda": [35, 54, 60, 68, 69, 74, 75, 77, 103], "iloc": [35, 62, 66, 67, 69, 73, 74, 77], "tag": [35, 36, 37, 79, 80, 87], "str": [35, 36, 37, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 65, 66, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 86, 87], "float": [35, 36, 50, 51, 52, 53, 54, 55, 56, 57, 58, 79, 80, 81, 82, 84, 85, 86, 87, 100], "match": [35, 50, 51, 79, 80, 81], "anger": [35, 80], "sad": [35, 80], "joi": [35, 80], "cardiffnlp": 35, "twitter": [35, 59], "roberta": [35, 99], "most": [35, 36, 37, 44, 46, 69, 79, 80, 82], "insightul": [35, 37], "extract": [35, 37, 59, 60, 61], "my_dataset": [35, 37], "my_model": [35, 37], "further": [35, 36, 38, 76], "becaus": [36, 66], "tool": 36, "hesit": 36, "still": [36, 72, 96, 110], "ones": 36, "pick": 36, "thank": 36, "pass": [36, 46, 50, 51, 53, 54, 55, 56, 57, 58, 71, 79, 81, 82, 84, 85, 86], "head": [36, 98, 100, 101, 103, 104], "400": 36, "test_df": [36, 75, 94, 101, 103, 104], "tail": 36, "female_slic": 36, "actual_dataset": [36, 82, 85], "reference_dataset": [36, 82, 85], "ye": [36, 43, 45, 62, 66, 67, 77], "kolmogorov": [36, 82], "smirnov": [36, 82], "scientist": 36, "out": [36, 46, 54, 86, 100], "nutshel": 36, "benefit": 36, "theori": 36, "categori": [36, 39, 40, 48, 63, 64, 66, 70, 71, 76, 82, 86], "articl": [36, 43, 44, 72], "transformation_funct": [36, 37, 38, 48, 84, 87], "increase_ag": [36, 38], "ratio": [36, 82, 84, 86], "slicingfunct": [36, 48, 79, 80, 82, 84, 85, 86], "transformationfunct": [36, 48, 84, 87], "primit": 36, "testresult": [36, 79, 81], "otherwis": [36, 48, 50, 51, 53, 54, 55, 56, 57, 58, 86], "frequenc": [36, 66], "uniqueness_test_funct": 36, "put": 36, "freq_of_cat": 36, "value_count": [36, 66], "len": [36, 48, 59, 66, 68, 73, 75, 76, 98], "70": 36, "autom": 36, "retrain": 36, "candid": 36, "e": [36, 40, 48, 54, 66, 87, 101], "except": [36, 50, 51, 62, 66, 67, 77], "slice_sex": [36, 38], "everytim": [36, 62, 66, 67, 77], "my_first_model": 36, "passed_first": 36, "results_first": 36, "my_improved_model": 36, "passed_second": 36, "results_second": 36, "focus": 36, "respect": [36, 40, 50, 86], "neither": [36, 48], "slice_femal": 36, "batch_1": 36, "100": [36, 44, 45, 47, 48, 64, 68, 72, 73, 100], "passed_1": 36, "results_1": 36, "batch_2": 36, "passed_2": 36, "results_2": 36, "advanc": 36, "suiteinput": [36, 79, 80, 81, 82, 84, 85, 86, 87], "whose": 36, "shared_input_femal": 36, "realist": 37, "punctuat": [37, 60, 66, 68, 72, 74, 77, 87], "strip": [37, 74], "keyboard": [37, 87], "my_df": 37, "offset": [37, 76, 98], "transformed_dataset": 37, "change_writing_styl": [37, 87], "openai_api_kei": [37, 44, 72, 87], "rewrite_prompt_templ": 37, "rewrit": 37, "robot": 37, "receiv": [37, 80, 87], "goal": 37, "accord": [37, 43, 44], "rewritten": 37, "respons": [37, 40, 61], "grammat": 37, "retain": 37, "origin": [37, 66, 79, 84, 86], "much": [37, 86], "good": [37, 40], "luck": 37, "prompttempl": [37, 40, 44, 72], "llmchain": [37, 40, 44, 72], "openai": [37, 44], "rewrite_prompt": 37, "input_vari": [37, 40, 44, 72], "chain_rewrit": 37, "enron": [38, 90, 102, 107], "my_project_id": 38, "colleagu": [38, 40], "regard": [38, 40], "failur": [38, 40], "titanic_dataset": 39, "column_typ": [39, 48, 62, 63, 64, 66, 72], "none": [39, 40, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87], "mandatori": [39, 40, 50], "sample_id": [39, 48], "One": [39, 79, 82, 84], "binari": [39, 40, 50, 51, 54, 60, 62, 68, 70, 75, 78], "uniqu": [39, 40, 48, 81], "dictionari": [39, 48, 66], "revert": 39, "back": 39, "sklearn": [40, 45, 50, 59, 62, 63, 68, 70, 71, 73, 76, 104], "signatur": [40, 50], "serializ": [40, 51], "g": [40, 54, 87], "messag": [40, 48, 50, 66, 71, 81, 82, 84], "titanic_model": 40, "arrai": [40, 50, 51, 53, 54, 55, 56, 57, 58, 98], "m": [40, 50, 51, 70], "entri": [40, 50, 51, 101], "accept": [40, 50, 51, 69, 74, 86], "element": 40, "np": [40, 48, 59, 60, 65, 68, 70, 75, 76, 77, 98, 100], "reg": 40, "linear_pipelin": 40, "squeez": [40, 100, 103], "linear_model": [40, 60, 64, 66, 75], "chain": [40, 44, 60, 81], "fake": [40, 90, 105, 107], "fakelistllm": 40, "nhuefoot": 40, "necodr": 40, "motor": 40, "nrainbow": 40, "sock": 40, "nnooil": 40, "compani": [40, 59, 63, 66, 86], "to_dict": 40, "record": [40, 73], "suitabl": [40, 50], "serial": [40, 50, 51], "save_model": [40, 50, 51, 52, 54, 55, 56, 57, 58], "load_model": [40, 50, 51, 52, 54, 55, 56, 57, 58], "overrid": [40, 50], "model_predict": [40, 50, 51, 53, 54, 55, 56, 57, 58, 77, 98], "mycustommodel": 40, "self": [40, 48, 59, 76, 77, 98, 100], "model_postprocessing_funct": [40, 50, 51, 52, 53, 54, 55, 56, 57, 58, 101], "kwarg": [40, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 68, 69, 71, 75, 78], "data_preprocessing_funct": [40, 50, 51, 52, 53, 54, 55, 56, 57, 58, 94, 101, 103], "fed": [40, 50], "post": 40, "shape": [40, 50, 51, 53, 54, 55, 56, 57, 58, 68, 70, 73, 76, 104], "my_regression_model": 40, "rest": [40, 68, 79], "generataion": 40, "blog": 41, "bull": 41, "websit": [41, 46], "seamless": 43, "onto": 43, "furthermor": 43, "facilit": 43, "observ": [43, 86], "part": 43, "list_evalu": 43, "evaluator_config": [43, 45], "yield": [43, 98], "model_config": [43, 45], "fill": [43, 73], "dataset_config": 43, "scan_config": 43, "param": [43, 51, 59, 61, 80, 81], "text_perturb": 43, "num_sampl": [43, 72], "1000": [43, 44, 48, 66, 69, 77], "model_uri": [43, 44, 45], "classifi": [43, 45, 59, 60, 63, 64, 65, 66, 68, 75, 78, 79, 86, 104], "df_sampl": [43, 44], "achiev": 43, "start_run": [43, 44, 45], "to_mlflow": 43, "test_suite_result": [43, 46], "experiment_id": 43, "create_run": 43, "info": [43, 72], "run_id": 43, "demonstr": [44, 45, 47], "max": [44, 66, 75], "ada": [44, 72], "001": [44, 72], "fastest": 44, "gpt": 44, "lowest": 44, "2049": 44, "oct": 44, "2019": 44, "davinci": 44, "higher": [44, 82, 84, 85, 86], "reader": [44, 72], "comment": [44, 60, 80, 90, 96, 110], "summari": [44, 45, 48, 74, 84, 86], "4515": 44, "hindu": 44, "indian": 44, "guardian": 44, "period": 44, "februari": 44, "august": 44, "2017": 44, "read_csv": [44, 59, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 77, 78, 104], "sunnysai12345": [44, 72], "news_summari": [44, 72], "master": [44, 72], "news_summary_mor": [44, 72], "csv": [44, 59, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 77, 78, 104], "random_st": [44, 59, 60, 62, 63, 64, 65, 66, 68, 69, 71, 72, 74, 75, 78, 104], "move": [44, 72], "forward": [44, 50, 51, 53, 54, 55, 56, 57, 58, 59, 66, 76, 98, 100], "your_openai_api_kei": 44, "log": [44, 45, 47, 71, 86], "proce": 44, "request_timeout": [44, 72], "max_retri": [44, 72], "temperatur": [44, 72], "model_nam": [44, 45, 47, 59, 72], "run_nam": [44, 45], "log_model": [44, 45], "mlrun": [44, 45], "locat": [44, 45, 80, 87], "visual": [44, 45], "127": [44, 45], "5000": [44, 45], "interfac": [44, 45, 47, 49, 51], "There": [44, 45, 54], "comparison": [44, 45], "json": [44, 45, 60, 61], "view": [44, 45], "model1": [45, 47], "logisticregress": [45, 60, 64, 66, 75], "epoch": [45, 47, 68, 76, 100], "model2": [45, 47], "max_it": [45, 47, 64, 65, 66], "item": [45, 47, 59, 68, 70, 76, 100], "pyfunc_predict_fn": 45, "plot": 46, "highlight": 46, "wandb": [46, 47], "login": 46, "relogin": 46, "upgrad": [46, 59], "alreadi": [46, 81], "shap_result": 46, "explain_with_shap": [46, 47], "to_wandb": [46, 47], "tabl": [46, 86], "init": [46, 68], "lgbmclassifi": [47, 63, 70], "__": 47, "model_lgbm_max_it": 47, "wrapped_data": [47, 59, 60, 63, 64, 68, 69, 71, 73, 74, 75, 76, 78], "shap_explanation_result": 47, "finish": [47, 60, 65], "visualis": 47, "8080": 47, "hashabl": 48, "dict": [48, 66, 68, 70, 77, 80, 81], "uuid": [48, 80, 87], "data_processor": 48, "dataprocessor": 48, "_infer_column_typ": 48, "__init__": [48, 59, 76, 77, 81, 98, 100], "bool": [48, 56, 79, 80, 81, 82, 84, 85, 86], "logarithm": 48, "empti": 48, "exclud": [48, 66], "mark": [48, 79], "unknown": [48, 73], "remov": [48, 60, 64, 68, 70, 72, 74, 77, 87], "calcul": [48, 75, 79, 82, 84, 86], "attempt": 48, "to_numer": [48, 63], "convers": 48, "rais": [48, 50, 51, 61, 80, 81, 87], "valueerror": [48, 50, 51, 74], "category_threshold": 48, "round": 48, "log10": 48, "length": [48, 75, 82, 84, 85, 86], "greater": 48, "dynam": [48, 50], "add_slicing_funct": 48, "add_transformation_funct": 48, "callabl": [48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 80, 81, 87], "get_mask": 48, "union": [48, 50, 51, 52, 54, 55, 56, 57, 58, 77, 80, 81, 87], "slicingfunctiontyp": [48, 80], "whether": [48, 56, 68, 75, 78, 79, 80, 81, 84, 86, 87], "mask": 48, "typeerror": 48, "transformationfunctiontyp": 48, "project_kei": [48, 50, 51, 80, 81, 87], "classmethod": [48, 50, 51, 52, 54, 55, 56, 57, 58, 80, 87], "dataset_id": 48, "assum": [48, 82, 86], "belong": [48, 50, 51, 81, 86], "supportedmodeltyp": [50, 51, 52, 53, 54, 55, 56, 57, 58], "liter": [50, 51, 52, 53, 54, 55, 56, 57, 58], "nxm": [50, 51], "nx1": [50, 51], "modeltyp": [50, 51, 52, 53, 54, 55, 56, 57, 58], "postprocess": [50, 54], "keyword": [50, 74, 80], "enumer": [50, 51, 52, 53, 55, 57, 58], "incom": [50, 51, 52, 53, 55, 56, 57, 58, 72, 78], "wrapper": [50, 51, 52, 53, 54, 55, 56, 57, 58, 77], "batch_siz": [50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 76, 77, 100, 101, 103], "static": 50, "__new__": 50, "cl": [50, 75], "inherit": [50, 81], "predictionfunctionmodel": [50, 53], "sklearnmodel": [50, 57, 81], "catboostmodel": [50, 52], "huggingfacemodel": [50, 54], "pytorchmodel": [50, 56], "tensorflowmodel": [50, 58], "langchainmodel": [50, 55], "cloudpickleserializablemodel": [50, 51], "is_classif": [50, 51], "is_binary_classif": [50, 51], "is_regress": [50, 51], "is_text_gener": [50, 51], "abstract": [50, 51], "did": [50, 51, 53, 54, 55, 56, 57, 58, 72], "whatev": [50, 51, 53, 54, 55, 56, 57, 58], "num_entri": [50, 51, 53, 54, 55, 56, 57, 58], "num_class": [50, 51, 53, 54, 55, 56, 57, 58, 66, 76, 98, 101], "ndarrai": [50, 51, 53, 54, 55, 56, 57, 58, 59, 65, 68, 70, 75, 76, 77], "modelpredictionresult": [50, 51, 54], "prepare_datafram": [50, 51], "predict_df": [50, 51], "field": [50, 51], "raw_predict": [50, 51, 59, 64, 65, 69, 74], "multiclass": [50, 51, 65, 74], "all_predict": [50, 51], "local_path": [50, 51, 52, 54, 55, 56, 57, 58], "validate_d": [50, 51], "model_id": [50, 51], "call": [50, 51, 72, 79, 81, 86, 103], "assertionerror": [50, 51, 80, 81, 87], "structur": 50, "pars": [50, 66, 68], "validationerror": 50, "form": 50, "basemodel": [51, 79, 82, 84, 85, 86], "invalid": 51, "duplic": 51, "configured_validate_argu": 51, "meta": 51, "modelmeta": 51, "inner": 51, "prepar": 51, "column_dtyp": 51, "mlflowserializablemodel": 51, "subclass": [51, 54, 79], "wrappermodel": 51, "mlflow_meta": [52, 55, 56, 57, 58], "transfom": 54, "pretrain": 54, "automodel": 54, "from_pretrain": [54, 59, 75, 77, 94], "automodelforsequenceclassif": 54, "autotoken": [54, 94], "distilbert": [54, 59, 75, 77], "uncas": [54, 75, 77], "finetun": 54, "sst": [54, 99], "english": [54, 60, 66, 68, 74, 76, 77], "gsk": 54, "gsk_model": 54, "tolist": [54, 59, 64, 65, 66, 73, 75, 98], "pad": [54, 59], "truncat": [54, 59, 101], "max_length": [54, 59, 75, 77], "return_tensor": [54, 77, 94], "pt": [54, 77, 94, 101], "neg": [54, 59, 75, 94], "posit": [54, 59, 75, 80, 86, 94], "32": [54, 64, 68, 103], "speed": 54, "gpu": 54, "notic": 54, "gsk_dataset": 54, "movi": [54, 90, 93, 107], "love": 54, "long": [54, 56], "cach": [54, 72, 80, 87], "no_cach": 54, "128": [54, 70, 77], "perf_count": [54, 76], "elaps": 54, "thing": [54, 72], "logit": [54, 59, 77], "softmax": [54, 59, 76, 77, 98, 101, 104], "deviat": [54, 79], "around": [54, 56], "mileag": 54, "vari": 54, "torch_dtyp": 56, "float32": [56, 68, 70], "float64": 56, "doubl": 56, "complex64": 56, "cfloat": 56, "float16": 56, "half": 56, "bfloat16": 56, "uint8": 56, "int8": [56, 70], "int16": [56, 70], "short": [56, 80], "int32": [56, 70], "int64": [56, 76], "devic": [56, 76, 77, 98, 100, 101], "cpu": [56, 59, 76, 77, 98, 100, 101], "iterate_dataset": 56, "torchdtyp": 56, "tensor": [56, 59, 75, 76, 98], "sequenc": [59, 93], "acceler": 59, "14": [59, 62, 65, 72], "f1_score": 59, "torchdataset": 59, "model_select": [59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 74, 75, 78, 104], "train_test_split": [59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 74, 75, 78, 104], "mlflowcallback": 59, "tensorboardcallback": 59, "wandbcallback": 59, "distilberttoken": [59, 75, 77], "distilbertforsequenceclassif": [59, 77], "trainingargu": 59, "random_se": [59, 60, 62, 63, 65, 68, 74, 77, 78], "text_column_nam": [59, 68, 74, 77], "target_column_nam": [59, 62, 63, 64, 68, 69, 74, 76, 77], "airline_senti": 59, "target_str_int": 59, "neutral": 59, "target_int_str": 59, "souvikcmsa": 59, "sentimentanalysisdistillbert": 59, "data_url": [59, 60, 64, 65, 68, 69, 70, 71, 73, 74, 75, 77, 78], "twitter_us_airline_sentiment_analysi": 59, "load_preprocess_data": 59, "usecol": 59, "x_train": [59, 60, 62, 63, 64, 65, 66, 68, 70, 71, 73, 74, 75, 78, 104], "x_test": [59, 60, 62, 63, 64, 65, 66, 68, 70, 71, 74, 75, 78, 104], "y_train": [59, 60, 62, 63, 64, 65, 66, 68, 70, 71, 73, 74, 75, 78, 104], "y_test": [59, 60, 62, 63, 64, 65, 66, 68, 70, 71, 74, 75, 78, 104], "raw_data": [59, 60, 62, 63, 64, 68, 69, 71, 73, 74, 76, 78, 94, 98], "concat": [59, 60, 62, 63, 64, 65, 68, 69, 70, 71, 73, 74, 78], "axi": [59, 60, 62, 63, 64, 65, 68, 69, 70, 71, 73, 74, 76, 77, 78, 98, 103, 104], "customdataset": 59, "__getitem__": 59, "idx": [59, 68], "val": [59, 73], "__len__": 59, "input_id": [59, 77], "x_train_token": [59, 68], "256": [59, 68, 101], "x_test_token": [59, 68], "train_dataset": [59, 76, 100], "val_dataset": [59, 100], "freez": 59, "distillbert": [59, 75], "base_model": 59, "requires_grad": 59, "compute_metr": 59, "eval_pr": 59, "prob": [59, 76, 77], "y_true": 59, "y_pred": [59, 74, 77], "argmax": [59, 76], "macro": [59, 64], "training_arg": 59, "output_dir": 59, "learning_r": [59, 68, 70], "2e": 59, "per_device_train_batch_s": 59, "per_device_eval_batch_s": 59, "num_train_epoch": 59, "adamw_torch": 59, "weight_decai": 59, "01": [59, 60, 68, 72], "save_strategi": 59, "disable_tqdm": 59, "eval_dataset": 59, "remove_callback": 59, "input_text": 59, "text_token": [59, 68], "raw_pr": 59, "attention_mask": [59, 75, 77], "nn": [59, 76, 77, 98, 100, 101], "dim": [59, 76, 101], "lanigan": 60, "snap": 60, "stanford": [60, 103], "edu": [60, 66, 103], "productgraph": 60, "categoryfil": 60, "reviews_apps_for_android_5": 60, "gz": [60, 66, 103], "40": [60, 65, 86], "pathlib": [60, 65, 68, 69, 70, 71, 73, 74, 75, 77, 78, 103], "urllib": [60, 65, 68, 69, 70, 71, 73, 74, 75, 77, 78], "urlretriev": [60, 65, 68, 69, 70, 71, 73, 74, 75, 77, 78], "functiontransform": [60, 69, 74], "feature_extract": [60, 66, 69, 74], "tfidfvector": [60, 69], "roc_auc_scor": [60, 70], "balanced_accuracy_scor": 60, "disabl": 60, "chained_assign": 60, "test_ratio": [60, 78], "target_threshold": 60, "target_nam": [60, 65], "ishelp": 60, "ftp": [60, 65, 68, 69, 70, 71, 73, 74, 75, 77, 78], "sy": [60, 65, 68, 69, 70, 71, 73, 74, 75, 77, 78], "pub": [60, 65, 68, 69, 70, 71, 73, 74, 75, 77, 78], "unit_test_resourc": [60, 65, 68, 69, 70, 71, 73, 74, 75, 77, 78], "amazon_review_dataset": 60, "data_path": [60, 65, 68, 69, 70, 71, 73, 74, 75, 77, 78], "43": 60, "fetch_from_ftp": [60, 65, 68, 69, 70, 71, 73, 74, 75, 77, 78], "helper": [60, 65, 68, 69, 70, 71, 73, 74, 77, 78], "fetch": [60, 65, 68, 69, 70, 71, 73, 74, 78], "parent": [60, 65, 68, 69, 70, 71, 73, 74, 75, 77, 78], "mkdir": [60, 65, 68, 69, 70, 71, 73, 74, 75, 77, 78], "exist_ok": [60, 65, 68, 69, 70, 71, 73, 74, 75, 77, 78], "wa": [60, 64, 65, 68, 69, 70, 71, 73, 74, 75, 78, 86, 94], "download_data": [60, 71, 78], "_df": [60, 65, 70, 71, 78], "read_json": [60, 75], "preprocess_data": [60, 73, 78], "reviewtext": 60, "null": [60, 84, 86], "x00": 60, "total": [60, 82, 86], "vote": 60, "helpful_r": 60, "total_r": 60, "unreason": 60, "astyp": 60, "anymor": 60, "drop": [60, 63, 64, 65, 66, 68, 70, 71, 73, 74, 75, 77, 78], "inplac": [60, 68, 70, 77], "44": 60, "reviews_df": [60, 69, 75], "45": [60, 64], "test_siz": [60, 64, 65, 66, 70, 78, 104], "stratifi": [60, 64, 66, 104], "46": 60, "47": 60, "remove_punctu": [60, 77], "maketran": [60, 68, 74], "preprocessor": [60, 63, 64, 66, 71, 78], "vector": [60, 65, 68, 69, 73, 74], "stop_word": [60, 66, 74, 77], "min_df": 60, "class_weight": 60, "roc": [60, 70], "auc": [60, 70, 85], "train_metr": [60, 65, 68, 69, 70, 78], "test_metr": [60, 65, 68, 69, 70, 78], "2f": [60, 63, 65, 69, 70, 71, 73, 75, 76, 78], "b_acc_train": 60, "b_acc_test": 60, "review_helpfulness_predictor": 60, "wrapped_predict": [60, 71, 78], "wrapped_test_metr": [60, 68, 69, 70, 71, 76, 78], "51": 60, "input_data": 61, "endpoint": 61, "api_endpoint": 61, "api_param": 61, "send": 61, "raise_for_statu": 61, "feature1": 61, "feature2": 61, "feature3": 61, "label1": 61, "label2": 61, "uci": 62, "load_breast_canc": 62, "xgbclassifi": 62, "15": [62, 65, 70, 72, 74], "constant": [62, 77], "as_fram": 62, "col": 62, "breast_canc": 62, "loc": 62, "xgb": 62, "logist": [62, 64, 66, 75], "17": [62, 65, 68, 71, 72, 73, 75], "breast_cancer_xgboost": 62, "vulnerabilit": [62, 66, 67, 77], "unperform": [62, 66, 67, 77], "robut": [62, 66, 67, 77], "accuracy_scor": [63, 65, 68, 75, 76, 78], "columntransform": [63, 64, 66, 71, 78], "onehotencod": [63, 64, 65, 71, 78], "standardscal": [63, 64, 71, 78], "123": 63, "seniorcitizen": 63, "partner": 63, "tenur": 63, "phoneservic": 63, "multiplelin": 63, "internetservic": 63, "onlinesecur": 63, "onlinebackup": 63, "deviceprotect": 63, "techsupport": 63, "streamingtv": 63, "streamingmovi": 63, "contract": 63, "paperlessbil": 63, "paymentmethod": 63, "monthlycharg": 63, "totalcharg": 63, "feature_typ": [63, 66, 79], "columns_to_scal": [63, 64], "columns_to_encod": [63, 64], "dataset_url": 63, "wa_fn": 63, "usec_": 63, "telco": 63, "coerc": 63, "dropna": [63, 78, 104], "customerid": 63, "regex": [63, 77], "churn_df": 63, "num": [63, 64, 78], "cat": [63, 64, 66, 70, 76, 78], "handle_unknown": [63, 64, 71, 78], "ignor": [63, 64, 71, 78, 81], "y_train_pr": [63, 65, 71, 73], "train_accuraci": [63, 76], "y_test_pr": [63, 65, 71], "wrapped_y_pr": 63, "wrapped_accuraci": 63, "simpleimput": 64, "classification_report": [64, 74], "account_check_statu": 64, "duration_in_month": 64, "credit_histori": 64, "credit_amount": 64, "present_employment_sinc": 64, "installment_as_income_perc": 64, "personal_statu": 64, "other_debtor": 64, "present_residence_sinc": 64, "other_installment_plan": 64, "hous": [64, 86], "credits_this_bank": 64, "people_under_mainten": 64, "telephon": 64, "foreign_work": 64, "credit_scoring_classification_model_dataset": 64, "german_credit_prepar": 64, "25": [64, 68, 70, 75, 85, 86], "keep_default_na": 64, "na_valu": 64, "_gsk_na_": 64, "26": [64, 65, 68, 73], "27": [64, 68, 72, 73], "28": [64, 68, 73], "numeric_transform": 64, "median": 64, "categorical_transform": 64, "fill_valu": 64, "onehot": 64, "spars": [64, 71, 76, 78, 98], "29": [64, 65], "pred_train": [64, 69], "pred_test": [64, 69], "54": 64, "60": [64, 65], "Not": [64, 94], "79": 64, "91": 64, "85": 64, "140": 64, "77": 64, "200": 64, "avg": 64, "73": 64, "69": [64, 65], "76": 64, "75": 64, "mykytaalekseiev": 64, "giskard_main": 64, "venv": 64, "lib": [64, 72], "python3": [64, 72], "site": 64, "_encod": 64, "868": 64, "futurewarn": [64, 71], "renam": 64, "sparse_output": 64, "leav": 64, "person": [65, 78], "health": 65, "www": [65, 68, 69, 70, 71, 73, 74, 75, 78], "kaggl": [65, 68, 69, 70, 71, 73, 74, 75, 77, 78], "caesarmario": 65, "w": 65, "prathamtripathi": 65, "datasetid": 65, "830916": 65, "sortbi": 65, "votecount": 65, "imblearn": 65, "over_sampl": 65, "smote": 65, "pipelineimb": 65, "svm": 65, "svc": 65, "age_bin": 65, "49": 65, "59": 65, "80": [65, 86, 100], "age_categori": 65, "na_to_k_bin": 65, "na_to_k_categori": 65, "drug_classification_dataset": 65, "drug200": 65, "18": [65, 72, 73], "load_data": [65, 68, 69, 73, 74, 75], "bin_numer": 65, "bin": 65, "_bin_ag": 65, "cut": 65, "_bin_na_to_k": 65, "na_to_k": 65, "df_drug": 65, "21": [65, 68, 76], "raw_dataset": [65, 70], "one_hot_encod": [65, 71], "250": [65, 70, 72, 103], "drug_classifi": 65, "wrapped_y_train_pr": 65, "wrapped_train_metr": 65, "glob": 66, "defaultdict": 66, "nltk": [66, 68, 77], "dateutil": 66, "parser": 66, "corpu": [66, 68, 75, 77], "stopword": [66, 68, 77], "porterstemm": 66, "countvector": [66, 74], "tfidftransform": 66, "bailando": 66, "sim": 66, "berkelei": 66, "enron_with_categori": 66, "tar": [66, 103], "zxf": 66, "rm": 66, "punkt": 66, "stoplist": 66, "stemmer": [66, 74], "enron_categori": 66, "idx_to_cat": 66, "regul": [66, 104], "california": [66, 104], "crisi": [66, 104], "talk": 66, "point": [66, 70, 71, 73], "meet": 66, "minut": 66, "trip": 66, "idx_to_cat2": 66, "price": [66, 73, 86], "cap": 66, "polit": 66, "energi": 66, "polici": 66, "allianc": 66, "partnership": 66, "legal": 66, "advic": 66, "label_cat": 66, "2nd": 66, "primari": 66, "topic": 66, "mutual": [66, 86], "exclus": 66, "get_label": 66, "filenam": 66, "readlin": 66, "top_cat": 66, "sub_cat": 66, "freq": 66, "email_fil": 66, "columns_nam": 66, "subject": [66, 68], "week_dai": 66, "year": [66, 73, 78], "month": [66, 73], "hour": [66, 78], "nb_of_forwarded_msg": 66, "values_to_add": 66, "maximum": [66, 82, 86], "sub_cat_dict": 66, "target_int": 66, "message_from_str": 66, "get_payload": 66, "date_time_obj": 66, "strftime": 66, "y": [66, 86, 100, 103, 104], "b": [66, 77, 84, 100], "h": [66, 86], "count": [66, 86], "mail": 66, "number_of_messag": 66, "row_to_add": 66, "ignore_index": 66, "879": 66, "coars": 66, "genr": 66, "data_filt": [66, 104], "notnul": 66, "812": 66, "excluded_categori": 66, "isin": [66, 74], "declar": 66, "text_transform": [66, 101], "vect": 66, "tfidf": 66, "text_mail": 66, "3f": [66, 76, 100], "enron_email_classif": 66, "madz2000": 68, "glove": 68, "99": 68, "87": 68, "lstm": 68, "tf_cpp_min_log_level": 68, "tupl": [68, 73, 77, 81], "adam": [68, 103], "sequenti": [68, 101, 103], "pad_sequ": 68, "layer": [68, 103, 104], "dens": [68, 103, 104], "giskard_cli": [68, 69, 75], "max_token": [68, 103], "20000": 68, "max_sequence_length": [68, 75], "n_row": 68, "2000": [68, 75], "isfak": 68, "fake_real_news_dataset": 68, "fetch_dataset": [68, 70, 73], "files_to_fetch": [68, 70], "glove_100d": 68, "file_nam": [68, 70, 73], "real_df": 68, "fake_df": 68, "full_df": 68, "news_df": 68, "nrow": [68, 69, 70, 75, 77], "titl": [68, 72, 79], "fake_and_real_new": 68, "prepare_text": 68, "merg": [68, 70, 73], "_word": 68, "x_train_prepar": 68, "x_test_prepar": 68, "init_token": 68, "outer": 68, "scope": [68, 80, 87], "num_word": 68, "fit_on_text": 68, "tokenization_closur": 68, "texts_to_sequ": 68, "maxlen": 68, "parse_lin": 68, "arr": 68, "66": 68, "asarrai": 68, "dtype": [68, 70, 76, 104], "init_embeddings_matrix": 68, "embeddings_dict": 68, "num_embed": 68, "min": [68, 86], "word_index": 68, "stacked_embed": 68, "stack": 68, "embeddings_mean": 68, "embeddings_std": 68, "embeddings_dimens": 68, "std": 68, "embeddings_matrix": 68, "normal": [68, 86], "get_embeddings_matrix": 68, "rstrip": 68, "rsplit": 68, "embedding_vector": 68, "embed_matrix": 68, "init_model": 68, "tf": [68, 103, 104], "trainabl": [68, 104], "output_dim": [68, 100], "input_length": 68, "return_sequ": 68, "recurrent_dropout": 68, "relu": [68, 100], "sigmoid": 68, "compil": [68, 77, 103], "loss": [68, 76, 78, 100, 103], "binary_crossentropi": 68, "n_epoch": [68, 100], "validation_data": 68, "4f": 68, "fake_real_news_classif": 68, "y_test_pred_wrapp": 68, "scanning_result": 68, "jiashenliu": 69, "gradientboostingregressor": 69, "mean_absolute_error": 69, "feature_column_nam": [69, 76], "full_review": 69, "reviewer_scor": 69, "hotel_text_regression_dataset": 69, "hotel_review": 69, "positive_review": 69, "negative_review": 69, "train_x": 69, "test_x": 69, "train_i": 69, "test_i": 69, "adapt_vectorizer_input": [69, 74], "thu": [69, 74], "ravel": [69, 74], "dimens": [69, 74, 86], "vectorizer_adapt": 69, "max_featur": [69, 103], "10000": [69, 103], "regressor": [69, 71, 73], "n_estim": [69, 71, 73], "mae": [69, 85], "hotel_text_regress": 69, "pred_test_wrap": 69, "r2": [69, 71, 73], "jtrotman": 70, "lgb": 70, "lgbm": 70, "fault": [70, 71], "dev": [70, 71, 101, 104], "union_categor": 70, "target_column": [70, 73, 75, 78], "istest": 70, "idx_label": 70, "transactionid": 70, "fraud_detection_classification_dataset": 70, "train_transact": 70, "train_ident": 70, "test_transact": 70, "test_ident": 70, "transact": 70, "data_types_transact": 70, "isfraud": 70, "transactiondt": 70, "transactionamt": 70, "productcd": 70, "card1": 70, "card2": 70, "card3": 70, "card4": 70, "card5": 70, "card6": 70, "addr1": 70, "addr2": 70, "dist1": 70, "dist2": 70, "p_emaildomain": 70, "r_emaildomain": 70, "c_col": 70, "c": 70, "d_col": 70, "m_col": 70, "v_col": 70, "340": 70, "datatyp": 70, "data_types_id": 70, "devicetyp": 70, "deviceinfo": 70, "id_col": 70, "id_": 70, "02d": 70, "id_cat": 70, "id_12": 70, "id_15": 70, "id_16": 70, "id_23": 70, "id_27": 70, "id_28": 70, "id_29": 70, "id_30": 70, "id_31": 70, "id_33": 70, "id_34": 70, "id_35": 70, "id_36": 70, "id_37": 70, "id_38": 70, "f_name": 70, "f_type": 70, "read_set": 70, "_type": 70, "_transact": 70, "index_col": 70, "_ident": 70, "read_dataset": 70, "train_set": 70, "test_set": 70, "preprocess_dataset": 70, "former": 70, "pop": 70, "n_train": 70, "hasattr": 70, "sort_categori": 70, "timeindai": 70, "86400": 70, "cent": 70, "useless": [70, 73, 74], "united_dataset": 70, "fraud_detection_adversarial_dataset": 70, "estimator_param": [70, 73], "num_leav": 70, "min_data_in_leaf": 70, "feature_fract": 70, "bagging_fract": 70, "bagging_freq": 70, "max_cat_to_onehot": 70, "n_job": [70, 73], "subsample_for_bin": 70, "train_test_data_classifi": 70, "medic": [71, 90, 102, 107], "social": 71, "teertha": 71, "ushealthinsurancedataset": 71, "absl": 71, "lgbmregressor": [71, 73], "r2_score": [71, 73], "set_verbos": 71, "filterwarn": 71, "numerical_col": 71, "bmi": 71, "children": 71, "categorical_col": 71, "smoker": 71, "region": 71, "insurance_prediction_dataset": 71, "us_health_insurance_dataset": 71, "train_r2": 71, "rmse": [71, 79, 85], "alpha": [72, 96, 110], "unstabl": [72, 96, 110], "interest": [72, 96, 110], "df_filter": 72, "critis": 72, "author": 72, "realli": [72, 79], "chat_model": 72, "chatopenai": 72, "anoth": 72, "usr": 72, "dist": 72, "dataset_valid": 72, "userwarn": 72, "v4": 72, "migrat": 72, "old": 72, "interrupt": 72, "resum": 72, "move_cach": 72, "system": 72, "scanner": 72, "logger": 72, "break": 72, "textperturbationdetector": 72, "ethicalbiasdetector": 72, "llmtoxicitydetector": 72, "harmfulnessdetector": 72, "genderstereotypedetector": 72, "minoritystereotypedetector": 72, "lowercas": [72, 87], "output_sensit": [72, 84], "rate": [72, 77, 79, 86, 87], "900": 72, "800": 72, "700": 72, "vice": 72, "versa": 72, "took": 72, "608640": 72, "600": 72, "00": 72, "355065": 72, "38": 72, "705518": 72, "282172": 72, "715909": 72, "396810": 72, "095739": 72, "set_opt": 72, "max_colwidth": 72, "999": 72, "demand": 73, "dai": 73, "ragnar123": 73, "fst": 73, "id_column": 73, "date_column": 73, "split_dat": 73, "2016": 73, "03": 73, "m5_sales_prediction_dataset": 73, "data_fil": 73, "calendar": 73, "sales_train_valid": 73, "sell_pric": 73, "datafil": 73, "n_series_us": 73, "calendar_df": 73, "prices_df": 73, "sales_df": 73, "melt": 73, "columnar": 73, "id_var": 73, "item_id": 73, "dept_id": 73, "cat_id": 73, "store_id": 73, "state_id": 73, "var_nam": 73, "value_nam": 73, "weekdai": 73, "wdai": 73, "left": 73, "left_on": 73, "right_on": 73, "sell": 73, "wm_yr_wk": 73, "nan": [73, 78], "nan_featur": 73, "event_name_1": 73, "event_type_1": 73, "event_name_2": 73, "event_type_2": 73, "fillna": 73, "to_encod": 73, "labelencod": 73, "fit_transform": 73, "191300": 73, "drop_after_split": 73, "to_drop": 73, "train_val_split": 73, "x_val": [73, 100], "y_val": [73, 100], "timeseri": 73, "select_dtyp": 73, "300": 73, "train_scor": [73, 75], "y_val_pr": 73, "val_scor": 73, "leekahwin": 74, "gram": 74, "forest": 74, "snowbal": 74, "snowballstemm": 74, "randomforestclassifi": [74, 78], "labels_list": 74, "neurosurgeri": 74, "ent": 74, "otolaryngologi": 74, "discharg": 74, "medicin": 74, "gastroenterologi": 74, "neurologi": 74, "soap": 74, "chart": 74, "obstetr": 74, "gynecologi": 74, "urologi": 74, "medical_specialti": 74, "8888": 74, "medical_transcript_classification_dataset": 74, "mtsampl": 74, "unnam": 74, "sample_nam": 74, "trim": 74, "notna": 74, "transcript_df": 74, "medical_transcript_dataset": 74, "preprocess_text": [74, 75, 76], "stackoverflow": 74, "50665240": 74, "inconsist": [74, 79], "3185": 74, "text_preprocessor": [74, 77], "vectorizer_input_adapt": 74, "ngram_rang": 74, "medical_transcript_classif": 74, "atulanandjha": 75, "extens": [75, 86], "starter": 75, "co": [75, 94], "setfit": 75, "sst2": [75, 101], "jsonl": 75, "ppb": 75, "text_column": 75, "pretrained_weights_nam": [75, 77], "movie_review_sentiment_classification_dataset": 75, "label_text": 75, "embedd": 75, "distilbertmodel": 75, "get_max_sequence_length": 75, "longest": 75, "add_special_token": [75, 77], "tokenize_docu": 75, "tokens_matrix": 75, "tokens_row": 75, "get_documents_embed": 75, "eval": [75, 76, 77, 100], "no_grad": [75, 76, 77, 98, 100], "tokens_represent": 75, "documents_embed": 75, "test_scor": 75, "y_test_pred_wrap": 75, "wrapped_test_scor": 75, "sport": [76, 98], "sci": [76, 98], "tech": 76, "torch": [76, 77, 98, 100, 101], "torchtext": [76, 99, 101], "ag_new": [76, 98], "get_token": [76, 98], "random_split": [76, 100], "vocab": [76, 98, 101], "build_vocab_from_iter": [76, 98], "to_map_style_dataset": [76, 98], "target_map": 76, "loaders_batch_s": 76, "train_data": 76, "label_id": 76, "basic_english": [76, 98], "vocabulari": 76, "special": [76, 98], "unk": [76, 98], "set_default_index": [76, 98], "raw_text": 76, "preprocess_label": 76, "raw_label": 76, "collate_fn": 76, "label_list": 76, "text_list": 76, "_label": 76, "_text": 76, "processed_text": 76, "cumsum": 76, "test_dataset": [76, 98, 103], "divid": [76, 86], "train_split": 76, "valid_split": 76, "95": 76, "05": [76, 82, 84], "loader": 76, "train_dataload": 76, "shuffl": 76, "valid_dataload": 76, "test_dataload": 76, "textclassificationmodel": [76, 98], "vocab_s": [76, 98], "embed_dim": [76, 98], "super": [76, 98, 100], "embeddingbag": [76, 98], "fc": [76, 98], "init_weight": [76, 98], "init_rang": 76, "uniform_": [76, 98], "zero_": [76, 98], "criterion": 76, "crossentropyloss": 76, "lr": [76, 100], "schedul": 76, "lr_schedul": 76, "steplr": 76, "gamma": 76, "train_epoch": 76, "total_count": 76, "zero_grad": [76, 100], "predicted_label": [76, 79], "backward": [76, 100], "clip_grad_norm_": 76, "sum": [76, 98], "validation_epoch": 76, "validation_accuraci": 76, "total_accuraci": 76, "start_tim": 76, "accu_v": 76, "65": 76, "end": [76, 94], "infer_predict": [76, 77], "_model": [76, 77], "_dataload": [76, 77], "pred": 76, "concaten": [76, 77], "placehold": 76, "insert": 76, "zero": 76, "data_iter": 76, "itertupl": 76, "bert": 77, "dataclass": [77, 81], "dataload": [77, 100], "tensordataset": [77, 100], "max_num_row": 77, "tripadvisor_reviews_dataset": 77, "data_file_nam": 77, "tripadvisor_hotel_review": 77, "create_label": 77, "textclean": 77, "clean_pattern": 77, "z\u011f\u00fc\u015fi\u0307\u00f6\u00e7ia": 77, "z\u011f\u00fc\u0131": 77, "\u015f\u00f6\u00e70": 77, "constructor": 77, "__call__": 77, "isinst": 77, "remove_emoji": 77, "emoji": 77, "u0001f600": 77, "u0001f64f": 77, "u0001f300": 77, "u0001f5ff": 77, "u0001f680": 77, "u0001f6ff": 77, "u0001f1e0": 77, "u0001f1ff": 77, "u00002500": 77, "u00002bef": 77, "u00002702": 77, "u000027b0": 77, "u000024c2": 77, "u0001f251": 77, "u0001f926": 77, "u0001f937": 77, "u00010000": 77, "u0010ffff": 77, "u2640": 77, "u2642": 77, "u2600": 77, "u2b55": 77, "u200d": 77, "u23cf": 77, "u23e9": 77, "u231a": 77, "ufe0f": 77, "u3030": 77, "unicod": 77, "escap": 77, "text_clean": 77, "load_dataset": 77, "trip_advisor_reviews_senti": 77, "manual_se": [77, 100], "cuda": [77, 98, 100, 101], "manual_seed_al": 77, "distil": 77, "is_avail": [77, 98, 100, 101], "seq_length": 77, "150": 77, "return_attention_mask": 77, "pad_to_max_length": 77, "num_label": [77, 94], "output_attent": 77, "output_hidden_st": 77, "create_dataload": 77, "_create_dataset": 77, "encoded_data": 77, "batch_encode_plu": 77, "giskardmodelcustomwrapp": 77, "overwritten": 77, "cleaned_df": 77, "data_load": 77, "predicted_prob": 77, "trip_advisor_sentiment_classifi": 77, "50k": 78, "jieyima": 78, "wenruliu": 78, "adult": 78, "censu": 78, "annual": 78, "salari": [78, 86], "drop_featur": 78, "educ": 78, "nativ": 78, "occup": [78, 86], "marit": 78, "statu": 78, "categorical_featur": 78, "workclass": 78, "race": 78, "numerical_featur": 78, "fnlwgt": 78, "capit": 78, "per": 78, "week": 78, "wage_classification_dataset": 78, "income_df": 78, "salary_data": 78, "salary_cl": 78, "examplepush": 79, "overconfidencepush": 79, "borderlinepush": 79, "borderlin": 79, "contributionpush": 79, "perturbationpush": 79, "grpc": 79, "to_grpc": 79, "push_titl": 79, "pushkind": 79, "enum": 79, "kind": 79, "saved_exampl": 79, "training_label": 79, "training_label_proba": 79, "featurepush": 79, "dataset_row": 79, "recommand": 79, "were": [79, 86], "wrong": 79, "trigger": 79, "quantifi": [79, 86], "largest": 79, "larger": 79, "typic": 79, "unsur": 79, "smaller": 79, "bound": 79, "correct_predict": 79, "shaplei": 79, "z": 79, "wors": 79, "transformation_info": 79, "transformationinfo": 79, "subtract": 79, "absolut": [79, 85], "predefin": 79, "push_test_catalog": 79, "test_diff_rmse_push": 79, "direct": [79, 85, 86], "decreas": [79, 84], "giskardtestmethod": [79, 82, 84, 85, 86], "problemat": 79, "diff": 79, "test_diff_f1_push": 79, "if_underconfidence_rate_decreas": 79, "if_overconfidence_rate_decreas": 79, "correct_exampl": 79, "increase_prob": 79, "one_sample_overconfidence_test": 79, "one_sample_underconfidence_test": 79, "test_metamorphic_invariance_with_mad": 79, "value_ad": 79, "invari": [79, 84, 85], "approxim": 79, "_fn": [80, 87], "regist": [80, 87], "No": [80, 87], "wise": [80, 87], "registri": [80, 87], "func": [80, 87], "is_initi": 80, "retriev": [80, 87], "max_word": 80, "offens": 80, "iron": 80, "lower_bound": 80, "upper_bound": 80, "fall": [80, 86], "togeth": 81, "integ": 81, "testparti": 81, "suite_run_arg": 81, "whenev": 81, "overridden": 81, "testsuiteresult": 81, "test_fn": 81, "giskardtest": 81, "test_nam": 81, "ptype": 81, "input_param": 81, "datasetinput": 81, "dataset_input": 81, "modelinput": 81, "model_input": 81, "test_result": 81, "testmessag": 81, "factori": 81, "prop": 81, "missing_count": 81, "missing_perc": 81, "unexpected_count": 81, "unexpected_perc": 81, "unexpected_percent_tot": 81, "unexpected_percent_nonmiss": 81, "partial_unexpected_index_list": 81, "partialunexpectedcount": 81, "unexpected_index_list": 81, "number_of_perturbed_row": 81, "actual_slices_s": [81, 82, 84, 85, 86], "reference_slices_s": [81, 82, 85], "output_df": 81, "byte": 81, "output_df_id": 81, "is_error": 81, "max_categori": 82, "psi_contribution_perc": 82, "psi": 82, "total_psi": 82, "chi_square_contribution_perc": 82, "p": [82, 84, 86], "chi": [82, 86], "squar": [82, 85, 86], "pvalu": 82, "reject": [82, 84], "earth": 82, "mover": 82, "distanc": 82, "chi_squar": 82, "describ": 82, "subpopul": 82, "output_sens": 84, "unchang": 84, "percentag": [84, 85, 86], "credit": [84, 86, 89, 102, 107], "wage": [84, 86, 89, 102, 107], "peopl": [84, 86], "critical_quantil": 84, "studi": 84, "quantil": 84, "hypothesi": [84, 86], "term": 84, "window_s": 84, "equival": [84, 86], "wilcoxon": 84, "rank": 84, "debug_percent_row": 85, "top": 85, "incorrectli": [85, 86], "passed_ratio": 86, "min_rang": 86, "max_rang": 86, "sale": [86, 89, 97, 109], "citi": 86, "particular": 86, "proport": 86, "protected_slicing_funct": 86, "unprotected_slicing_funct": 86, "positive_outcom": 86, "min_threshold": 86, "max_threshold": 86, "unprotect": 86, "protect": 86, "agnost": 86, "biaa": 86, "di": 86, "percent": 86, "advers": 86, "hire": 86, "xyz": 86, "men": 86, "predominantli": 86, "judg": 86, "might": [86, 94], "clearli": 86, "arbitrarili": 86, "therefor": 86, "upon": 86, "prove": 86, "legitim": 86, "reason": 86, "women": 86, "theil_u": 86, "nomin": 86, "altern": 86, "suggest": 86, "cramer_v": 86, "mutual_inform": 86, "cramer": 86, "strength": 86, "natur": 86, "independ": 86, "conting": 86, "perfect": 86, "particularli": 86, "mathemat": 86, "sqrt": 86, "frac": 86, "cdot": 86, "degre": 86, "concept": 86, "entropi": 86, "reduct": [86, 100], "joint": 86, "stronger": 86, "weaker": 86, "sum_": 86, "mass": 86, "margin": 86, "theil": 86, "inequ": 86, "commonli": 86, "condit": 86, "substitut": 87, "proxim": 87, "symbol": 87, "drug": [89, 102, 107], "fraud": [89, 97, 107], "breast": [89, 106, 107], "cancer": [89, 106, 107], "insur": [89, 97, 109], "charg": [89, 97, 109], "churn": [89, 97, 107], "tripadvisor": [90, 93, 107], "transcript": [90, 102, 107], "email": [90, 102, 107], "newspap": [90, 96, 99, 107, 110], "airlin": [90, 93, 107], "tweet": [90, 93, 107], "xgboost": [91, 95], "auto": 93, "sequence_classif": 94, "masterpiec": 94, "faith": 94, "book": 94, "enthral": 94, "favorit": 94, "tokenizer_distilbert_base_uncas": 94, "stevhliu": 94, "my_awesome_model": 94, "id2label": 94, "label2id": 94, "model_distilbert_base_uncas": 94, "my_preproccessing_funct": 94, "train_it": 98, "test_it": 98, "ag_news_label": 98, "tec": 98, "yield_token": 98, "data_it": 98, "text_pipelin": 98, "exp": 98, "initrang": 98, "emsiz": 98, "mypytorchmodel": 98, "np_output": 98, "xlm": 99, "rand": 100, "true_a": 100, "true_b": 100, "randn": 100, "feedforwardneuralnetmodel": 100, "input_dim": [100, 101], "hidden_dim": 100, "fc1": 100, "readout": 100, "fc2": 100, "transpos": 100, "make_train_step": 100, "loss_fn": 100, "train_step": 100, "yhat": 100, "x_tensor": 100, "from_numpi": 100, "y_tensor": 100, "train_load": 100, "val_load": 100, "mseloss": 100, "1e": 100, "training_loss": 100, "validation_loss": 100, "batch_loss": 100, "x_batch": 100, "y_batch": 100, "val_loss": 100, "my_linear_model": 100, "load_state_dict_from_url": 101, "torchdata": 101, "datapip": 101, "iterablewrapp": 101, "robertaclassificationhead": 101, "xlmr_base_encod": 101, "dev_datapip": 101, "dev_datafram": 101, "torch_softmax": 101, "padding_idx": 101, "bos_idx": 101, "eos_idx": 101, "max_seq_len": 101, "xlmr_vocab_path": 101, "xlmr": 101, "xlmr_spm_model_path": 101, "sentencepiec": 101, "bpe": 101, "sentencepiecetoken": 101, "vocabtransform": 101, "addtoken": 101, "768": 101, "classifier_head": 101, "get_model": 101, "load_weight": 101, "apply_transform": 101, "pandas_to_torch": 101, "test_datapipe_transform": 101, "data_list": 101, "to_tensor": 101, "padding_valu": 101, "my_softmax": 101, "hotel": [102, 109], "kera": [103, 104], "get_fil": 103, "aclimdb": 103, "amaa": 103, "aclimdb_v1": 103, "untar": 103, "raw_test_d": 103, "text_dataset_from_directori": 103, "text_batch": 103, "label_batch": 103, "782": 103, "from_dict": 103, "sequence_length": 103, "vectorize_lay": 103, "textvector": 103, "lower_and_strip_punctu": 103, "output_mod": 103, "output_sequence_length": 103, "raw_train_d": 103, "validation_split": 103, "train_text": 103, "embedding_dim": 103, "globalaveragepooling1d": 103, "sparsecategoricalcrossentropi": 103, "from_logit": 103, "export_model": 103, "frompandastotfmodelinput": 103, "tensorflow_text_classif": 103, "test_text_classification_tfhub": 104, "classification_labels_map": 104, "zip": 104, "importorskip": 104, "tensorflow_text": 104, "tfhub_handle_preprocess": 104, "tfhub": 104, "bert_en_uncased_preprocess": 104, "keraslay": 104, "tfhub_handle_encod": 104, "small_bert": 104, "bert_en_uncased_l": 104, "2_h": 104, "128_a": 104, "build_classifier_model": 104, "text_input": 104, "preprocessing_lay": 104, "encoder_input": 104, "bert_encod": 104, "net": 104, "pooled_output": 104, "tensorflow_text_classification_tfhub": 104, "tensorflow_hub": 105}, "objects": {"giskard": [[48, 0, 1, "", "Dataset"], [50, 0, 1, "", "Model"], [81, 0, 1, "", "Suite"], [50, 4, 0, "-", "models"], [79, 4, 0, "-", "push"], [80, 3, 1, "", "slicing_function"], [87, 3, 1, "", "transformation_function"], [7, 6, 1, "cmdoption-giskard-version", "--version"]], "giskard.Dataset": [[48, 1, 1, "", "__init__"], [48, 1, 1, "", "_infer_column_types"], [48, 1, 1, "", "add_slicing_function"], [48, 1, 1, "", "add_transformation_function"], [48, 2, 1, "", "cat_columns"], [48, 2, 1, "", "column_types"], [48, 2, 1, "", "data_processor"], [48, 2, 1, "", "df"], [48, 1, 1, "", "download"], [48, 2, 1, "", "name"], [48, 1, 1, "", "process"], [48, 1, 1, "", "slice"], [48, 2, 1, "", "target"], [48, 1, 1, "", "transform"], [48, 1, 1, "", "upload"]], "giskard.Model": [[50, 1, 1, "", "__new__"], [50, 1, 1, "", "download"], [50, 1, 1, "", "is_binary_classification"], [50, 1, 1, "", "is_classification"], [50, 1, 1, "", "is_regression"], [50, 1, 1, "", "is_text_generation"], [50, 1, 1, "", "load_model"], [50, 1, 1, "", "model_predict"], [50, 1, 1, "", "predict"], [50, 1, 1, "", "save_model"], [50, 1, 1, "", "upload"]], "giskard.Suite": [[81, 1, 1, "", "__init__"], [81, 1, 1, "", "add_test"], [81, 2, 1, "", "id"], [81, 2, 1, "", "name"], [81, 1, 1, "", "run"], [81, 2, 1, "", "tests"], [81, 1, 1, "", "upload"]], "giskard.core.suite": [[81, 0, 1, "", "DatasetInput"], [81, 0, 1, "", "ModelInput"], [81, 0, 1, "", "SuiteInput"], [81, 0, 1, "", "TestSuiteResult"]], "giskard.core.suite.DatasetInput": [[81, 2, 1, "", "name"], [81, 2, 1, "", "target"]], "giskard.core.suite.ModelInput": [[81, 2, 1, "", "model_type"], [81, 2, 1, "", "name"]], "giskard.core.suite.SuiteInput": [[81, 2, 1, "", "name"], [81, 2, 1, "", "type"]], "giskard.ml_worker.testing.functions.slicing": [[80, 3, 1, "", "emotion_sentiment_analysis"], [80, 3, 1, "", "hate_sentiment_analysis"], [80, 3, 1, "", "irony_sentiment_analysis"], [80, 3, 1, "", "keyword_lookup_slicing_fn"], [80, 3, 1, "", "offensive_sentiment_analysis"], [80, 3, 1, "", "outlier_filter"], [80, 3, 1, "", "positive_sentiment_analysis"], [80, 3, 1, "", "short_comment_slicing_fn"]], "giskard.ml_worker.testing.functions.transformation": [[87, 3, 1, "", "change_writing_style"], [87, 3, 1, "", "keyboard_typo_transformation"], [87, 3, 1, "", "lowercase_transformation"], [87, 3, 1, "", "strip_punctuation"], [87, 3, 1, "", "uppercase_transformation"]], "giskard.ml_worker.testing.registry.slicing_function": [[80, 0, 1, "", "SlicingFunction"]], "giskard.ml_worker.testing.registry.slicing_function.SlicingFunction": [[80, 2, 1, "", "cell_level"], [80, 1, 1, "", "download"], [80, 1, 1, "", "execute"], [80, 2, 1, "", "func"], [80, 2, 1, "", "is_initialized"], [80, 2, 1, "", "params"], [80, 2, 1, "", "row_level"], [80, 1, 1, "", "upload"]], "giskard.ml_worker.testing.registry.transformation_function": [[87, 0, 1, "", "TransformationFunction"]], "giskard.ml_worker.testing.registry.transformation_function.TransformationFunction": [[87, 1, 1, "", "download"], [87, 1, 1, "", "execute"], [87, 1, 1, "", "upload"]], "giskard.ml_worker.testing.test_result": [[81, 0, 1, "", "TestResult"]], "giskard.models": [[51, 4, 0, "-", "base"], [52, 4, 0, "-", "catboost"], [53, 4, 0, "-", "function"], [54, 4, 0, "-", "huggingface"], [55, 4, 0, "-", "langchain"], [56, 4, 0, "-", "pytorch"], [57, 4, 0, "-", "sklearn"], [58, 4, 0, "-", "tensorflow"]], "giskard.models.base": [[51, 0, 1, "", "BaseModel"], [51, 0, 1, "", "CloudpickleSerializableModel"], [51, 0, 1, "", "MLFlowSerializableModel"], [50, 0, 1, "", "ModelPredictionResults"], [51, 0, 1, "", "WrapperModel"]], "giskard.models.base.BaseModel": [[51, 2, 1, "", "classification_labels"], [51, 2, 1, "", "classification_threshold"], [51, 1, 1, "", "download"], [51, 2, 1, "", "feature_names"], [51, 5, 1, "", "is_binary_classification"], [51, 5, 1, "", "is_classification"], [51, 5, 1, "", "is_regression"], [51, 5, 1, "", "is_text_generation"], [51, 2, 1, "", "model"], [51, 2, 1, "", "model_type"], [51, 2, 1, "", "name"], [51, 1, 1, "", "predict"], [51, 1, 1, "", "predict_df"], [51, 1, 1, "", "prepare_dataframe"], [51, 1, 1, "", "upload"]], "giskard.models.base.CloudpickleSerializableModel": [[51, 1, 1, "", "load_model"], [51, 1, 1, "", "save_model"]], "giskard.models.base.ModelPredictionResults": [[50, 2, 1, "", "all_predictions"], [50, 2, 1, "", "prediction"], [50, 2, 1, "", "probabilities"], [50, 2, 1, "", "raw"], [50, 2, 1, "", "raw_prediction"]], "giskard.models.base.WrapperModel": [[51, 1, 1, "", "load_model"], [51, 1, 1, "", "model_predict"], [51, 1, 1, "", "predict_df"], [51, 1, 1, "", "save_model"]], "giskard.models.catboost": [[52, 0, 1, "", "CatboostModel"]], "giskard.models.catboost.CatboostModel": [[52, 1, 1, "", "load_model"], [52, 1, 1, "", "save_model"]], "giskard.models.function": [[53, 0, 1, "", "PredictionFunctionModel"]], "giskard.models.function.PredictionFunctionModel": [[53, 1, 1, "", "model_predict"]], "giskard.models.huggingface": [[54, 0, 1, "", "HuggingFaceModel"]], "giskard.models.huggingface.HuggingFaceModel": [[54, 2, 1, "", "batch_size"], [54, 1, 1, "", "load_model"], [54, 1, 1, "", "model_predict"], [54, 1, 1, "", "save_model"]], "giskard.models.langchain": [[55, 0, 1, "", "LangchainModel"]], "giskard.models.langchain.LangchainModel": [[55, 1, 1, "", "load_model"], [55, 1, 1, "", "model_predict"], [55, 1, 1, "", "save_model"]], "giskard.models.pytorch": [[56, 0, 1, "", "PyTorchModel"]], "giskard.models.pytorch.PyTorchModel": [[56, 1, 1, "", "load_model"], [56, 1, 1, "", "model_predict"], [56, 1, 1, "", "save_model"]], "giskard.models.sklearn": [[57, 0, 1, "", "SKLearnModel"]], "giskard.models.sklearn.SKLearnModel": [[57, 1, 1, "", "load_model"], [57, 1, 1, "", "model_predict"], [57, 1, 1, "", "save_model"]], "giskard.models.tensorflow": [[58, 0, 1, "", "TensorFlowModel"]], "giskard.models.tensorflow.TensorFlowModel": [[58, 1, 1, "", "load_model"], [58, 1, 1, "", "model_predict"], [58, 1, 1, "", "save_model"]], "giskard.push": [[79, 0, 1, "", "BorderlinePush"], [79, 0, 1, "", "ContributionPush"], [79, 0, 1, "", "ExamplePush"], [79, 0, 1, "", "FeaturePush"], [79, 0, 1, "", "OverconfidencePush"], [79, 0, 1, "", "PerturbationPush"], [79, 0, 1, "", "Push"]], "giskard.push.Push": [[79, 2, 1, "", "details"], [79, 2, 1, "", "push_title"], [79, 2, 1, "", "pushkind"], [79, 2, 1, "", "tests"]], "giskard.push.push_test_catalog.catalog": [[79, 3, 1, "", "correct_example"], [79, 3, 1, "", "if_overconfidence_rate_decrease"], [79, 3, 1, "", "if_underconfidence_rate_decrease"], [79, 3, 1, "", "increase_probability"], [79, 3, 1, "", "one_sample_overconfidence_test"], [79, 3, 1, "", "one_sample_underconfidence_test"], [79, 3, 1, "", "test_diff_f1_push"], [79, 3, 1, "", "test_diff_rmse_push"], [79, 3, 1, "", "test_metamorphic_invariance_with_mad"]], "giskard.testing": [[85, 3, 1, "", "test_accuracy"], [85, 3, 1, "", "test_auc"], [86, 3, 1, "", "test_cramer_v"], [85, 3, 1, "", "test_diff_accuracy"], [85, 3, 1, "", "test_diff_f1"], [85, 3, 1, "", "test_diff_precision"], [85, 3, 1, "", "test_diff_recall"], [85, 3, 1, "", "test_diff_rmse"], [86, 3, 1, "", "test_disparate_impact"], [82, 3, 1, "", "test_drift_chi_square"], [82, 3, 1, "", "test_drift_earth_movers_distance"], [82, 3, 1, "", "test_drift_ks"], [82, 3, 1, "", "test_drift_prediction_chi_square"], [82, 3, 1, "", "test_drift_prediction_earth_movers_distance"], [82, 3, 1, "", "test_drift_prediction_ks"], [82, 3, 1, "", "test_drift_prediction_psi"], [82, 3, 1, "", "test_drift_psi"], [85, 3, 1, "", "test_f1"], [85, 3, 1, "", "test_mae"], [84, 3, 1, "", "test_metamorphic_decreasing"], [84, 3, 1, "", "test_metamorphic_decreasing_t_test"], [84, 3, 1, "", "test_metamorphic_decreasing_wilcoxon"], [84, 3, 1, "", "test_metamorphic_increasing"], [84, 3, 1, "", "test_metamorphic_increasing_t_test"], [84, 3, 1, "", "test_metamorphic_increasing_wilcoxon"], [84, 3, 1, "", "test_metamorphic_invariance"], [84, 3, 1, "", "test_metamorphic_invariance_t_test"], [84, 3, 1, "", "test_metamorphic_invariance_wilcoxon"], [86, 3, 1, "", "test_mutual_information"], [86, 3, 1, "", "test_nominal_association"], [86, 3, 1, "", "test_output_in_range"], [85, 3, 1, "", "test_precision"], [85, 3, 1, "", "test_r2"], [85, 3, 1, "", "test_recall"], [86, 3, 1, "", "test_right_label"], [85, 3, 1, "", "test_rmse"], [86, 3, 1, "", "test_theil_u"]], "giskard-server-clean": [[7, 6, 1, "cmdoption-giskard-server-clean-data", "--data"], [7, 6, 1, "cmdoption-giskard-server-clean-v", "--verbose"], [7, 6, 1, "cmdoption-giskard-server-clean-v", "-v"]], "giskard-server-diagnose": [[7, 6, 1, "cmdoption-giskard-server-diagnose-o", "--out_path"], [7, 6, 1, "cmdoption-giskard-server-diagnose-v", "--verbose"], [7, 6, 1, "cmdoption-giskard-server-diagnose-o", "-o"], [7, 6, 1, "cmdoption-giskard-server-diagnose-v", "-v"]], "giskard-server-expose": [[7, 6, 1, "cmdoption-giskard-server-expose-token", "--token"], [7, 6, 1, "cmdoption-giskard-server-expose-v", "--verbose"], [7, 6, 1, "cmdoption-giskard-server-expose-v", "-v"]], "giskard-server-logs": [[7, 6, 1, "cmdoption-giskard-server-logs-f", "--follow"], [7, 6, 1, "cmdoption-giskard-server-logs-l", "--lines"], [7, 6, 1, "cmdoption-giskard-server-logs-v", "--verbose"], [7, 6, 1, "cmdoption-giskard-server-logs-f", "-f"], [7, 6, 1, "cmdoption-giskard-server-logs-l", "-l"], [7, 6, 1, "cmdoption-giskard-server-logs-v", "-v"], [7, 6, 1, "cmdoption-giskard-server-logs-arg-SERVICE", "SERVICE"]], "giskard-server-restart": [[7, 6, 1, "cmdoption-giskard-server-restart-hard", "--hard"], [7, 6, 1, "cmdoption-giskard-server-restart-v", "--verbose"], [7, 6, 1, "cmdoption-giskard-server-restart-v", "-v"], [7, 6, 1, "cmdoption-giskard-server-restart-arg-SERVICE", "SERVICE"]], "giskard-server-start": [[7, 6, 1, "cmdoption-giskard-server-start-a", "--attach"], [7, 6, 1, "cmdoption-giskard-server-start-v", "--verbose"], [7, 6, 1, "cmdoption-giskard-server-start-version", "--version"], [7, 6, 1, "cmdoption-giskard-server-start-a", "-a"], [7, 6, 1, "cmdoption-giskard-server-start-v", "-v"]], "giskard-server-status": [[7, 6, 1, "cmdoption-giskard-server-status-v", "--verbose"], [7, 6, 1, "cmdoption-giskard-server-status-v", "-v"]], "giskard-server-stop": [[7, 6, 1, "cmdoption-giskard-server-stop-v", "--verbose"], [7, 6, 1, "cmdoption-giskard-server-stop-v", "-v"]], "giskard-server-upgrade": [[7, 6, 1, "cmdoption-giskard-server-upgrade-v", "--verbose"], [7, 6, 1, "cmdoption-giskard-server-upgrade-v", "-v"], [7, 6, 1, "cmdoption-giskard-server-upgrade-arg-VERSION", "VERSION"]], "giskard-worker-logs": [[7, 6, 1, "cmdoption-giskard-worker-logs-f", "--follow"], [7, 6, 1, "cmdoption-giskard-worker-logs-n", "--lines"], [7, 6, 1, "cmdoption-giskard-worker-logs-v", "--verbose"], [7, 6, 1, "cmdoption-giskard-worker-logs-f", "-f"], [7, 6, 1, "cmdoption-giskard-worker-logs-n", "-n"], [7, 6, 1, "cmdoption-giskard-worker-logs-v", "-v"]], "giskard-worker-restart": [[7, 6, 1, "cmdoption-giskard-worker-restart-k", "--api-key"], [7, 6, 1, "cmdoption-giskard-worker-restart-t", "--hf-token"], [7, 6, 1, "cmdoption-giskard-worker-restart-s", "--server"], [7, 6, 1, "cmdoption-giskard-worker-restart-u", "--url"], [7, 6, 1, "cmdoption-giskard-worker-restart-v", "--verbose"], [7, 6, 1, "cmdoption-giskard-worker-restart-k", "-k"], [7, 6, 1, "cmdoption-giskard-worker-restart-s", "-s"], [7, 6, 1, "cmdoption-giskard-worker-restart-t", "-t"], [7, 6, 1, "cmdoption-giskard-worker-restart-u", "-u"], [7, 6, 1, "cmdoption-giskard-worker-restart-v", "-v"]], "giskard-worker-start": [[7, 6, 1, "cmdoption-giskard-worker-start-d", "--daemon"], [7, 6, 1, "cmdoption-giskard-worker-start-t", "--hf-token"], [7, 6, 1, "cmdoption-giskard-worker-start-k", "--key"], [7, 6, 1, "cmdoption-giskard-worker-start-s", "--server"], [7, 6, 1, "cmdoption-giskard-worker-start-u", "--url"], [7, 6, 1, "cmdoption-giskard-worker-start-v", "--verbose"], [7, 6, 1, "cmdoption-giskard-worker-start-d", "-d"], [7, 6, 1, "cmdoption-giskard-worker-start-k", "-k"], [7, 6, 1, "cmdoption-giskard-worker-start-s", "-s"], [7, 6, 1, "cmdoption-giskard-worker-start-t", "-t"], [7, 6, 1, "cmdoption-giskard-worker-start-u", "-u"], [7, 6, 1, "cmdoption-giskard-worker-start-v", "-v"]], "giskard-worker-stop": [[7, 6, 1, "cmdoption-giskard-worker-stop-a", "--all"], [7, 6, 1, "cmdoption-giskard-worker-stop-s", "--server"], [7, 6, 1, "cmdoption-giskard-worker-stop-u", "--url"], [7, 6, 1, "cmdoption-giskard-worker-stop-v", "--verbose"], [7, 6, 1, "cmdoption-giskard-worker-stop-a", "-a"], [7, 6, 1, "cmdoption-giskard-worker-stop-s", "-s"], [7, 6, 1, "cmdoption-giskard-worker-stop-u", "-u"], [7, 6, 1, "cmdoption-giskard-worker-stop-v", "-v"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:function", "4": "py:module", "5": "py:property", "6": "std:cmdoption"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "module", "Python module"], "5": ["py", "property", "Python property"], "6": ["std", "cmdoption", "program option"]}, "titleterms": {"build": [0, 60, 63, 64, 68, 69, 70, 71, 73, 74, 75, 78], "doc": 0, "local": [0, 9], "continu": 0, "catalog": [1, 2, 4, 6, 21, 35, 36, 37, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79], "slice": [2, 35, 80], "function": [2, 6, 33, 35, 37, 53, 65, 80, 87], "classif": [3, 60, 65, 66, 68, 74, 75, 76, 77, 78, 98, 101, 107], "test": [3, 4, 5, 10, 21, 23, 24, 25, 34, 36, 47, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86], "regress": [5, 69, 100, 109], "transform": [6, 37, 87], "command": 7, "line": 7, "interfac": 7, "giskard": [7, 8, 10, 11, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 50, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "server": [7, 8, 21, 29, 33, 34, 35, 36, 38, 39, 40, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77], "clean": 7, "diagnos": 7, "expos": [7, 8], "log": [7, 43, 46], "restart": 7, "start": [7, 29, 30, 31, 32], "statu": 7, "stop": 7, "upgrad": 7, "worker": [7, 29], "setup": [8, 43, 46], "ngrok": 8, "account": 8, "1": [8, 29, 30, 31, 32, 38, 43], "sign": 8, "up": 8, "here": 8, "2": [8, 29, 30, 31, 32, 38, 43, 101], "gener": [8, 21, 34, 35, 37, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 110], "an": [8, 30, 38, 61], "api": [8, 43, 49, 61, 92], "kei": [8, 14], "3": [8, 30, 31, 32, 38], "how": [9, 22], "configur": [9, 30], "develop": 9, "environ": 9, "pre": [9, 66], "commit": 9, "hook": 9, "instal": [9, 21, 30, 31, 32, 33, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78], "troubleshoot": [9, 34, 70, 71], "fatal": 9, "python": [9, 33, 71], "error": 9, "segment": 9, "fault": 9, "when": 9, "run": [9, 29, 38], "pytest": 9, "maco": 9, "contribut": 10, "push": [10, 79], "your": [10, 21, 23, 24, 25, 27, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "repo": 10, "why": 11, "data": [12, 35, 37, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 88], "leakag": 12, "caus": [12, 13, 15, 16, 17, 18, 19, 20], "address": [12, 13, 15, 16, 17, 18, 19, 20], "issu": [12, 13, 15, 16, 17, 19, 20, 33], "uneth": 13, "behaviour": 13, "unrobust": [13, 17], "against": [13, 17], "ethic": 13, "perturb": [13, 17], "vulner": [14, 21, 34, 44, 45, 47, 60, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 77, 78], "overconfid": 15, "predict": [15, 20, 50, 53, 63, 65, 71, 73], "perform": [16, 36, 54, 85], "bia": 16, "text": [17, 44, 90, 101, 110], "spuriou": 18, "correl": 18, "stochast": 19, "underconfid": 20, "quickstart": [21, 54, 67], "scan": [21, 23, 24, 34, 35, 37, 47, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "model": [21, 23, 24, 25, 27, 30, 31, 32, 33, 34, 36, 40, 45, 47, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 94, 98, 100, 101, 103, 104], "find": [21, 60, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 77, 78], "suit": [21, 23, 24, 25, 34, 36, 47, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81], "from": [21, 35, 36, 37, 46, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 104], "custom": [21, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "load": [21, 35, 36, 37, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "object": [21, 38, 43, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78], "upload": [21, 30, 31, 32, 34, 35, 36, 38, 39, 40, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77], "faq": 22, "disabl": 22, "telemetri": 22, "execut": [23, 24, 36], "ci": [23, 24], "cd": [23, 24], "pipelin": [23, 24, 60, 71, 78], "creat": [23, 24, 31, 32, 35, 36, 37, 38, 62, 66, 68, 77], "script": [23, 24], "add": 24, "compar": 25, "us": [25, 33], "debug": 26, "provid": 27, "feedback": 27, "guid": 28, "ml": [29, 30, 31, 32, 34, 36, 40, 45, 47, 95, 108], "aw": 30, "initi": [30, 72], "ec2": 30, "instanc": [30, 31, 32], "launch": 30, "4": [30, 38], "connect": [30, 31, 32, 61], "azur": 31, "vm": [31, 32], "gcp": 32, "librari": [33, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 94, 95, 98, 100, 101, 103, 104], "onli": 33, "without": 33, "llm": [33, 44, 72], "ui": 33, "featur": [33, 47, 79], "full": 33, "requir": 33, "what": 33, "should": 33, "i": 33, "do": 33, "have": 33, "depend": [33, 74], "prerequisit": 34, "detect": [34, 44, 45, 47, 62, 70], "automat": [34, 35, 37], "base": [34, 35, 37, 51], "result": [34, 47], "identifi": 35, "own": [35, 36, 37], "ai": [35, 37, 61], "some": [35, 37], "through": [35, 37], "drift": [36, 82], "metamorph": [36, 84], "statist": [36, 86], "defin": [37, 59, 60, 63, 64, 65, 68, 69, 70, 71, 73, 74, 75, 76, 78], "tranform": 37, "save": 37, "client": 38, "new": [38, 68], "project": 38, "need": 38, "wrap": [39, 40, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 94, 98, 100, 101, 103, 104], "dataset": [39, 47, 48, 59, 60, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 94, 98, 100, 101, 103, 104], "specif": 40, "tutori": [40, 91], "integr": [42, 50], "mlflow": [43, 44, 45], "notebook": [43, 44, 45, 46, 47], "exampl": [43, 44, 45, 46, 47], "plug": 43, "paramet": 43, "option": 43, "via": 43, "fluent": 43, "mlflowclient": 43, "tabular": [45, 47, 89], "weight": 46, "bias": 46, "w": 47, "b": 47, "The": [47, 50], "shap": 47, "bar": 47, "plot": 47, "categor": 47, "scatter": 47, "numer": [47, 80], "global": 47, "import": [47, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 94, 98, 100, 101, 103, 104], "refer": 49, "class": [50, 51], "catboost": 52, "huggingfac": [54, 59, 77, 93], "optim": 54, "expect": 54, "output": 54, "langchain": [55, 72, 96], "pytorch": [56, 76, 99], "sklearn": [57, 60, 64, 65, 66, 69, 74, 75, 78], "tensorflow": [58, 68, 105], "airlin": 59, "tweet": 59, "sentiment": [59, 75, 77, 103], "analysi": [59, 103], "other": 59, "constant": [59, 60, 63, 64, 65, 68, 69, 70, 71, 73, 74, 75, 76, 78], "prepar": [59, 60, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78], "preprocess": [59, 60, 63, 64, 65, 68, 69, 70, 71, 73, 74, 75, 78], "train": [59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78], "split": [59, 60, 63, 64, 65, 68, 69, 70, 71, 73, 74, 75, 78], "torch": [59, 75], "trainer": 59, "evalu": [59, 76], "amazon": 60, "review": [60, 69, 75, 77], "estim": [60, 63, 64, 68, 69, 70, 71, 73, 74, 75, 78], "host": 61, "breast": 62, "cancer": 62, "xgboost": [62, 106], "churn": 63, "lgbm": [63, 73], "step": [63, 64, 68, 69, 74, 75], "german": 64, "credit": 64, "score": 64, "drug": 65, "addit": [65, 72], "enron": 66, "email": 66, "process": 66, "filter": [66, 72], "fake": 68, "real": 68, "kera": 68, "embed": 68, "matrix": 68, "hotel": 69, "ieee": 70, "fraud": 70, "adversari": 70, "valid": 70, "lightgbm": [70, 71, 97], "insur": 71, "charg": 71, "necessari": [71, 74], "packag": 71, "newspap": [72, 76, 98], "comment": 72, "openai": 72, "datafram": 72, "github": 72, "prompt": 72, "chain": 72, "m5": 73, "sale": 73, "medic": 74, "transcript": 74, "download": 74, "nltk": 74, "stopword": 74, "corpu": 74, "movi": 75, "distil": 75, "bert": [75, 104], "dataload": 76, "tripadvisor": 77, "wage": 78, "textual": [80, 87], "By": [88, 95, 108], "type": 88, "automodelforsequenceclassif": 94, "torchtext": 98, "linear": 100, "neural": 100, "network": 100, "sst": 101, "binari": 101, "xlm": 101, "roberta": 101, "scikit": 102, "learn": 102, "tensorflow_hub": 104, "task": 108}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.todo": 2, "sphinx": 58}, "alltitles": {"Building the docs locally (continuously)": [[0, "building-the-docs-locally-continuously"]], "Catalog": [[1, "catalog"]], "\ud83d\udd2a Slicing function catalog": [[2, "slicing-function-catalog"]], "Classification tests": [[3, "classification-tests"]], "\ud83d\udcd6 Test catalog": [[4, "test-catalog"]], "Regression tests": [[5, "regression-tests"]], "\ud83e\ude84 Transformation function catalog": [[6, "transformation-function-catalog"]], "Command-line interface": [[7, "command-line-interface"]], "giskard": [[7, "giskard"]], "server": [[7, "giskard-server"]], "clean": [[7, "giskard-server-clean"]], "diagnose": [[7, "giskard-server-diagnose"]], "expose": [[7, "giskard-server-expose"]], "logs": [[7, "giskard-server-logs"], [7, "giskard-worker-logs"]], "restart": [[7, "giskard-server-restart"], [7, "giskard-worker-restart"]], "start": [[7, "giskard-server-start"], [7, "giskard-worker-start"]], "status": [[7, "giskard-server-status"]], "stop": [[7, "giskard-server-stop"], [7, "giskard-worker-stop"]], "upgrade": [[7, "giskard-server-upgrade"]], "worker": [[7, "giskard-worker"]], "Setup a ngrok account": [[8, "setup-a-ngrok-account"]], "1. Sign up here": [[8, "sign-up-here"]], "2. Generate an API key here": [[8, "generate-an-api-key-here"]], "3. Expose the giskard server": [[8, "expose-the-giskard-server"]], "How to configure local development environment": [[9, "how-to-configure-local-development-environment"]], "Pre-commit hooks installation": [[9, "pre-commit-hooks-installation"]], "Troubleshooting": [[9, "troubleshooting"], [34, "troubleshooting"], [70, "Troubleshooting"], [71, "Troubleshooting"]], "Fatal Python error: segmentation fault when running pytest on MacOS": [[9, "fatal-python-error-segmentation-fault-when-running-pytest-on-macos"]], "\ud83e\uddd1\u200d\ud83d\udcbbContribute to Giskard": [[10, "contribute-to-giskard"]], "Push your tests in the Giskard repo": [[10, "push-your-tests-in-the-giskard-repo"]], "Why Giskard?": [[11, "why-giskard"]], "Data Leakage": [[12, "data-leakage"]], "Causes of Data Leakage": [[12, "causes-of-data-leakage"]], "Addressing the Data Leakage Issue": [[12, "addressing-the-data-leakage-issue"]], "Unethical behaviour": [[13, "unethical-behaviour"]], "Causes of Unrobustness Against Ethical Perturbations": [[13, "causes-of-unrobustness-against-ethical-perturbations"]], "Addressing the Ethical Issue": [[13, "addressing-the-ethical-issue"]], "Key vulnerabilities": [[14, "key-vulnerabilities"]], "Overconfidence": [[15, "overconfidence"]], "Causes of Overconfident Predictions": [[15, "causes-of-overconfident-predictions"]], "Addressing the Issue of Overconfident Predictions": [[15, "addressing-the-issue-of-overconfident-predictions"]], "Performance Bias": [[16, "performance-bias"]], "Causes of Performance Bias": [[16, "causes-of-performance-bias"]], "Addressing the Performance Bias Issue": [[16, "addressing-the-performance-bias-issue"]], "Unrobustness": [[17, "unrobustness"]], "Causes of Unrobustness Against Text Perturbations": [[17, "causes-of-unrobustness-against-text-perturbations"]], "Addressing the Unrobustness Issue": [[17, "addressing-the-unrobustness-issue"]], "Spurious correlation": [[18, "spurious-correlation"]], "Causes of Spurious correlation": [[18, "causes-of-spurious-correlation"]], "Addressing Spurious correlation": [[18, "addressing-spurious-correlation"]], "Stochasticity": [[19, "stochasticity"]], "Causes of Stochasticity": [[19, "causes-of-stochasticity"]], "Addressing the Stochasticity Issue": [[19, "addressing-the-stochasticity-issue"]], "Underconfidence": [[20, "underconfidence"]], "Causes of Underconfident Predictions": [[20, "causes-of-underconfident-predictions"]], "Addressing the Issue of Underconfident Predictions": [[20, "addressing-the-issue-of-underconfident-predictions"]], "Quickstart": [[21, "Quickstart"], [54, "quickstart"], [67, "Quickstart"]], "Install Giskard": [[21, "Install-Giskard"], [59, "Install-Giskard"], [60, "Install-Giskard"], [62, "Install-Giskard"], [63, "Install-Giskard"], [64, "Install-Giskard"], [65, "Install-Giskard"], [66, "Install-Giskard"], [67, "Install-Giskard"], [68, "Install-Giskard"], [69, "Install-Giskard"], [70, "Install-Giskard"], [72, "Install-Giskard"], [73, "Install-Giskard"], [74, "Install-Giskard"], [76, "Install-Giskard"], [77, "Install-Giskard"], [78, "Install-Giskard"]], "Scan your model to find vulnerabilities": [[21, "Scan-your-model-to-find-vulnerabilities"], [60, "Scan-your-model-to-find-vulnerabilities"], [62, "Scan-your-model-to-find-vulnerabilities"], [64, "Scan-your-model-to-find-vulnerabilities"], [65, "Scan-your-model-to-find-vulnerabilities"], [66, "Scan-your-model-to-find-vulnerabilities"], [67, "Scan-your-model-to-find-vulnerabilities"], [69, "Scan-your-model-to-find-vulnerabilities"], [70, "Scan-your-model-to-find-vulnerabilities"], [71, "Scan-your-model-to-find-vulnerabilities"], [72, "Scan-your-model-to-find-vulnerabilities"], [73, "Scan-your-model-to-find-vulnerabilities"], [74, "Scan-your-model-to-find-vulnerabilities"], [77, "Scan-your-model-to-find-vulnerabilities"], [78, "Scan-your-model-to-find-vulnerabilities"]], "Generate a test suite from the Scan": [[21, "Generate-a-test-suite-from-the-Scan"], [59, "Generate-a-test-suite-from-the-Scan"], [60, "Generate-a-test-suite-from-the-Scan"], [62, "Generate-a-test-suite-from-the-Scan"], [63, "Generate-a-test-suite-from-the-Scan"], [65, "Generate-a-test-suite-from-the-Scan"], [66, "Generate-a-test-suite-from-the-Scan"], [67, "Generate-a-test-suite-from-the-Scan"], [68, "Generate-a-test-suite-from-the-Scan"], [69, "Generate-a-test-suite-from-the-Scan"], [70, "Generate-a-test-suite-from-the-Scan"], [71, "Generate-a-test-suite-from-the-Scan"], [73, "Generate-a-test-suite-from-the-Scan"], [74, "Generate-a-test-suite-from-the-Scan"], [75, "Generate-a-test-suite-from-the-Scan"], [76, "Generate-a-test-suite-from-the-Scan"], [77, "Generate-a-test-suite-from-the-Scan"], [78, "Generate-a-test-suite-from-the-Scan"]], "Customize your suite by loading objects from the Giskard catalog": [[21, "Customize-your-suite-by-loading-objects-from-the-Giskard-catalog"], [59, "Customize-your-suite-by-loading-objects-from-the-Giskard-catalog"], [60, "Customize-your-suite-by-loading-objects-from-the-Giskard-catalog"], [62, "Customize-your-suite-by-loading-objects-from-the-Giskard-catalog"], [63, "Customize-your-suite-by-loading-objects-from-the-Giskard-catalog"], [64, "Customize-your-suite-by-loading-objects-from-the-Giskard-catalog"], [65, "Customize-your-suite-by-loading-objects-from-the-Giskard-catalog"], [66, "Customize-your-suite-by-loading-objects-from-the-Giskard-catalog"], [67, "Customize-your-suite-by-loading-objects-from-the-Giskard-catalog"], [68, "Customize-your-suite-by-loading-objects-from-the-Giskard-catalog"], [69, "Customize-your-suite-by-loading-objects-from-the-Giskard-catalog"], [70, "Customize-your-suite-by-loading-objects-from-the-Giskard-catalog"], [71, "Customize-your-suite-by-loading-objects-from-the-Giskard-catalog"], [73, "Customize-your-suite-by-loading-objects-from-the-Giskard-catalog"], [74, "Customize-your-suite-by-loading-objects-from-the-Giskard-catalog"], [75, "Customize-your-suite-by-loading-objects-from-the-Giskard-catalog"], [76, "Customize-your-suite-by-loading-objects-from-the-Giskard-catalog"], [77, "Customize-your-suite-by-loading-objects-from-the-Giskard-catalog"], [78, "Customize-your-suite-by-loading-objects-from-the-Giskard-catalog"]], "Upload your suite to the Giskard server": [[21, "Upload-your-suite-to-the-Giskard-server"], [59, "Upload-your-suite-to-the-Giskard-server"], [60, "Upload-your-suite-to-the-Giskard-server"], [62, "Upload-your-suite-to-the-Giskard-server"], [63, "Upload-your-suite-to-the-Giskard-server"], [64, "Upload-your-suite-to-the-Giskard-server"], [65, "Upload-your-suite-to-the-Giskard-server"], [66, "Upload-your-suite-to-the-Giskard-server"], [67, "Upload-your-suite-to-the-Giskard-server"], [68, "Upload-your-suite-to-the-Giskard-server"], [69, "Upload-your-suite-to-the-Giskard-server"], [70, "Upload-your-suite-to-the-Giskard-server"], [71, "Upload-your-suite-to-the-Giskard-server"], [73, "Upload-your-suite-to-the-Giskard-server"], [74, "Upload-your-suite-to-the-Giskard-server"], [75, "Upload-your-suite-to-the-Giskard-server"], [76, "Upload-your-suite-to-the-Giskard-server"], [77, "Upload-your-suite-to-the-Giskard-server"]], "FAQ": [[22, "faq"]], "How to disable telemetry?": [[22, "how-to-disable-telemetry"]], "\ud83d\ude80 Execute your test suite in your CI/CD pipeline": [[23, "execute-your-test-suite-in-your-ci-cd-pipeline"], [24, "\ud83d\ude80-Execute-your-test-suite-in-your-CI/CD-pipeline"]], "Create a script to scan your model": [[23, "create-a-script-to-scan-your-model"], [24, "Create-a-script-to-scan-your-model"]], "Add the script to your CI/CD pipeline": [[24, "Add-the-script-to-your-CI/CD-pipeline"]], "Compare your models using test suite": [[25, "compare-your-models-using-test-suite"]], "Debug": [[26, "debug"]], "Provide feedback of your model": [[27, "provide-feedback-of-your-model"]], "Guides": [[28, "guides"]], "\ud83c\udf10 Run the Giskard Server": [[29, "run-the-giskard-server"]], "1. Start the server": [[29, "start-the-server"]], "2. Start the ML worker": [[29, "start-the-ml-worker"]], "Installation in AWS": [[30, "installation-in-aws"]], "1. Initialize EC2 instance": [[30, "initialize-ec2-instance"]], "2. Configure your EC2 instance": [[30, "configure-your-ec2-instance"]], "3. Launch the instance and install Giskard": [[30, "launch-the-instance-and-install-giskard"]], "4. Connect to your instance and start uploading an ML model": [[30, "connect-to-your-instance-and-start-uploading-an-ml-model"]], "Installation in Azure": [[31, "installation-in-azure"]], "1. Create a Giskard VM Instance in Azure": [[31, "create-a-giskard-vm-instance-in-azure"]], "2. Install Giskard in the VM": [[31, "install-giskard-in-the-vm"]], "3. Connect to your instance and start uploading ML model": [[31, "connect-to-your-instance-and-start-uploading-ml-model"], [32, "connect-to-your-instance-and-start-uploading-ml-model"]], "Installation in GCP": [[32, "installation-in-gcp"]], "1. Create a Giskard VM Instance in GCP": [[32, "create-a-giskard-vm-instance-in-gcp"]], "2. Install Giskard in the GCP VM": [[32, "install-giskard-in-the-gcp-vm"]], "\ud83d\udce5 Install the Giskard Python Library": [[33, "install-the-giskard-python-library"]], "Install the Giskard Python Library for only Python use (no Giskard server) without LLM models": [[33, "install-the-giskard-python-library-for-only-python-use-no-giskard-server-without-llm-models"]], "Install the Giskard Python Library for Python + Giskard server (UI features) without LLM": [[33, "install-the-giskard-python-library-for-python-giskard-server-ui-features-without-llm"]], "Install the Giskard Python Library for only Python use (no Giskard server) and with LLM": [[33, "install-the-giskard-python-library-for-only-python-use-no-giskard-server-and-with-llm"]], "Install the Giskard Python Library with full functionalities (server + LLM)": [[33, "install-the-giskard-python-library-with-full-functionalities-server-llm"]], "Requirements": [[33, "requirements"]], "What should I do if I have dependency issues?": [[33, "what-should-i-do-if-i-have-dependency-issues"]], "\ud83d\udd0d Scan your ML model": [[34, "scan-your-ml-model"]], "Prerequisites": [[34, "prerequisites"]], "Scan your model to detect vulnerabilities": [[34, "scan-your-model-to-detect-vulnerabilities"]], "Automatically generate a test suite based on the scan results": [[34, "automatically-generate-a-test-suite-based-on-the-scan-results"]], "Upload your test suite to the Giskard server": [[34, "upload-your-test-suite-to-the-giskard-server"]], "\ud83d\udd2a Identify data slices": [[35, "identify-data-slices"]], "Load slicing functions from the Giskard catalog": [[35, "load-slicing-functions-from-the-giskard-catalog"]], "Create your own slicing function": [[35, "create-your-own-slicing-function"]], "AI-based slicing functions": [[35, "ai-based-slicing-functions"]], "Automatically generate some slicing functions through the scan": [[35, "automatically-generate-some-slicing-functions-through-the-scan"]], "Upload your slicing function to the Giskard server": [[35, "upload-your-slicing-function-to-the-giskard-server"]], "\ud83e\uddea Test your ML model": [[36, "test-your-ml-model"]], "Execute a Giskard test": [[36, "execute-a-giskard-test"]], "Load and execute a test from the Giskard Catalog": [[36, "load-and-execute-a-test-from-the-giskard-catalog"]], "Drift tests": [[36, "drift-tests"], [82, "drift-tests"]], "Performance tests": [[36, "performance-tests"], [85, "performance-tests"]], "Metamorphic tests": [[36, "metamorphic-tests"], [84, "metamorphic-tests"]], "Statistic tests": [[36, "statistic-tests"]], "Create and execute your own test": [[36, "create-and-execute-your-own-test"]], "Create & Execute a suite": [[36, "create-execute-a-suite"]], "Upload the suite to the Giskard server": [[36, "upload-the-suite-to-the-giskard-server"]], "\ud83d\udd04 Define data transformations": [[37, "define-data-transformations"]], "Load transformation functions from the Giskard catalog": [[37, "load-transformation-functions-from-the-giskard-catalog"]], "Create your own transformation function": [[37, "create-your-own-transformation-function"]], "AI-based tranformation function": [[37, "ai-based-tranformation-function"]], "Automatically generate some transformation functions through the scan": [[37, "automatically-generate-some-transformation-functions-through-the-scan"]], "Save your transformation function": [[37, "save-your-transformation-function"]], "\u2b06\ufe0f Upload an object to the Giskard server": [[38, "upload-an-object-to-the-giskard-server"]], "1. Run the Giskard server": [[38, "run-the-giskard-server"]], "2. Create a Giskard client": [[38, "create-a-giskard-client"]], "3. Create a new project if needed": [[38, "create-a-new-project-if-needed"]], "4. Upload your object": [[38, "upload-your-object"]], "\ud83d\udce6 Wrap your dataset": [[39, "wrap-your-dataset"]], "Upload your Dataset to the Giskard server": [[39, "upload-your-dataset-to-the-giskard-server"]], "\ud83c\udf81 Wrap your ML model": [[40, "wrap-your-ml-model"]], "Model-specific tutorials": [[40, "model-specific-tutorials"]], "Upload your model to the Giskard server": [[40, "upload-your-model-to-the-giskard-server"]], "Integrations": [[42, "integrations"], [50, "integrations"]], "MLflow": [[43, "mlflow"]], "Setup": [[43, "setup"], [46, "setup"]], "Notebook examples": [[43, "notebook-examples"], [46, "notebook-examples"]], "Plug-in parameters": [[43, "plug-in-parameters"]], "Logging giskard objects to MLflow": [[43, "logging-giskard-objects-to-mlflow"]], "Option 1 (via the fluent API)": [[43, "option-1-via-the-fluent-api"]], "Option 2 (via MlflowClient)": [[43, "option-2-via-mlflowclient"]], "Notebook Example - Text": [[44, "Notebook-Example---Text"]], "Detecting LLM vulnerabilities in MLflow with Giskard": [[44, "Detecting-LLM-vulnerabilities-in-MLflow-with-Giskard"]], "Notebook Example - Tabular": [[45, "Notebook-Example---Tabular"], [47, "Notebook-Example---Tabular"]], "Detecting tabular ML models vulnerabilities in MLflow with Giskard": [[45, "Detecting-tabular-ML-models-vulnerabilities-in-MLflow-with-Giskard"]], "Weights and Biases": [[46, "weights-and-biases"]], "Logging from Giskard to Weights & Biases": [[46, "logging-from-giskard-to-weights-biases"]], "Detecting tabular ML models vulnerabilities in W&B with Giskard": [[47, "Detecting-tabular-ML-models-vulnerabilities-in-W&B-with-Giskard"]], "The dataset": [[47, "The-dataset"]], "The SHAP bar plots for categorical features": [[47, "The-SHAP-bar-plots-for-categorical-features"]], "The SHAP scatter plots for numerical features": [[47, "The-SHAP-scatter-plots-for-numerical-features"]], "The SHAP global feature importance plot": [[47, "The-SHAP-global-feature-importance-plot"]], "The Giskard scan results": [[47, "The-Giskard-scan-results"]], "The Giskard test-suite results": [[47, "The-Giskard-test-suite-results"]], "Dataset": [[48, "dataset"]], "API reference": [[49, "api-reference"]], "Models": [[50, "module-giskard.models"]], "The giskard.Model class": [[50, "the-giskard-model-class"]], "Model Prediction": [[50, "model-prediction"]], "Base model classes": [[51, "module-giskard.models.base"]], "Catboost models": [[52, "module-giskard.models.catboost"]], "Prediction function": [[53, "module-giskard.models.function"]], "HuggingFace models": [[54, "module-giskard.models.huggingface"]], "Optimizing performance": [[54, "optimizing-performance"]], "Expected model output": [[54, "expected-model-output"]], "Langchain models": [[55, "module-giskard.models.langchain"]], "Pytorch models": [[56, "module-giskard.models.pytorch"]], "Sklearn models": [[57, "module-giskard.models.sklearn"]], "Tensorflow models": [[58, "module-giskard.models.tensorflow"]], "Airline tweets sentiment analysis [HuggingFace]": [[59, "Airline-tweets-sentiment-analysis-[HuggingFace]"]], "Install other libraries": [[59, "Install-other-libraries"]], "Import libraries": [[59, "Import-libraries"], [60, "Import-libraries"], [62, "Import-libraries"], [63, "Import-libraries"], [64, "Import-libraries"], [65, "Import-libraries"], [66, "Import-libraries"], [68, "Import-libraries"], [69, "Import-libraries"], [70, "Import-libraries"], [71, "Import-libraries"], [72, "Import-libraries"], [73, "Import-libraries"], [74, "Import-libraries"], [75, "Import-libraries"], [76, "Import-libraries"], [77, "Import-libraries"], [78, "Import-libraries"]], "Define constants": [[59, "Define-constants"], [60, "Define-constants"], [63, "Define-constants"], [64, "Define-constants"], [65, "Define-constants"], [68, "Define-constants"], [69, "Define-constants"], [70, "Define-constants"], [71, "Define-constants"], [73, "Define-constants"], [74, "Define-constants"], [75, "Define-constants"], [76, "Define-constants"], [78, "Define-constants"]], "Dataset preparation": [[59, "Dataset-preparation"], [60, "Dataset-preparation"], [63, "Dataset-preparation"], [64, "Dataset-preparation"], [65, "Dataset-preparation"], [68, "Dataset-preparation"], [69, "Dataset-preparation"], [70, "Dataset-preparation"], [71, "Dataset-preparation"], [73, "Dataset-preparation"], [74, "Dataset-preparation"], [75, "Dataset-preparation"], [76, "Dataset-preparation"], [78, "Dataset-preparation"]], "Load and preprocess data": [[59, "Load-and-preprocess-data"], [60, "Load-and-preprocess-data"], [63, "Load-and-preprocess-data"], [65, "Load-and-preprocess-data"], [68, "Load-and-preprocess-data"], [70, "Load-and-preprocess-data"], [73, "Load-and-preprocess-data"], [78, "Load-and-preprocess-data"]], "Train-test split": [[59, "Train-test-split"], [60, "Train-test-split"], [63, "Train-test-split"], [64, "Train-test-split"], [65, "Train-test-split"], [68, "Train-test-split"], [69, "Train-test-split"], [70, "Train-test-split"], [71, "Train-test-split"], [73, "Train-test-split"], [74, "Train-test-split"], [78, "Train-test-split"]], "Wrap dataset with Giskard": [[59, "Wrap-dataset-with-Giskard"], [60, "Wrap-dataset-with-Giskard"], [63, "Wrap-dataset-with-Giskard"], [64, "Wrap-dataset-with-Giskard"], [65, "Wrap-dataset-with-Giskard"], [69, "Wrap-dataset-with-Giskard"], [70, "Wrap-dataset-with-Giskard"], [71, "Wrap-dataset-with-Giskard"], [73, "Wrap-dataset-with-Giskard"], [74, "Wrap-dataset-with-Giskard"], [75, "Wrap-dataset-with-Giskard"], [76, "Wrap-dataset-with-Giskard"], [78, "Wrap-dataset-with-Giskard"]], "Model training": [[59, "Model-training"], [60, "Model-training"], [63, "Model-training"], [64, "Model-training"], [68, "Model-training"], [69, "Model-training"], [70, "Model-training"], [71, "Model-training"], [73, "Model-training"], [74, "Model-training"], [75, "Model-training"], [76, "Model-training"], [78, "Model-training"]], "Define \u2018torch.Dataset\u2019 objects.": [[59, "Define-'torch.Dataset'-objects."]], "Define model": [[59, "Define-model"], [76, "Define-model"]], "Define trainer object": [[59, "Define-trainer-object"]], "Train and evaluate model": [[59, "Train-and-evaluate-model"], [76, "Train-and-evaluate-model"]], "Wrap model with Giskard": [[59, "Wrap-model-with-Giskard"], [60, "Wrap-model-with-Giskard"], [63, "Wrap-model-with-Giskard"], [64, "Wrap-model-with-Giskard"], [65, "Wrap-model-with-Giskard"], [68, "Wrap-model-with-Giskard"], [69, "Wrap-model-with-Giskard"], [70, "Wrap-model-with-Giskard"], [71, "Wrap-model-with-Giskard"], [73, "Wrap-model-with-Giskard"], [74, "Wrap-model-with-Giskard"], [75, "Wrap-model-with-Giskard"], [76, "Wrap-model-with-Giskard"], [78, "Wrap-model-with-Giskard"]], "Scan model with Giskard": [[59, "Scan-model-with-Giskard"], [63, "Scan-model-with-Giskard"], [76, "Scan-model-with-Giskard"]], "Amazon reviews classification [sklearn]": [[60, "Amazon-reviews-classification-[sklearn]"]], "Define preprocessing pipeline": [[60, "Define-preprocessing-pipeline"], [71, "Define-preprocessing-pipeline"], [78, "Define-preprocessing-pipeline"]], "Build estimator": [[60, "Build-estimator"], [63, "Build-estimator"], [64, "Build-estimator"], [68, "Build-estimator"], [69, "Build-estimator"], [70, "Build-estimator"], [71, "Build-estimator"], [73, "Build-estimator"], [74, "Build-estimator"], [75, "Build-estimator"], [78, "Build-estimator"]], "Connecting Giskard to an AI model hosted by API": [[61, "Connecting-Giskard-to-an-AI-model-hosted-by-API"]], "Breast cancer detection [XGBoost]": [[62, "Breast-cancer-detection-[XGBoost]"]], "Import data and load it into Giskard": [[62, "Import-data-and-load-it-into-Giskard"], [66, "Import-data-and-load-it-into-Giskard"]], "Create your model & wrap it into Giskard": [[62, "Create-your-model-&-wrap-it-into-Giskard"], [66, "Create-your-model-&-wrap-it-into-Giskard"], [77, "Create-your-model-&-wrap-it-into-Giskard"]], "Train your model": [[62, "Train-your-model"], [66, "Train-your-model"]], "Wrap your model in Giskard": [[62, "Wrap-your-model-in-Giskard"], [66, "Wrap-your-model-in-Giskard"], [77, "Wrap-your-model-in-Giskard"]], "Customer churn prediction [LGBM]": [[63, "Customer-churn-prediction-[LGBM]"]], "Define preprocessing steps": [[63, "Define-preprocessing-steps"], [64, "Define-preprocessing-steps"], [68, "Define-preprocessing-steps"], [69, "Define-preprocessing-steps"], [74, "Define-preprocessing-steps"], [75, "Define-preprocessing-steps"]], "German credit scoring [sklearn]": [[64, "German-credit-scoring-[sklearn]"]], "Load data": [[64, "Load-data"], [69, "Load-data"], [71, "Load-data"], [74, "Load-data"], [75, "Load-data"], [76, "Load-data"]], "Drug classification [sklearn]": [[65, "Drug-classification-[sklearn]"]], "Install additional libraries": [[65, "Install-additional-libraries"], [72, "Install-additional-libraries"]], "Train model": [[65, "Train-model"]], "Define prediction function": [[65, "Define-prediction-function"]], "ENRON email classification [sklearn]": [[66, "ENRON-email-classification-[sklearn]"]], "Import data": [[66, "Import-data"], [77, "Import-data"]], "Pre-process and filter data": [[66, "Pre-process-and-filter-data"]], "Wrap your dataset into Giskard": [[66, "Wrap-your-dataset-into-Giskard"]], "Fake/real news classification [tensorflow (keras)]": [[68, "Fake/real-news-classification-[tensorflow-(keras)]"]], "Wrap data with Giskard": [[68, "Wrap-data-with-Giskard"]], "Create embeddings matrix": [[68, "Create-embeddings-matrix"]], "Scan model": [[68, "Scan-model"]], "Regression on the hotel reviews [sklearn]": [[69, "Regression-on-the-hotel-reviews-[sklearn]"]], "IEEE Fraud detection adversarial validation [lightgbm]": [[70, "IEEE-Fraud-detection-adversarial-validation-[lightgbm]"]], "Insurance charges prediction [LightGBM]": [[71, "Insurance-charges-prediction-[LightGBM]"]], "Install necessary python packages": [[71, "Install-necessary-python-packages"]], "Newspaper comments generation [LangChain, OpenAI]": [[72, "Newspaper-comments-generation-[LangChain,-OpenAI]"]], "Load and filter dataframe from Github": [[72, "Load-and-filter-dataframe-from-Github"]], "Initialize Prompt, LLM and Chain from LangChain": [[72, "Initialize-Prompt,-LLM-and-Chain-from-LangChain"]], "Dataset and Model preparation": [[72, "Dataset-and-Model-preparation"]], "M5 Sales prediction [lgbm]": [[73, "M5-Sales-prediction-[lgbm]"]], "Medical transcript classification [sklearn]": [[74, "Medical-transcript-classification-[sklearn]"]], "Install necessary dependencies": [[74, "Install-necessary-dependencies"]], "Download NLTK stopwords corpus": [[74, "Download-NLTK-stopwords-corpus"]], "Movie Review Sentiment Classification with DISTILL-BERT [sklearn + torch preprocessing]": [[75, "Movie-Review-Sentiment-Classification-with-DISTILL-BERT-[sklearn-+-torch-preprocessing]"]], "Train-Test split": [[75, "Train-Test-split"]], "Newspaper classification [PyTorch]": [[76, "Newspaper-classification-[PyTorch]"]], "Prepare dataloaders for training and evaluation": [[76, "Prepare-dataloaders-for-training-and-evaluation"]], "Tripadvisor reviews sentiment classification [HuggingFace]": [[77, "Tripadvisor-reviews-sentiment-classification-[HuggingFace]"]], "Load and wrap your dataset into Giskard": [[77, "Load-and-wrap-your-dataset-into-Giskard"]], "Create your model from HuggingFace": [[77, "Create-your-model-from-HuggingFace"]], "Wage classification [sklearn]": [[78, "Wage-classification-[sklearn]"]], "Push feature": [[79, "module-giskard.push"]], "Push tests catalog": [[79, "push-tests-catalog"]], "Slicing functions": [[80, "slicing-functions"]], "Textual slicing": [[80, "textual-slicing"]], "Numerical slicing functions": [[80, "numerical-slicing-functions"]], "Test suite": [[81, "test-suite"]], "Tests": [[83, "tests"]], "Statistical tests": [[86, "statistical-tests"]], "Transformation functions": [[87, "transformation-functions"]], "Textual transformation functions": [[87, "textual-transformation-functions"]], "By data types": [[88, "by-data-types"]], "Tabular": [[89, "tabular"]], "Text": [[90, "text"]], "Tutorials": [[91, "tutorials"]], "API": [[92, "api"]], "HuggingFace": [[93, "huggingface"]], "AutoModelForSequenceClassification": [[94, "automodelforsequenceclassification"]], "Libraries import": [[94, "libraries-import"], [98, "libraries-import"], [100, "libraries-import"], [101, "libraries-import"], [103, "libraries-import"], [104, "libraries-import"]], "Wrap dataset": [[94, "wrap-dataset"], [98, "wrap-dataset"], [100, "wrap-dataset"], [101, "wrap-dataset"], [103, "wrap-dataset"], [104, "wrap-dataset"]], "Wrap model": [[94, "wrap-model"], [98, "wrap-model"], [100, "wrap-model"], [101, "wrap-model"], [103, "wrap-model"], [104, "wrap-model"]], "By ML libraries": [[95, "by-ml-libraries"]], "LangChain": [[96, "langchain"]], "LightGBM": [[97, "lightgbm"]], "Newspaper classification with torchtext": [[98, "newspaper-classification-with-torchtext"]], "PyTorch": [[99, "pytorch"]], "Linear regression with neural networks": [[100, "linear-regression-with-neural-networks"]], "SST-2 Binary text classification with XLM-ROBERTA": [[101, "sst-2-binary-text-classification-with-xlm-roberta"]], "Scikit-learn": [[102, "scikit-learn"]], "Sentiment analysis model": [[103, "sentiment-analysis-model"]], "Bert model from tensorflow_hub": [[104, "bert-model-from-tensorflow-hub"]], "TensorFlow": [[105, "tensorflow"]], "XGBoost": [[106, "xgboost"]], "Classification": [[107, "classification"]], "By ML tasks": [[108, "by-ml-tasks"]], "Regression": [[109, "regression"]], "Text generation": [[110, "text-generation"]]}, "indexentries": {"--all": [[7, "cmdoption-giskard-worker-stop-a"]], "--api-key": [[7, "cmdoption-giskard-worker-restart-k"]], "--attach": [[7, "cmdoption-giskard-server-start-a"]], "--daemon": [[7, "cmdoption-giskard-worker-start-d"]], "--data": [[7, "cmdoption-giskard-server-clean-data"]], "--follow": [[7, "cmdoption-giskard-server-logs-f"], [7, "cmdoption-giskard-worker-logs-f"]], "--hard": [[7, "cmdoption-giskard-server-restart-hard"]], "--hf-token": [[7, "cmdoption-giskard-worker-restart-t"], [7, "cmdoption-giskard-worker-start-t"]], "--key": [[7, "cmdoption-giskard-worker-start-k"]], "--lines": [[7, "cmdoption-giskard-server-logs-l"], [7, "cmdoption-giskard-worker-logs-n"]], "--out_path": [[7, "cmdoption-giskard-server-diagnose-o"]], "--server": [[7, "cmdoption-giskard-worker-restart-s"], [7, "cmdoption-giskard-worker-start-s"], [7, "cmdoption-giskard-worker-stop-s"]], "--token": [[7, "cmdoption-giskard-server-expose-token"]], "--url": [[7, "cmdoption-giskard-worker-restart-u"], [7, "cmdoption-giskard-worker-start-u"], [7, "cmdoption-giskard-worker-stop-u"]], "--verbose": [[7, "cmdoption-giskard-server-clean-v"], [7, "cmdoption-giskard-server-diagnose-v"], [7, "cmdoption-giskard-server-expose-v"], [7, "cmdoption-giskard-server-logs-v"], [7, "cmdoption-giskard-server-restart-v"], [7, "cmdoption-giskard-server-start-v"], [7, "cmdoption-giskard-server-status-v"], [7, "cmdoption-giskard-server-stop-v"], [7, "cmdoption-giskard-server-upgrade-v"], [7, "cmdoption-giskard-worker-logs-v"], [7, "cmdoption-giskard-worker-restart-v"], [7, "cmdoption-giskard-worker-start-v"], [7, "cmdoption-giskard-worker-stop-v"]], "--version": [[7, "cmdoption-giskard-server-start-version"], [7, "cmdoption-giskard-version"]], "-a": [[7, "cmdoption-giskard-server-start-a"], [7, "cmdoption-giskard-worker-stop-a"]], "-d": [[7, "cmdoption-giskard-worker-start-d"]], "-f": [[7, "cmdoption-giskard-server-logs-f"], [7, "cmdoption-giskard-worker-logs-f"]], "-k": [[7, "cmdoption-giskard-worker-restart-k"], [7, "cmdoption-giskard-worker-start-k"]], "-l": [[7, "cmdoption-giskard-server-logs-l"]], "-n": [[7, "cmdoption-giskard-worker-logs-n"]], "-o": [[7, "cmdoption-giskard-server-diagnose-o"]], "-s": [[7, "cmdoption-giskard-worker-restart-s"], [7, "cmdoption-giskard-worker-start-s"], [7, "cmdoption-giskard-worker-stop-s"]], "-t": [[7, "cmdoption-giskard-worker-restart-t"], [7, "cmdoption-giskard-worker-start-t"]], "-u": [[7, "cmdoption-giskard-worker-restart-u"], [7, "cmdoption-giskard-worker-start-u"], [7, "cmdoption-giskard-worker-stop-u"]], "-v": [[7, "cmdoption-giskard-server-clean-v"], [7, "cmdoption-giskard-server-diagnose-v"], [7, "cmdoption-giskard-server-expose-v"], [7, "cmdoption-giskard-server-logs-v"], [7, "cmdoption-giskard-server-restart-v"], [7, "cmdoption-giskard-server-start-v"], [7, "cmdoption-giskard-server-status-v"], [7, "cmdoption-giskard-server-stop-v"], [7, "cmdoption-giskard-server-upgrade-v"], [7, "cmdoption-giskard-worker-logs-v"], [7, "cmdoption-giskard-worker-restart-v"], [7, "cmdoption-giskard-worker-start-v"], [7, "cmdoption-giskard-worker-stop-v"]], "service": [[7, "cmdoption-giskard-server-logs-arg-SERVICE"], [7, "cmdoption-giskard-server-restart-arg-SERVICE"]], "version": [[7, "cmdoption-giskard-server-upgrade-arg-VERSION"]], "giskard command line option": [[7, "cmdoption-giskard-version"]], "giskard-server-clean command line option": [[7, "cmdoption-giskard-server-clean-data"], [7, "cmdoption-giskard-server-clean-v"]], "giskard-server-diagnose command line option": [[7, "cmdoption-giskard-server-diagnose-o"], [7, "cmdoption-giskard-server-diagnose-v"]], "giskard-server-expose command line option": [[7, "cmdoption-giskard-server-expose-token"], [7, "cmdoption-giskard-server-expose-v"]], "giskard-server-logs command line option": [[7, "cmdoption-giskard-server-logs-arg-SERVICE"], [7, "cmdoption-giskard-server-logs-f"], [7, "cmdoption-giskard-server-logs-l"], [7, "cmdoption-giskard-server-logs-v"]], "giskard-server-restart command line option": [[7, "cmdoption-giskard-server-restart-arg-SERVICE"], [7, "cmdoption-giskard-server-restart-hard"], [7, "cmdoption-giskard-server-restart-v"]], "giskard-server-start command line option": [[7, "cmdoption-giskard-server-start-a"], [7, "cmdoption-giskard-server-start-v"], [7, "cmdoption-giskard-server-start-version"]], "giskard-server-status command line option": [[7, "cmdoption-giskard-server-status-v"]], "giskard-server-stop command line option": [[7, "cmdoption-giskard-server-stop-v"]], "giskard-server-upgrade command line option": [[7, "cmdoption-giskard-server-upgrade-arg-VERSION"], [7, "cmdoption-giskard-server-upgrade-v"]], "giskard-worker-logs command line option": [[7, "cmdoption-giskard-worker-logs-f"], [7, "cmdoption-giskard-worker-logs-n"], [7, "cmdoption-giskard-worker-logs-v"]], "giskard-worker-restart command line option": [[7, "cmdoption-giskard-worker-restart-k"], [7, "cmdoption-giskard-worker-restart-s"], [7, "cmdoption-giskard-worker-restart-t"], [7, "cmdoption-giskard-worker-restart-u"], [7, "cmdoption-giskard-worker-restart-v"]], "giskard-worker-start command line option": [[7, "cmdoption-giskard-worker-start-d"], [7, "cmdoption-giskard-worker-start-k"], [7, "cmdoption-giskard-worker-start-s"], [7, "cmdoption-giskard-worker-start-t"], [7, "cmdoption-giskard-worker-start-u"], [7, "cmdoption-giskard-worker-start-v"]], "giskard-worker-stop command line option": [[7, "cmdoption-giskard-worker-stop-a"], [7, "cmdoption-giskard-worker-stop-s"], [7, "cmdoption-giskard-worker-stop-u"], [7, "cmdoption-giskard-worker-stop-v"]], "dataset (class in giskard)": [[48, "giskard.Dataset"]], "__init__() (giskard.dataset method)": [[48, "giskard.Dataset.__init__"]], "_infer_column_types() (giskard.dataset method)": [[48, "giskard.Dataset._infer_column_types"]], "add_slicing_function() (giskard.dataset method)": [[48, "giskard.Dataset.add_slicing_function"]], "add_transformation_function() (giskard.dataset method)": [[48, "giskard.Dataset.add_transformation_function"]], "cat_columns (giskard.dataset attribute)": [[48, "giskard.Dataset.cat_columns"]], "column_types (giskard.dataset attribute)": [[48, "giskard.Dataset.column_types"]], "data_processor (giskard.dataset attribute)": [[48, "giskard.Dataset.data_processor"]], "df (giskard.dataset attribute)": [[48, "giskard.Dataset.df"]], "download() (giskard.dataset class method)": [[48, "giskard.Dataset.download"]], "name (giskard.dataset attribute)": [[48, "giskard.Dataset.name"]], "process() (giskard.dataset method)": [[48, "giskard.Dataset.process"]], "slice() (giskard.dataset method)": [[48, "giskard.Dataset.slice"]], "target (giskard.dataset attribute)": [[48, "giskard.Dataset.target"]], "transform() (giskard.dataset method)": [[48, "giskard.Dataset.transform"]], "upload() (giskard.dataset method)": [[48, "giskard.Dataset.upload"]], "model (class in giskard)": [[50, "giskard.Model"]], "modelpredictionresults (class in giskard.models.base)": [[50, "giskard.models.base.ModelPredictionResults"]], "__new__() (giskard.model static method)": [[50, "giskard.Model.__new__"]], "all_predictions (giskard.models.base.modelpredictionresults attribute)": [[50, "giskard.models.base.ModelPredictionResults.all_predictions"]], "download() (giskard.model class method)": [[50, "giskard.Model.download"]], "giskard.models": [[50, "module-giskard.models"]], "is_binary_classification() (giskard.model method)": [[50, "giskard.Model.is_binary_classification"]], "is_classification() (giskard.model method)": [[50, "giskard.Model.is_classification"]], "is_regression() (giskard.model method)": [[50, "giskard.Model.is_regression"]], "is_text_generation() (giskard.model method)": [[50, "giskard.Model.is_text_generation"]], "load_model() (giskard.model class method)": [[50, "giskard.Model.load_model"]], "model_predict() (giskard.model method)": [[50, "giskard.Model.model_predict"]], "module": [[50, "module-giskard.models"], [51, "module-giskard.models.base"], [52, "module-giskard.models.catboost"], [53, "module-giskard.models.function"], [54, "module-giskard.models.huggingface"], [55, "module-giskard.models.langchain"], [56, "module-giskard.models.pytorch"], [57, "module-giskard.models.sklearn"], [58, "module-giskard.models.tensorflow"], [79, "module-giskard.push"]], "predict() (giskard.model method)": [[50, "giskard.Model.predict"]], "prediction (giskard.models.base.modelpredictionresults attribute)": [[50, "giskard.models.base.ModelPredictionResults.prediction"]], "probabilities (giskard.models.base.modelpredictionresults attribute)": [[50, "giskard.models.base.ModelPredictionResults.probabilities"]], "raw (giskard.models.base.modelpredictionresults attribute)": [[50, "giskard.models.base.ModelPredictionResults.raw"]], "raw_prediction (giskard.models.base.modelpredictionresults attribute)": [[50, "giskard.models.base.ModelPredictionResults.raw_prediction"]], "save_model() (giskard.model method)": [[50, "giskard.Model.save_model"]], "upload() (giskard.model method)": [[50, "giskard.Model.upload"]], "basemodel (class in giskard.models.base)": [[51, "giskard.models.base.BaseModel"]], "cloudpickleserializablemodel (class in giskard.models.base)": [[51, "giskard.models.base.CloudpickleSerializableModel"]], "mlflowserializablemodel (class in giskard.models.base)": [[51, "giskard.models.base.MLFlowSerializableModel"]], "wrappermodel (class in giskard.models.base)": [[51, "giskard.models.base.WrapperModel"]], "classification_labels (giskard.models.base.basemodel attribute)": [[51, "giskard.models.base.BaseModel.classification_labels"]], "classification_threshold (giskard.models.base.basemodel attribute)": [[51, "giskard.models.base.BaseModel.classification_threshold"]], "download() (giskard.models.base.basemodel class method)": [[51, "giskard.models.base.BaseModel.download"]], "feature_names (giskard.models.base.basemodel attribute)": [[51, "giskard.models.base.BaseModel.feature_names"]], "giskard.models.base": [[51, "module-giskard.models.base"]], "is_binary_classification (giskard.models.base.basemodel property)": [[51, "giskard.models.base.BaseModel.is_binary_classification"]], "is_classification (giskard.models.base.basemodel property)": [[51, "giskard.models.base.BaseModel.is_classification"]], "is_regression (giskard.models.base.basemodel property)": [[51, "giskard.models.base.BaseModel.is_regression"]], "is_text_generation (giskard.models.base.basemodel property)": [[51, "giskard.models.base.BaseModel.is_text_generation"]], "load_model() (giskard.models.base.cloudpickleserializablemodel class method)": [[51, "giskard.models.base.CloudpickleSerializableModel.load_model"]], "load_model() (giskard.models.base.wrappermodel class method)": [[51, "giskard.models.base.WrapperModel.load_model"]], "model (giskard.models.base.basemodel attribute)": [[51, "giskard.models.base.BaseModel.model"]], "model_predict() (giskard.models.base.wrappermodel method)": [[51, "giskard.models.base.WrapperModel.model_predict"]], "model_type (giskard.models.base.basemodel attribute)": [[51, "giskard.models.base.BaseModel.model_type"]], "name (giskard.models.base.basemodel attribute)": [[51, "giskard.models.base.BaseModel.name"]], "predict() (giskard.models.base.basemodel method)": [[51, "giskard.models.base.BaseModel.predict"]], "predict_df() (giskard.models.base.basemodel method)": [[51, "giskard.models.base.BaseModel.predict_df"]], "predict_df() (giskard.models.base.wrappermodel method)": [[51, "giskard.models.base.WrapperModel.predict_df"]], "prepare_dataframe() (giskard.models.base.basemodel method)": [[51, "giskard.models.base.BaseModel.prepare_dataframe"]], "save_model() (giskard.models.base.cloudpickleserializablemodel method)": [[51, "giskard.models.base.CloudpickleSerializableModel.save_model"]], "save_model() (giskard.models.base.wrappermodel method)": [[51, "giskard.models.base.WrapperModel.save_model"]], "upload() (giskard.models.base.basemodel method)": [[51, "giskard.models.base.BaseModel.upload"]], "catboostmodel (class in giskard.models.catboost)": [[52, "giskard.models.catboost.CatboostModel"]], "giskard.models.catboost": [[52, "module-giskard.models.catboost"]], "load_model() (giskard.models.catboost.catboostmodel class method)": [[52, "giskard.models.catboost.CatboostModel.load_model"]], "save_model() (giskard.models.catboost.catboostmodel method)": [[52, "giskard.models.catboost.CatboostModel.save_model"]], "predictionfunctionmodel (class in giskard.models.function)": [[53, "giskard.models.function.PredictionFunctionModel"]], "giskard.models.function": [[53, "module-giskard.models.function"]], "model_predict() (giskard.models.function.predictionfunctionmodel method)": [[53, "giskard.models.function.PredictionFunctionModel.model_predict"]], "huggingfacemodel (class in giskard.models.huggingface)": [[54, "giskard.models.huggingface.HuggingFaceModel"]], "batch_size (giskard.models.huggingface.huggingfacemodel attribute)": [[54, "giskard.models.huggingface.HuggingFaceModel.batch_size"]], "giskard.models.huggingface": [[54, "module-giskard.models.huggingface"]], "load_model() (giskard.models.huggingface.huggingfacemodel class method)": [[54, "giskard.models.huggingface.HuggingFaceModel.load_model"]], "model_predict() (giskard.models.huggingface.huggingfacemodel method)": [[54, "giskard.models.huggingface.HuggingFaceModel.model_predict"]], "save_model() (giskard.models.huggingface.huggingfacemodel method)": [[54, "giskard.models.huggingface.HuggingFaceModel.save_model"]], "langchainmodel (class in giskard.models.langchain)": [[55, "giskard.models.langchain.LangchainModel"]], "giskard.models.langchain": [[55, "module-giskard.models.langchain"]], "load_model() (giskard.models.langchain.langchainmodel class method)": [[55, "giskard.models.langchain.LangchainModel.load_model"]], "model_predict() (giskard.models.langchain.langchainmodel method)": [[55, "giskard.models.langchain.LangchainModel.model_predict"]], "save_model() (giskard.models.langchain.langchainmodel method)": [[55, "giskard.models.langchain.LangchainModel.save_model"]], "pytorchmodel (class in giskard.models.pytorch)": [[56, "giskard.models.pytorch.PyTorchModel"]], "giskard.models.pytorch": [[56, "module-giskard.models.pytorch"]], "load_model() (giskard.models.pytorch.pytorchmodel class method)": [[56, "giskard.models.pytorch.PyTorchModel.load_model"]], "model_predict() (giskard.models.pytorch.pytorchmodel method)": [[56, "giskard.models.pytorch.PyTorchModel.model_predict"]], "save_model() (giskard.models.pytorch.pytorchmodel method)": [[56, "giskard.models.pytorch.PyTorchModel.save_model"]], "sklearnmodel (class in giskard.models.sklearn)": [[57, "giskard.models.sklearn.SKLearnModel"]], "giskard.models.sklearn": [[57, "module-giskard.models.sklearn"]], "load_model() (giskard.models.sklearn.sklearnmodel class method)": [[57, "giskard.models.sklearn.SKLearnModel.load_model"]], "model_predict() (giskard.models.sklearn.sklearnmodel method)": [[57, "giskard.models.sklearn.SKLearnModel.model_predict"]], "save_model() (giskard.models.sklearn.sklearnmodel method)": [[57, "giskard.models.sklearn.SKLearnModel.save_model"]], "tensorflowmodel (class in giskard.models.tensorflow)": [[58, "giskard.models.tensorflow.TensorFlowModel"]], "giskard.models.tensorflow": [[58, "module-giskard.models.tensorflow"]], "load_model() (giskard.models.tensorflow.tensorflowmodel class method)": [[58, "giskard.models.tensorflow.TensorFlowModel.load_model"]], "model_predict() (giskard.models.tensorflow.tensorflowmodel method)": [[58, "giskard.models.tensorflow.TensorFlowModel.model_predict"]], "save_model() (giskard.models.tensorflow.tensorflowmodel method)": [[58, "giskard.models.tensorflow.TensorFlowModel.save_model"]], "borderlinepush (class in giskard.push)": [[79, "giskard.push.BorderlinePush"]], "contributionpush (class in giskard.push)": [[79, "giskard.push.ContributionPush"]], "examplepush (class in giskard.push)": [[79, "giskard.push.ExamplePush"]], "featurepush (class in giskard.push)": [[79, "giskard.push.FeaturePush"]], "overconfidencepush (class in giskard.push)": [[79, "giskard.push.OverconfidencePush"]], "perturbationpush (class in giskard.push)": [[79, "giskard.push.PerturbationPush"]], "push (class in giskard.push)": [[79, "giskard.push.Push"]], "correct_example() (in module giskard.push.push_test_catalog.catalog)": [[79, "giskard.push.push_test_catalog.catalog.correct_example"]], "details (giskard.push.push attribute)": [[79, "giskard.push.Push.details"]], "giskard.push": [[79, "module-giskard.push"]], "if_overconfidence_rate_decrease() (in module giskard.push.push_test_catalog.catalog)": [[79, "giskard.push.push_test_catalog.catalog.if_overconfidence_rate_decrease"]], "if_underconfidence_rate_decrease() (in module giskard.push.push_test_catalog.catalog)": [[79, "giskard.push.push_test_catalog.catalog.if_underconfidence_rate_decrease"]], "increase_probability() (in module giskard.push.push_test_catalog.catalog)": [[79, "giskard.push.push_test_catalog.catalog.increase_probability"]], "one_sample_overconfidence_test() (in module giskard.push.push_test_catalog.catalog)": [[79, "giskard.push.push_test_catalog.catalog.one_sample_overconfidence_test"]], "one_sample_underconfidence_test() (in module giskard.push.push_test_catalog.catalog)": [[79, "giskard.push.push_test_catalog.catalog.one_sample_underconfidence_test"]], "push_title (giskard.push.push attribute)": [[79, "giskard.push.Push.push_title"]], "pushkind (giskard.push.push attribute)": [[79, "giskard.push.Push.pushkind"]], "test_diff_f1_push() (in module giskard.push.push_test_catalog.catalog)": [[79, "giskard.push.push_test_catalog.catalog.test_diff_f1_push"]], "test_diff_rmse_push() (in module giskard.push.push_test_catalog.catalog)": [[79, "giskard.push.push_test_catalog.catalog.test_diff_rmse_push"]], "test_metamorphic_invariance_with_mad() (in module giskard.push.push_test_catalog.catalog)": [[79, "giskard.push.push_test_catalog.catalog.test_metamorphic_invariance_with_mad"]], "tests (giskard.push.push attribute)": [[79, "giskard.push.Push.tests"]], "slicingfunction (class in giskard.ml_worker.testing.registry.slicing_function)": [[80, "giskard.ml_worker.testing.registry.slicing_function.SlicingFunction"]], "cell_level (giskard.ml_worker.testing.registry.slicing_function.slicingfunction attribute)": [[80, "giskard.ml_worker.testing.registry.slicing_function.SlicingFunction.cell_level"]], "download() (giskard.ml_worker.testing.registry.slicing_function.slicingfunction class method)": [[80, "giskard.ml_worker.testing.registry.slicing_function.SlicingFunction.download"]], "emotion_sentiment_analysis() (in module giskard.ml_worker.testing.functions.slicing)": [[80, "giskard.ml_worker.testing.functions.slicing.emotion_sentiment_analysis"]], "execute() (giskard.ml_worker.testing.registry.slicing_function.slicingfunction method)": [[80, "giskard.ml_worker.testing.registry.slicing_function.SlicingFunction.execute"]], "func (giskard.ml_worker.testing.registry.slicing_function.slicingfunction attribute)": [[80, "giskard.ml_worker.testing.registry.slicing_function.SlicingFunction.func"]], "hate_sentiment_analysis() (in module giskard.ml_worker.testing.functions.slicing)": [[80, "giskard.ml_worker.testing.functions.slicing.hate_sentiment_analysis"]], "irony_sentiment_analysis() (in module giskard.ml_worker.testing.functions.slicing)": [[80, "giskard.ml_worker.testing.functions.slicing.irony_sentiment_analysis"]], "is_initialized (giskard.ml_worker.testing.registry.slicing_function.slicingfunction attribute)": [[80, "giskard.ml_worker.testing.registry.slicing_function.SlicingFunction.is_initialized"]], "keyword_lookup_slicing_fn() (in module giskard.ml_worker.testing.functions.slicing)": [[80, "giskard.ml_worker.testing.functions.slicing.keyword_lookup_slicing_fn"]], "offensive_sentiment_analysis() (in module giskard.ml_worker.testing.functions.slicing)": [[80, "giskard.ml_worker.testing.functions.slicing.offensive_sentiment_analysis"]], "outlier_filter() (in module giskard.ml_worker.testing.functions.slicing)": [[80, "giskard.ml_worker.testing.functions.slicing.outlier_filter"]], "params (giskard.ml_worker.testing.registry.slicing_function.slicingfunction attribute)": [[80, "giskard.ml_worker.testing.registry.slicing_function.SlicingFunction.params"]], "positive_sentiment_analysis() (in module giskard.ml_worker.testing.functions.slicing)": [[80, "giskard.ml_worker.testing.functions.slicing.positive_sentiment_analysis"]], "row_level (giskard.ml_worker.testing.registry.slicing_function.slicingfunction attribute)": [[80, "giskard.ml_worker.testing.registry.slicing_function.SlicingFunction.row_level"]], "short_comment_slicing_fn() (in module giskard.ml_worker.testing.functions.slicing)": [[80, "giskard.ml_worker.testing.functions.slicing.short_comment_slicing_fn"]], "slicing_function() (in module giskard)": [[80, "giskard.slicing_function"]], "upload() (giskard.ml_worker.testing.registry.slicing_function.slicingfunction method)": [[80, "giskard.ml_worker.testing.registry.slicing_function.SlicingFunction.upload"]], "datasetinput (class in giskard.core.suite)": [[81, "giskard.core.suite.DatasetInput"]], "modelinput (class in giskard.core.suite)": [[81, "giskard.core.suite.ModelInput"]], "suite (class in giskard)": [[81, "giskard.Suite"]], "suiteinput (class in giskard.core.suite)": [[81, "giskard.core.suite.SuiteInput"]], "testresult (class in giskard.ml_worker.testing.test_result)": [[81, "giskard.ml_worker.testing.test_result.TestResult"]], "testsuiteresult (class in giskard.core.suite)": [[81, "giskard.core.suite.TestSuiteResult"]], "__init__() (giskard.suite method)": [[81, "giskard.Suite.__init__"]], "add_test() (giskard.suite method)": [[81, "giskard.Suite.add_test"]], "id (giskard.suite attribute)": [[81, "giskard.Suite.id"]], "model_type (giskard.core.suite.modelinput attribute)": [[81, "giskard.core.suite.ModelInput.model_type"]], "name (giskard.suite attribute)": [[81, "giskard.Suite.name"]], "name (giskard.core.suite.datasetinput attribute)": [[81, "giskard.core.suite.DatasetInput.name"]], "name (giskard.core.suite.modelinput attribute)": [[81, "giskard.core.suite.ModelInput.name"]], "name (giskard.core.suite.suiteinput attribute)": [[81, "giskard.core.suite.SuiteInput.name"]], "run() (giskard.suite method)": [[81, "giskard.Suite.run"]], "target (giskard.core.suite.datasetinput attribute)": [[81, "giskard.core.suite.DatasetInput.target"]], "tests (giskard.suite attribute)": [[81, "giskard.Suite.tests"]], "type (giskard.core.suite.suiteinput attribute)": [[81, "giskard.core.suite.SuiteInput.type"]], "upload() (giskard.suite method)": [[81, "giskard.Suite.upload"]], "test_drift_chi_square() (in module giskard.testing)": [[82, "giskard.testing.test_drift_chi_square"]], "test_drift_earth_movers_distance() (in module giskard.testing)": [[82, "giskard.testing.test_drift_earth_movers_distance"]], "test_drift_ks() (in module giskard.testing)": [[82, "giskard.testing.test_drift_ks"]], "test_drift_prediction_chi_square() (in module giskard.testing)": [[82, "giskard.testing.test_drift_prediction_chi_square"]], "test_drift_prediction_earth_movers_distance() (in module giskard.testing)": [[82, "giskard.testing.test_drift_prediction_earth_movers_distance"]], "test_drift_prediction_ks() (in module giskard.testing)": [[82, "giskard.testing.test_drift_prediction_ks"]], "test_drift_prediction_psi() (in module giskard.testing)": [[82, "giskard.testing.test_drift_prediction_psi"]], "test_drift_psi() (in module giskard.testing)": [[82, "giskard.testing.test_drift_psi"]], "test_metamorphic_decreasing() (in module giskard.testing)": [[84, "giskard.testing.test_metamorphic_decreasing"]], "test_metamorphic_decreasing_t_test() (in module giskard.testing)": [[84, "giskard.testing.test_metamorphic_decreasing_t_test"]], "test_metamorphic_decreasing_wilcoxon() (in module giskard.testing)": [[84, "giskard.testing.test_metamorphic_decreasing_wilcoxon"]], "test_metamorphic_increasing() (in module giskard.testing)": [[84, "giskard.testing.test_metamorphic_increasing"]], "test_metamorphic_increasing_t_test() (in module giskard.testing)": [[84, "giskard.testing.test_metamorphic_increasing_t_test"]], "test_metamorphic_increasing_wilcoxon() (in module giskard.testing)": [[84, "giskard.testing.test_metamorphic_increasing_wilcoxon"]], "test_metamorphic_invariance() (in module giskard.testing)": [[84, "giskard.testing.test_metamorphic_invariance"]], "test_metamorphic_invariance_t_test() (in module giskard.testing)": [[84, "giskard.testing.test_metamorphic_invariance_t_test"]], "test_metamorphic_invariance_wilcoxon() (in module giskard.testing)": [[84, "giskard.testing.test_metamorphic_invariance_wilcoxon"]], "test_accuracy() (in module giskard.testing)": [[85, "giskard.testing.test_accuracy"]], "test_auc() (in module giskard.testing)": [[85, "giskard.testing.test_auc"]], "test_diff_accuracy() (in module giskard.testing)": [[85, "giskard.testing.test_diff_accuracy"]], "test_diff_f1() (in module giskard.testing)": [[85, "giskard.testing.test_diff_f1"]], "test_diff_precision() (in module giskard.testing)": [[85, "giskard.testing.test_diff_precision"]], "test_diff_recall() (in module giskard.testing)": [[85, "giskard.testing.test_diff_recall"]], "test_diff_rmse() (in module giskard.testing)": [[85, "giskard.testing.test_diff_rmse"]], "test_f1() (in module giskard.testing)": [[85, "giskard.testing.test_f1"]], "test_mae() (in module giskard.testing)": [[85, "giskard.testing.test_mae"]], "test_precision() (in module giskard.testing)": [[85, "giskard.testing.test_precision"]], "test_r2() (in module giskard.testing)": [[85, "giskard.testing.test_r2"]], "test_recall() (in module giskard.testing)": [[85, "giskard.testing.test_recall"]], "test_rmse() (in module giskard.testing)": [[85, "giskard.testing.test_rmse"]], "test_cramer_v() (in module giskard.testing)": [[86, "giskard.testing.test_cramer_v"]], "test_disparate_impact() (in module giskard.testing)": [[86, "giskard.testing.test_disparate_impact"]], "test_mutual_information() (in module giskard.testing)": [[86, "giskard.testing.test_mutual_information"]], "test_nominal_association() (in module giskard.testing)": [[86, "giskard.testing.test_nominal_association"]], "test_output_in_range() (in module giskard.testing)": [[86, "giskard.testing.test_output_in_range"]], "test_right_label() (in module giskard.testing)": [[86, "giskard.testing.test_right_label"]], "test_theil_u() (in module giskard.testing)": [[86, "giskard.testing.test_theil_u"]], "transformationfunction (class in giskard.ml_worker.testing.registry.transformation_function)": [[87, "giskard.ml_worker.testing.registry.transformation_function.TransformationFunction"]], "change_writing_style() (in module giskard.ml_worker.testing.functions.transformation)": [[87, "giskard.ml_worker.testing.functions.transformation.change_writing_style"]], "download() (giskard.ml_worker.testing.registry.transformation_function.transformationfunction class method)": [[87, "giskard.ml_worker.testing.registry.transformation_function.TransformationFunction.download"]], "execute() (giskard.ml_worker.testing.registry.transformation_function.transformationfunction method)": [[87, "giskard.ml_worker.testing.registry.transformation_function.TransformationFunction.execute"]], "keyboard_typo_transformation() (in module giskard.ml_worker.testing.functions.transformation)": [[87, "giskard.ml_worker.testing.functions.transformation.keyboard_typo_transformation"]], "lowercase_transformation() (in module giskard.ml_worker.testing.functions.transformation)": [[87, "giskard.ml_worker.testing.functions.transformation.lowercase_transformation"]], "strip_punctuation() (in module giskard.ml_worker.testing.functions.transformation)": [[87, "giskard.ml_worker.testing.functions.transformation.strip_punctuation"]], "transformation_function() (in module giskard)": [[87, "giskard.transformation_function"]], "upload() (giskard.ml_worker.testing.registry.transformation_function.transformationfunction method)": [[87, "giskard.ml_worker.testing.registry.transformation_function.TransformationFunction.upload"]], "uppercase_transformation() (in module giskard.ml_worker.testing.functions.transformation)": [[87, "giskard.ml_worker.testing.functions.transformation.uppercase_transformation"]]}})