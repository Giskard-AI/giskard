syntax = "proto3";
import "google/protobuf/any.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_package = "ai.giskard.worker";
option java_outer_classname = "WorkerProto";
option objc_class_prefix = "WRK";

package worker;

service MLWorker {
  rpc runTest (RunTestRequest) returns (TestResultMessage) {}
  rpc runModel(RunModelRequest) returns (RunModelResponse) {}
  rpc runModelForDataFrame(RunModelForDataFrameRequest) returns (RunModelForDataFrameResponse) {}
  rpc explain(ExplainRequest) returns (ExplainResponse) {}
  rpc explainText(ExplainTextRequest) returns (ExplainTextResponse) {}
}

message ExplainRequest{
  SerializedGiskardModel model = 1;
  SerializedGiskardDataset dataset = 2;
  map<string, string> columns = 3;
}

message ExplainTextRequest{
  SerializedGiskardModel model = 1;
  string feature_name = 2;
  map<string, string> columns = 3;
  map<string, string> feature_types = 4;
  uint32 n_samples = 5;
}

message ExplainResponse{
  message Explanation{
    map<string, float> per_feature = 1;
  }
  map<string, Explanation> explanations = 1;
}


message ExplainTextResponse{
  map<string, string> explanations = 1;
}

message RunModelForDataFrameResponse{
  DataFrame all_predictions = 1;
  repeated string prediction = 2;
  repeated float probabilities = 3;
  repeated float raw_prediction = 4;
}
message DataRow{
  map<string, string> columns = 1;
}
message DataFrame{
  repeated DataRow rows = 1;
}

message RunModelForDataFrameRequest{
  SerializedGiskardModel model = 1;
  DataFrame dataframe = 2;
  string target = 3;
  map<string, string> feature_types = 4;
  map<string, string> column_types = 5;

}
message RunModelRequest{
  SerializedGiskardModel model = 1;
  SerializedGiskardDataset dataset = 2;
}

message RunModelResponse{
  string results_csv = 1;
  string calculated_csv = 2;
}

message RunTestRequest {
  string code = 1;
  SerializedGiskardModel model = 2;
  SerializedGiskardDataset actual_ds = 3;
  SerializedGiskardDataset reference_ds = 4;
}

message SerializedGiskardDataset{
  string target = 2;
  map<string, string> feature_types = 3;
  map<string, string> column_types = 5;
  bytes serialized_df = 4;
}

message RunTestResponse {
  string name = 1;
}

message Partial_unexpected_counts {
  repeated uint32 value = 1;
  uint32 count = 2;
}

message NamedSingleTestResult{
  string name = 1;
  SingleTestResult result = 2;

}


enum TestMessageType{
  ERROR = 0;
  INFO = 1;
}
message TestMessage{
  TestMessageType type = 1;
  string text = 2;
}

message SingleTestResult{
  bool passed = 13;
  repeated TestMessage messages = 16;
  map<string, string> props = 14;
  float metric = 15;
  google.protobuf.Int32Value missing_count = 2;
  google.protobuf.DoubleValue missing_percent = 3;
  google.protobuf.Int32Value unexpected_count = 4;
  google.protobuf.DoubleValue unexpected_percent = 5;
  google.protobuf.DoubleValue unexpected_percent_total = 6;
  google.protobuf.DoubleValue unexpected_percent_nonmissing = 7;
  repeated uint32 partial_unexpected_index_list = 9;
  repeated Partial_unexpected_counts partial_unexpected_counts = 10;
  repeated uint32 unexpected_index_list = 12;
  bytes output_df = 18;
  uint32 number_of_perturbed_rows = 20;

  repeated uint32 actual_slices_size = 21;
  repeated uint32 reference_slices_size = 22;
}

message TestResultMessage {
  repeated NamedSingleTestResult results = 1;
}

message SerializedGiskardModel{
  bytes serialized_prediction_function = 1;
  string model_type = 2;
  google.protobuf.DoubleValue threshold = 3;
  repeated string feature_names = 4;
  repeated string classification_labels = 5;
}