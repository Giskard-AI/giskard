server {
    listen      80;
    root        /usr/share/nginx/html;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location /api/v2 {
        client_max_body_size   16G;
        proxy_pass http://backend:9000;
        proxy_http_version                 1.1;

        proxy_connect_timeout              360000s;
        proxy_send_timeout                 360000s;
        proxy_read_timeout                 360000s;
    }

    location /git {
     	# The root here have nothing to do with your git repository path.
        root /usr/share/nginx;
        index index.html;

        # Create .htpasswd by
        #	sudo htpasswd -c /srv/websites/.htpasswd username
        #	Note that this will replace existed .htpasswd file.
        auth_basic            "Git login";
        auth_basic_user_file  /usr/share/nginx/git/.htpasswd;

        # Match by regex, case sensitive. This will match URL with .git in.
        # 	For example: git.example.com/someRepo.git/info/refs...
        # 	Change this pattern to suit your needs.
        #	If you see PROPFIND in your access log then your request is not processed by git-http-backend.
        #	This may because your url didn't match the pattern,
        #		therefore all content inside the location block is not reached.
        location ~ \.git {
            # Set chunks to unlimited, as the body's can be huge
            client_max_body_size			0;

            include /etc/nginx/fastcgi_params;
            fastcgi_param	SCRIPT_FILENAME		/usr/libexec/git-core/git-http-backend;
            fastcgi_param	GIT_HTTP_EXPORT_ALL	"";
            fastcgi_param	GIT_PROJECT_ROOT	/usr/share/nginx;
            fastcgi_param	PATH_INFO		$uri;

            # Forward REMOTE_USER as we want to know when we are authenticated
            fastcgi_param	REMOTE_USER		$remote_user;
            fastcgi_pass    unix:/var/run/fcgiwrap.socket;
        }
    }

}
