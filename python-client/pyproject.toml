[build-system]
requires = ["setuptools>=61", "wheel", "grpcio-tools", "protobuf<=3.20.3"]
build-backend = "setuptools.build_meta"

[[tool.pdm.source]]
type = "find_links"
url = "https://download.pytorch.org/whl/cpu/torch_stable.html"
name = "torch"



[tool.pdm.scripts]
proto = "setup.py grpc"
# add "-n auto" to the pytest command to parallelize the execution
test = "pytest -c pyproject.toml --cov=giskard tests --cov-report=xml"
lint = "flake8 giskard tests"
doc = "python -m sphinx_autobuild docs docs/_build/html"

[tool.pdm.dev-dependencies]
dev = [
    "typing-extensions>=4.5.0",
    "black>=23.3.0",
    "bandit>=1.7.4",
    "darglint>=1.8.1",
    "flake8>=3.9.2",
    "jupyter>=1.0.0",
    "jupyterlab>=3.4.2",
    "pre-commit>=2.19.0",
    "pydocstyle>=6.1.1",
    "pylint>=2.13.9",
    "pyupgrade>=2.32.1",
    "safety>=1.10.3",
    "mypy>=0.982",
    "deptry>=0.5.13",
    "httpretty>=1.1.4",
    "isort[colors]>=5.12.0",
    "pip>=23.1.2",
]
proto = [
    "grpcio-tools>=1.46.3",
    "mypy-protobuf>=3.2.0",
    "mypy-extensions>=0.4.3",
]
test = [
    "pytest-cov>=4.0.0",
    "pytest>=7.1.2",
    "catboost>=1.1.1",
    "requests-mock>=1.10.0",
    "tensorflow-hub>=0.12.0",
    "transformers>=4.27.4",
    "torch>=2.0.0",
    "torchdata>=0.6.0",
    "torchtext>=0.15.1",
    "portalocker>=2.0.0",
    "scikit-learn==1.0.2",
    "tensorflow-macos>=2.8.0, <2.10; sys_platform == 'darwin' and platform_machine == 'arm64'",
    "tensorflow>=2.8.0, <2.10; sys_platform != 'darwin' or platform_machine != 'arm64'",
    "tensorflow-text>=2.8.0, <2.10; sys_platform != 'darwin' or platform_machine != 'arm64'",
]
doc = [
    "furo>=2023.3.27",
    "myst-parser>=1.0.0",
    "sphinx-autobuild>=2021.3.14",
    "sphinx>=6.1.3",
    "sphinxcontrib-napoleon>=0.7",
    "sphinx-autoapi>=2.1.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-tabs>=3.4.1",
    "sphinx-design>=0.4.1",
    "sphinx-copybutton>=0.5.2",
    "sphinx-click>=4.4.0",
]

[tool.setuptools.packages.find]
include = ["giskard*"]
exclude = ["docs*", "tests*"]

[tool.setuptools.package-data]
giskard = ["**/*.html", "**/*.css", "**/*.js"]

[project.scripts]
giskard = "giskard.cli:cli"

[project.urls]
repository = "https://github.com/Giskard-AI/giskard"
homepage = "https://giskard-ai"

[project]
name = "giskard"
readme = "README.md"
license = { text = "Apache Software License 2.0" }
version = "2.0.0"
description = "Inspect your AI models visually, find bugs, give feedback 🕵️‍♀️ 💬"
authors = [
    { name = "Giskard AI", email = "hello@giskard.ai" },
]
keywords = [
    "Artificial Intelligence",
    "Machine Learning",
    "Quality",
    "MLOps"
]

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]

requires-python = ">=3.8,<3.11"
dependencies = [
    "cloudpickle>=1.1.1",
    "zstandard>=0.10.0 ",
    "mlflow-skinny>=2",
    "numpy>=1.22.0,<1.24.0", # shap doesn't work with numpy>1.24.0: module 'numpy' has no attribute 'int'
    "scikit-learn>=1.0",
    "scipy>=1.7.3,<1.9", # eli5 doesn't work with scipy>=1.9: cannot import name 'itemfreq' from 'scipy.stats'
    "shap>=0.41.0",
    "eli5>=0.12.0",
    "ipython", # eli5.show_prediction doesn't work without ipython
    "requests-toolbelt>=0.9.1",
    "mixpanel>=4.4.0",
    "grpcio>=1.39.0,<=1.51.1",
    "grpcio-status>=1.16.0,<=1.51.1",
    "requests>=2.19",
    "protobuf<=3.20.3",
    "pydantic>=1.7",
    "tenacity>=4.11.0",
    "python-daemon>=2.2.2,<3",
    "click>=7.0",
    "lockfile>=0.12.2",
    "psutil>=5.4.6",
    "tqdm>=4.42.0",
    "setuptools>=39.1.0,<68.0.0",
    "pycryptodome>=3.6.1",
    "pandas>=1.3.4,<2",
    "docker>=6.0.0",
    "chardet",  # text metadata
    "jinja2>=3",  # scan template (temporary)
]

[tool.black]
# https://github.com/psf/black
target-version = ['py38', 'py39', 'py310']
line-length = 120
color = true
skip-string-normalization = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
    | giskard/ml_worker/generated
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 38
line_length = 100

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.8
pretty = true
show_traceback = true
color_output = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
plugins = ["pydantic.mypy"]

allow_redefinition = false
check_untyped_defs = false # TODO: Andrey: fix it gradually
disallow_untyped_defs = false # TODO: Andrey: fix it gradually
disallow_any_generics = false # TODO: Andrey: fix it gradually
disallow_incomplete_defs = false # TODO: Andrey: fix it gradually
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = false # TODO: Andrey: fix it gradually
strict_equality = false # TODO: Andrey: fix it gradually
strict_optional = false # TODO: Andrey: fix it gradually
warn_no_return = false
warn_redundant_casts = true
warn_return_any = false
warn_unreachable = true
warn_unused_configs = false
warn_unused_ignores = false

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs = ["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]
# Extra options:
addopts = [
    "--strict-markers",
    "--tb=short",
    "--doctest-modules",
    "--doctest-continue-on-failure",
]
