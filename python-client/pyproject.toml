# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
giskard = "giskard.cli:cli"

[tool.poetry]
name = "giskard"
version = "1.9.1"
description = "Inspect your AI models visually, find bugs, give feedback üïµÔ∏è‚Äç‚ôÄÔ∏è üí¨"
readme = "README.md"
authors = ["Giskard AI <hello@giskard.ai>"]
license = "Apache Software License 2.0"
repository = "https://github.com/Giskard-AI/python-client"
homepage = "https://github.com/Giskard-AI/python-client"
include = ["giskard/ml_worker/generated/*"]

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = [
    "Artificial Intelligence",
    "Machine Learning",
    "Quality",
    "MLOps"
]

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]



[tool.poetry.dependencies]
python = ">=3.8,<3.11"
# serialization
cloudpickle = ">=2.0.0"
zstandard = ">=0.18.0"
mlflow-skinny = ">=2"
#ML
numpy = ">=1.21.6,<1.22.0"
scikit-learn = ">=1.0"
scipy = ">=1.7.2,<1.8"
shap = ">=0.41.0"
eli5 = ">=0.13.0"
#Communication
requests-toolbelt = "^0.10.1"
mixpanel = "^4.10.0"
grpcio = ">=1.46.3,<=1.51.1"
grpcio-status = ">=1.46.3,<=1.51.1"
requests = "^2.28.2"
protobuf = "<3.20"
#Utils
pydantic = "^1.10.7"
tenacity = "^8.2.2"
python-daemon = "^2.3.2"
click = "^8.1.3"
lockfile = "^0.12.2"
psutil = "^5.9.4"
tqdm = "^4.65.0"
setuptools = ">=65.4.1,<68.0.0"
pycryptodome = "^3.17"

[tool.poetry.group.dev.dependencies]
typing-extensions = "^4.1.0"
black = "^22.8.0"
bandit = "^1.7.4"
darglint = "^1.8.1"
flake8 = "^3.9.2"
isort = { extras = ["colors"], version = "^5.10.1" }
jupyter = "^1.0.0"
jupyterlab = "^3.4.2"
pre-commit = "^2.19.0"
pydocstyle = "^6.1.1"
pylint = "^2.13.9"
pyupgrade = "^2.32.1"
safety = "^1.10.3"
grpcio-tools = "^1.46.3"
mypy-protobuf = "^3.2.0"
mypy-extensions = "^0.4.3"
mypy = "^0.982"
deptry = "^0.5.13"
httpretty = "^1.1.4"

[tool.poetry.group.test.dependencies]
pytest-cov = "^3.0.0"
pytest = "^7.1.2"
catboost = "^1.1.1"
requests-mock = "^1.10.0"
tensorflow-hub = "^0.12.0"
tensorflow-macos = { version = "2.8.0", markers = "sys_platform == 'darwin' and platform_machine == 'arm64'" }
tensorflow = { version = "2.8.0", markers = "sys_platform != 'darwin' or platform_machine != 'arm64'" }
tensorflow-text = { version = "2.8.2", markers = "sys_platform != 'darwin' or platform_machine != 'arm64'" }
transformers = "^4.27.4"
torch = "^2.0.0"
torchdata = "^0.6.0"
torchtext = "^0.15.1"
portalocker = ">=2.0.0"
scikit-learn = "1.0.2" # because our tests require this version


[tool.poetry.group.doc.dependencies]
myst-parser = "^1.0.0"
furo = "^2023.3.27"
sphinx-rtd-theme = "^1.2.0"
sphinx-autobuild = "^2021.3.14"
sphinx = "^6.1.3"
sphinxcontrib-napoleon = "^0.7"
sphinx-autoapi = "^2.1.0"

[tool.black]
# https://github.com/psf/black
target-version = ['py38', 'py39', 'py310']
line-length = 120
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
    | giskard/ml_worker/generated
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 38
line_length = 100

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.8
pretty = true
show_traceback = true
color_output = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
plugins = ["pydantic.mypy"]

allow_redefinition = false
check_untyped_defs = false # TODO: Andrey: fix it gradually
disallow_untyped_defs = false # TODO: Andrey: fix it gradually
disallow_any_generics = false # TODO: Andrey: fix it gradually
disallow_incomplete_defs = false # TODO: Andrey: fix it gradually
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = false # TODO: Andrey: fix it gradually
strict_equality = false # TODO: Andrey: fix it gradually
strict_optional = false # TODO: Andrey: fix it gradually
warn_no_return = false
warn_redundant_casts = true
warn_return_any = false
warn_unreachable = true
warn_unused_configs = false
warn_unused_ignores = false


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs = ["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]
# Extra options:
addopts = [
    "--strict-markers",
    "--tb=short",
    "--doctest-modules",
    "--doctest-continue-on-failure",
]

[virtualenvs]
create = true
in-project = true
