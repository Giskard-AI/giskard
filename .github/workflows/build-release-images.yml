name: Build and publish released version

on:
#  push:
#    tags:
#      - "v*.*.*"
  workflow_dispatch:

jobs:
  build-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.6.0

      - name: Set up Docker Buildx
        id: builder
        uses: docker/setup-buildx-action@master


      - name: Append ARM buildx builder from AWS
        uses: baschny/append-buildx-action@v1
        with:
          builder: ${{ steps.builder.outputs.name }}
          endpoint: ssh://${{ secrets.ARM_SSH_CONNECTION_STRING }}
          ssh_private_key: ${{ secrets.ARM_SSH_PRIVATE_KEY }}

      - name: Set tag name
        id: tag
        run: |
          echo ::set-output name=name::${GITHUB_REF#refs/*/}
          echo ::set-output name=version::${GITHUB_REF#refs/*/v}
          echo ::set-output name=latest_version::$(git ls-remote --tags origin | grep -Po "v\d+\.\d+\.\d+" | sort -hr | head -1)

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          username: giskardai
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build <current version>+latest backend image
        if: ${{ steps.tag.outputs.name == steps.tag.outputs.latest_version }}
        env:
          IMAGE: docker.io/giskardai/backend
        run: |
          docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --tag $IMAGE:latest \
          --tag $IMAGE:${{ steps.tag.outputs.version }} \
          --file backend/src/main/docker/app/app.dockerfile \
          --push \
          .

      - name: Build <current version> backend image
        if: ${{ steps.tag.outputs.name != steps.tag.outputs.latest_version }}
        env:
          IMAGE: docker.io/giskardai/backend
        run: |
          docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --tag $IMAGE:${{ steps.tag.outputs.version }} \
          --file backend/src/main/docker/app/app.dockerfile \
          --push \
          .

      - name: Build <current version>+latest frontend image
        if: ${{ steps.tag.outputs.name == steps.tag.outputs.latest_version }}
        env:
          IMAGE: docker.io/giskardai/frontend
        run: |
          docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --tag $IMAGE:latest \
          --tag $IMAGE:${{ steps.tag.outputs.version }} \
          --push \
          frontend

      - name: Build <current version> frontend image
        if: ${{ steps.tag.outputs.name != steps.tag.outputs.latest_version }}
        env:
          IMAGE: docker.io/giskardai/frontend
        run: |
          docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --tag $IMAGE:${{ steps.tag.outputs.version }} \
          --push \
          frontend

      - name: Build <current version>+latest global image
        if: ${{ steps.tag.outputs.name == steps.tag.outputs.latest_version }}
        env:
          IMAGE: docker.io/giskardai/giskard
        run: |
          docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --tag $IMAGE:latest \
          --tag $IMAGE:${{ steps.tag.outputs.version }} \
          --file Dockerfile \
          --push \
          .

      - name: Build <current version> global image
        if: ${{ steps.tag.outputs.name != steps.tag.outputs.latest_version }}
        env:
          IMAGE: docker.io/giskardai/giskard
        run: |
          docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --tag $IMAGE:${{ steps.tag.outputs.version }} \
          --file Dockerfile \
          --push \
          .

      - name: Invoke deployment hook
        if: ${{ steps.tag.outputs.name == steps.tag.outputs.latest_version }}
        run: |
          curl -L --silent --max-time 900 ${{ secrets.TEST_SERVER_WEBHOOK_URL_BASE }}/redeploy-prod 

      - name: Cleanup containers
        run: docker builder prune --force --keep-storage=10GB
