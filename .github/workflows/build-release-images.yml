name: Build and publish released version

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0

      - name: Set up Docker Buildx
        id: builder
        uses: docker/setup-buildx-action@master


      - name: "Append ARM buildx builder from AWS"
        uses: baschny/append-buildx-action@v1
        with:
          builder: ${{ steps.builder.outputs.name }}
          endpoint: ssh://${{ secrets.ARM_SSH_CONNECTION_STRING }}
          ssh_private_key: ${{ secrets.ARM_SSH_PRIVATE_KEY }}

      - name: Set tag name
        id: tag
        run: |
          echo ::set-output name=name::${GITHUB_REF#refs/*/}
          echo ::set-output name=version::${GITHUB_REF#refs/*/v}
          echo ::set-output name=latest_version::$(git ls-remote --tags origin | grep -Po "v\d+\.\d+\.\d+" | sort -hr | head -1)

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push <current version>
        uses: docker/bake-action@master
        env:
          TAG: ${{ steps.tag.outputs.version }}
        with:
          push: ${{ steps.extract_branch.outputs.branch == 'main' }}
          set: |
            *.platform=linux/amd64
            *.platform=linux/arm64

      - name: Build and push latest
        uses: docker/bake-action@master
        env:
          TAG: latest
        with:
          push: ${{ steps.extract_branch.outputs.branch == 'main' }}
          set: |
            *.platform=linux/amd64
            *.platform=linux/arm64

      - name: Invoke deployment hook
        run: |
          curl -L --silent --max-time 900 ${{ secrets.TEST_SERVER_WEBHOOK_URL_BASE }}/redeploy-prod 

      - name: Remove containers and volumes
        run: |
          docker-compose down -v --remove-orphans
          docker builder prune --force --keep-storage=10GB
        
