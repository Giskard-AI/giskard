name: Build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-back:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Extract source branch name
        id: extract_source_branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_HEAD_REF})"

      - name: Print branch name
        shell: bash
        run: env
      - name: Print dependabot
        shell: bash
        run: echo ${{ startsWith(steps.extract_source_branch.outputs.branch, 'dependabot/') }}

      - name: Checkout code
        uses: actions/checkout@v3.1.0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        if: ${{ !startsWith(steps.extract_source_branch.outputs.branch, 'dependabot/') }}
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Cache Frontend dependencies
        uses: actions/cache@v3
        with:
          path: giskard-frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('giskard-frontend/package-lock.json')}}
          restore-keys: ${{ runner.os }}-frontend

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: giskard-client/.venv
          key: ${{ runner.os }}-client-${{ hashFiles('giskard-client/poetry.lock')}}
          restore-keys: ${{ runner.os }}-client

      - name: Build and analyze with sonar
        if: ${{ !startsWith(steps.extract_source_branch.outputs.branch, 'dependabot/') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: ./gradlew build jacocoTestReport sonarqube --info --parallel

      - name: Build and analyze without sonar
        if: ${{ startsWith(steps.extract_source_branch.outputs.branch, 'dependabot/') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: ./gradlew build --info --parallel