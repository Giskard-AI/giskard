title: Performance
id: performance
order: 3
items:
  - id: auc
    title: AUC
    hint: Test if the AUC is high enough for a slice
    isMultipleDatasets: false
    isGroundTruthRequired: true
    modelTypes:
      - MULTICLASS_CLASSIFICATION
      - BINARY_CLASSIFICATION
    # language=Python
    code: |-
      """
      Summary: Test if the AUC is high enough for a slice

      Description: Test if the model AUC performance is higher than a threshold for a given slice

      Example: The test is passed when the AUC for women is higher than 0.7

      Args:
          actual_slice(GiskardDataset):
              Slice of the actual dataset
          model(GiskardModel):
              Model used to compute the test
          threshold(float):
              Threshold value of AUC metrics

      Returns:
          total rows tested:
              Length of slice_df tested
          metric:
              The AUC performance metric
          passed:
              tRUE if AUC metrics > threshold

      """
      tests.performance.test_auc(
            actual_slice=actual_ds.slice(lambda df: df.head(len(df) // 2)),
            model=model,
            threshold=0.7
        )

  - id: f1
    title: F1
    hint: Test if the F1 score is high enough for a slice
    modelTypes:
      - MULTICLASS_CLASSIFICATION
      - BINARY_CLASSIFICATION
    isMultipleDatasets: false
    isGroundTruthRequired: true
    # language=Python
    code: |-
      """
      Summary: Test if the F1 score is high enough for a slice

      Description: Test if the model F1 score is higher than a defined threshold for a given slice

      Example: The test is passed when F1 score for women is higher than 0.7

      Args:
          actual_slice(GiskardDataset):
              Slice of the actual dataset
          model(GiskardModel):
              Model used to compute the test
          threshold(float):
              Threshold value for F1 Score

      Returns:
          total rows tested:
              Length of slice_df tested
          metric:
              The F1 score metric
          passed:
              TRUE if F1 Score metrics > threshold
      """
      tests.performance.test_f1(
          actual_slice=actual_ds.slice(lambda df: df.head(len(df) // 2)),
          model=model,
          threshold=0.7
      )
  - id: diff_f1
    title: F1 difference
    hint: Test if the F1 score is equal between two samples
    isMultipleDatasets: false
    isGroundTruthRequired: true
    modelTypes:
      - MULTICLASS_CLASSIFICATION
      - BINARY_CLASSIFICATION
    # language=Python
    code: |-
      """
      Summary: Test if the F1 score is equal between two samples

      Description: Test if the absolute percentage change in model F1 Score between two samples
      is lower than a threshold

      Example: The test is passed when the F1 Score for females has a difference lower than 10% from the
      F1 Score for males. For example, if the F1 Score for males is 0.8 (actual_slice) and the F1 Score  for
      females is 0.6 (reference_slice) then the absolute percentage F1 Score  change is 0.2 / 0.8 = 0.25
      and the test will fail

      Args:
          actual_slice(GiskardDataset):
              Slice of the actual dataset
          reference_slice(GiskardDataset):
              Slice of the actual dataset
          model(GiskardModel):
              Model used to compute the test
          threshold(float):
              Threshold value for F1 Score difference

      Returns:
          total rows tested:
              Length of actual dataset
          metric:
              The F1 Score difference  metric
          passed:
              TRUE if F1 Score difference < threshold

      """
      tests.performance.test_diff_f1(
          actual_slice=actual_ds.slice(lambda df: df.head(len(df) // 2)),
          reference_slice=actual_ds.slice(lambda df: df.tail(len(df) // 2)),
          model=model,
          threshold=0.1
      )
  - id: diff_reference_actual_f1
    title: F1 Reference Actual difference
    hint: Test if the F1 score is equal between reference and actual dataset
    isMultipleDatasets: true
    isGroundTruthRequired: true
    modelTypes:
      - MULTICLASS_CLASSIFICATION
      - BINARY_CLASSIFICATION
    # language=Python
    code: |-
      """
      Summary: Test if the F1 score is equal between reference and actual dataset

      Description: Test if the absolute percentage change in model F1 Score between reference and actual data
      is lower than a threshold

      Example: The test is passed when the F1 Score for reference dataset for females has a difference lower
      than 10% from the F1 Score for actual dataset for females . For example, if the F1 Score for reference
      dataset for females is 0.8 (reference_slice) and the F1 Score  for actual dataset is 0.6 (actual_slice) then
      the absolute percentage F1 Score  change is 0.2 / 0.8 = 0.25 and the test will fail.

      Args:
          actual_slice(GiskardDataset):
              Slice of actual dataset
          reference_slice(GiskardDataset):
              Slice of reference dataset
          model(GiskardModel):
              Model used to compute the test
          threshold(float):
              Threshold value for F1 Score difference


      Returns:
          metric:
              The F1 Score difference  metric
          passed:
              TRUE if F1 Score difference < threshold

      """
      tests.performance.test_diff_reference_actual_f1(
          reference_slice=reference_ds.slice(lambda df: df.head(len(df) // 2)),
          actual_slice=actual_ds.slice(lambda df: df.tail(len(df) // 2)),
          model=model,
          threshold=0.1
      )

  - id: accuracy
    title: Accuracy
    hint: Test if the Accuracy is high enough for a slice
    isMultipleDatasets: false
    isGroundTruthRequired: true
    modelTypes:
      - MULTICLASS_CLASSIFICATION
      - BINARY_CLASSIFICATION
    # language=Python
    code: |-
      """
      Summary: Test if the Accuracy is high enough for a slice

      Description: Test if the model Accuracy is higher than a threshold for a given slice

      Example: The test is passed when the Accuracy for women is higher than 0.7

      Args:
          actual_slice(GiskardDataset):
              Slice of the actual dataset
          model(GiskardModel):
              Model used to compute the test
          threshold(float):
              Threshold value for Accuracy

      Returns:
          total rows tested:
              Length of slice_df tested
          metric:
              The Accuracy metric
          passed:
              TRUE if Accuracy metrics > threshold

      """
      tests.performance.test_accuracy(
          actual_slice=actual_ds.slice(lambda df: df.head(len(df) // 2)),
          model=model,
          threshold=0.7
      )
  - id: diff_accuracy
    title: Accuracy difference
    hint: Test if the Accuracy is equal between the two samples
    isMultipleDatasets: false
    isGroundTruthRequired: true
    modelTypes:
      - MULTICLASS_CLASSIFICATION
      - BINARY_CLASSIFICATION
    # language=Python
    code: |-
      """
      Summary: Test if the Accuracy is equal between the two samples

      Description: Test if the absolute percentage change of model Accuracy between two samples is lower than a threshold

      Example: The test is passed when the Accuracy for females has a difference lower than 10% from the
      Accuracy for males. For example, if the Accuracy for males is 0.8 (actual_slice) and the Accuracy  for
      females is 0.6 (reference_slice) then the absolute percentage Accuracy change is 0.2 / 0.8 = 0.25
      and the test will fail

      Args:
          actual_slice(GiskardDataset):
              Slice of the actual dataset
          reference_slice(GiskardDataset):
              Slice of the actual dataset
          model(GiskardModel):
              Model used to compute the test
          threshold(float):
              Threshold value for Accuracy Score difference

      Returns:
          total rows tested:
              Length of actual dataset
          metric:
              The Accuracy difference  metric
          passed:
              TRUE if Accuracy difference < threshold
      """
      tests.performance.test_diff_accuracy(
          actual_slice=actual_ds.slice(lambda df: df.head(len(df) // 2)),
          reference_slice=actual_ds.slice(lambda df: df.tail(len(df) // 2)),
          model=model,
          threshold=0.1
      )
  - id: diff_reference_actual_accuracy
    title: Accuracy Reference Actual difference
    hint: Test if the Accuracy is equal between reference and actual dataset
    isMultipleDatasets: true
    isGroundTruthRequired: true
    modelTypes:
      - MULTICLASS_CLASSIFICATION
      - BINARY_CLASSIFICATION
    # language=Python
    code: |-
      """
      Summary: Test if the Accuracy is equal between reference and actual dataset

      Description: Test if the absolute percentage change in model Accuracy between reference and actual data
      is lower than a threshold

      Example: The test is passed when the Accuracy for reference dataset for females has a difference lower
      than 10% from the Accuracy for actual dataset for females. For example, if the Accuracy for reference
      dataset for females is 0.8 (reference_slice) and the Accuracy  for actual dataset for females is 0.6 (actual_slice)
      then the absolute percentage Accuracy  change is 0.2 / 0.8 = 0.25 and the test will fail.

      Args:
          actual_slice(GiskardDataset):
              Slice of actual dataset
          reference_slice(GiskardDataset):
              Slice of reference dataset
          model(GiskardModel):
              Model used to compute the test
          threshold(float):
              Threshold value for Accuracy difference

      Returns:
          metric:
              The Accuracy difference  metric
          passed:
              TRUE if Accuracy difference < threshold
      """
      tests.performance.test_diff_reference_actual_accuracy(
          actual_slice=actual_ds.slice(lambda df: df.head(len(df) // 2)),
          reference_slice=reference_ds.slice(lambda df: df.tail(len(df) // 2)),
          model=model,
          threshold=0.1
      )
  - id: precision
    title: Precision
    hint: Test if the Precision is high enough for a slice
    isMultipleDatasets: false
    isGroundTruthRequired: true
    modelTypes:
      - MULTICLASS_CLASSIFICATION
      - BINARY_CLASSIFICATION
    # language=Python
    code: |-
      """
      Summary: Test if the Precision is high enough for a slice

      Description: Test if the model Precision is higher than a threshold for a given slice

      Example: The test is passed when the Precision for women is higher than 0.7

      Args:
          actual_slice(GiskardDataset):
              Slice of the actual dataset
          model(GiskardModel):
              Model used to compute the test
          threshold(float):
              Threshold value for Precision

      Returns:
          total rows tested:
              Length of slice_df tested
          metric:
              The Precision metric
          passed:
              TRUE if Precision metrics > threshold

      """
      tests.performance.test_precision(
          actual_slice=actual_ds.slice(lambda df: df.head(len(df) // 2)),
          model=model,
          threshold=0.7
      )
  - id: diff_precision
    title: Precision difference
    hint: Test if the Precision is equal between the two samples
    isMultipleDatasets: false
    isGroundTruthRequired: true
    modelTypes:
      - MULTICLASS_CLASSIFICATION
      - BINARY_CLASSIFICATION
    # language=Python
    code: |-
      """
      Summary: Test if the Precision is equal between the two samples

      Description: Test if the absolute percentage change of model Precision between two samples is lower than a threshold

      Example: The test is passed when the Precision for females has a difference lower than 10% from the
      Accuracy for males. For example, if the Precision for males is 0.8 (actual_slice) and the Precision  for
      females is 0.6 (reference_slice) then the absolute percentage Precision change is 0.2 / 0.8 = 0.25
      and the test will fail

      Args:
          actual_slice(GiskardDataset):
              Slice of the actual dataset
          reference_slice(GiskardDataset):
              Slice of the actual dataset
          model(GiskardModel):
              Model used to compute the test
          threshold(float):
              Threshold value for Precision difference

      Returns:
          total rows tested:
              Length of actual dataset
          metric:
              The Precision difference  metric
          passed:
              TRUE if Precision difference < threshold
      """
      tests.performance.test_diff_precision(
          actual_slice=actual_ds.slice(lambda df: df.head(len(df) // 2)),
          reference_slice=actual_ds.slice(lambda df: df.tail(len(df) // 2)),
          model=model,
          threshold=0.1
      )
  - id: recall
    title: Recall
    hint: Test if the Recall is high enough for a slice
    isMultipleDatasets: false
    isGroundTruthRequired: true
    modelTypes:
      - MULTICLASS_CLASSIFICATION
      - BINARY_CLASSIFICATION
    # language=Python
    code: |-
      """
      Summary: Test if the Recall is high enough for a slice

      Description: Test if the model Recall is higher than a threshold for a given slice

      Example: The test is passed when the Recall for women is higher than 0.7

      Args:
          actual_slice(GiskardDataset):
              Slice of the actual dataset
          model(GiskardModel):
              Model used to compute the test
          threshold(float):
              Threshold value for Recall

      Returns:
          total rows tested:
              Length of slice_df tested
          metric:
              The Recall metric
          passed:
              TRUE if Recall metric > threshold

      """
      tests.performance.test_recall(
          actual_slice=actual_ds.slice(lambda df: df.head(len(df) // 2)),
          model=model,
          threshold=0.7
      )
  - id: diff_recall
    title: Recall difference
    hint: Test if the Recall is equal between the two samples
    isMultipleDatasets: false
    isGroundTruthRequired: true
    modelTypes:
      - MULTICLASS_CLASSIFICATION
      - BINARY_CLASSIFICATION
    # language=Python
    code: |-
      """
      Summary: Test if the Recall is equal between the two samples

      Description: Test if the absolute percentage change of model Recall between two samples is lower than a threshold

      Example: The test is passed when the Recall for females has a difference lower than 10% from the
      Accuracy for males. For example, if the Recall for males is 0.8 (actual_slice) and the Recall  for
      females is 0.6 (reference_slice) then the absolute percentage Recall change is 0.2 / 0.8 = 0.25
      and the test will fail

      Args:
          actual_slice(GiskardDataset):
              Slice of the actual dataset
          reference_slice(GiskardDataset):
              Slice of the actual dataset
          model(GiskardModel):
              Model used to compute the test
          threshold(float):
              Threshold value for Recall difference

      Returns:
          total rows tested:
              Length of actual dataset
          metric:
              The Recall difference  metric
          passed:
              TRUE if Recall difference < threshold
      """
      tests.performance.test_diff_recall(
          actual_slice=actual_ds.slice(lambda df: df.head(len(df) // 2)),
          reference_slice=actual_ds.slice(lambda df: df.tail(len(df) // 2)),
          model=model,
          threshold=0.1
      )
  - id: rmse
    title: RMSE
    hint: Test if  the Root Mean Square Error value is low enough for the dataset
    isMultipleDatasets: false
    isGroundTruthRequired: true
    modelTypes:
      - REGRESSION
    # language=Python
    code: |-
      """
      Summary: Test if  the Root Mean Square Error value is low enough for the dataset

      Description: Test if the model RMSE is lower than a threshold

      Example: The test is passed when the RMSE is lower than 10

      Args:
          actual_slice(GiskardDataset):
              Slice of actual dataset
          model(GiskardModel):
              Model used to compute the test
          threshold(float):
              Threshold value for RMSE

      Returns:
          total rows tested:
              Length of slice_df tested
          metric:
              The RMSE metric
          passed:
              TRUE if RMSE metric < threshold

      """
      tests.performance.test_rmse(
          actual_slice=actual_ds.slice(lambda df: df.head(len(df) // 2)),
          model=model,
          threshold=10
      )
  - id: diff_rmse
    title: RMSE difference
    hint: Test if the RMSE is equal between the two samples
    isMultipleDatasets: false
    isGroundTruthRequired: true
    modelTypes:
      - REGRESSION
    # language=Python
    code: |-
      """
      Summary: Test if the RMSE is equal between the two samples

      Description: Test if the absolute percentage change of model RMSE between two samples is lower than a threshold

      Example: The test is passed when the RMSE for females has a difference lower than 10% from the
      RMSE for males. For example, if the RMSE for males is 0.8 (actual_slice) and the RMSE  for
      females is 0.6 (reference_slice) then the absolute percentage RMSE change is 0.2 / 0.8 = 0.25
      and the test will fail

      Args:
          actual_slice(GiskardDataset):
              Slice of the actual dataset
          reference_slice(GiskardDataset):
              Slice of the actual dataset
          model(GiskardModel):
              Model used to compute the test
          threshold(float):
              Threshold value for RMSE difference

      Returns:
          total rows tested:
              Length of actual dataset
          metric:
              The RMSE difference  metric
          passed:
              TRUE if RMSE difference < threshold
      """
      tests.performance.test_diff_rmse(
          actual_slice=actual_ds.slice(lambda df: df.head(len(df) // 2)),
          reference_slice=actual_ds.slice(lambda df: df.tail(len(df) // 2)),
          model=model,
          threshold=0.1
      )
  - id: diff_reference_actual_rmse
    title: RMSE Reference Actual difference
    hint: Test if the RMSE is equal between two slices of reference and actual dataset
    isMultipleDatasets: true
    isGroundTruthRequired: true
    modelTypes:
      - REGRESSION
    # language=Python
    code: |-
      """
      Summary: Test if the RMSE is equal between two slices of reference and actual dataset

      Description: Test if the absolute percentage change in model RMSE between slices of  reference and actual data
      is lower than a threshold

      Example: The test is passed when the RMSE for reference dataset for females  has a difference lower
      than 10% from the RMSE for females in actual dataset. For example, if the RMSE for reference dataset
      for females is 0.8 (reference_slice) and the RMSE  for actual dataset for females is 0.6 (actual_slice) then
      the absolute percentage RMSE  change is 0.2 / 0.8 = 0.25 and the test will fail.

      Args:
          actual_slice(GiskardDataset):
              Slice of actual dataset
          reference_slice(GiskardDataset):
              Slice of reference dataset
          model(GiskardModel):
              Model used to compute the test
          threshold(float):
              Threshold value for RMSE difference

      Returns:
          metric:
              The RMSE difference  metric
          passed:
              TRUE if RMSE difference < threshold

      """
      tests.performance.test_diff_reference_actual_rmse(
          actual_slice=actual_ds.slice(lambda df: df.head(len(df) // 2)),
          reference_slice=reference_ds.slice(lambda df: df.tail(len(df) // 2)),
          model=model,
          threshold=0.1
      )
  - id: mae
    title: MAE
    hint: Test if  the negative Mean Absolute Error value is low enough for the dataset
    isMultipleDatasets: false
    isGroundTruthRequired: true
    modelTypes:
      - REGRESSION
    # language=Python
    code: |-
      """
      Summary: Test if  the negative Mean Absolute Error value is low enough for the dataset

      Description: Test if the model Mean Absolute Error is lower than a threshold

      Example: The test is passed when the MAE is lower than 10

      Args:
          actual_slice(GiskardDataset):
              Slice of actual dataset
          model(GiskardModel):
              Model used to compute the test
          threshold(float):
              Threshold value for MAE

      Returns:
          total rows tested:
              Length of slice_df tested
          metric:
              The MAE metric
          passed:
              TRUE if MAE metric < threshold
      """
      tests.performance.test_mae(
            actual_slice=actual_ds.slice(lambda df: df.head(len(df) // 2)),
            model=model,
            threshold=10
        )
  - id: r2
    title: R2
    hint: Test if  the R-Squared value is high enough for the dataset
    isMultipleDatasets: false
    isGroundTruthRequired: true
    modelTypes:
     - REGRESSION
    # language=Python
    code: |-
      """
      Summary: Test if  the R-Squared value is high enough for the dataset

      Description: Test if the model R-Squared is higher than a threshold

      Example: The test is passed when the R-Squared is higher than 0.7

      Args:
          actual_slice(GiskardDataset):
              Slice of actual dataset
          model(GiskardModel):
              Model used to compute the test
          threshold(float):
              Threshold value for R-Squared

      Returns:
          total rows tested:
              Length of slice_df tested
          metric:
              The R-Squared metric
          passed:
              TRUE if R-Squared metric > threshold

      """
      tests.performance.test_r2(
          actual_slice=actual_ds.slice(lambda df: df.head(len(df) // 2)),
          model=model,
          threshold=0.7
      )
